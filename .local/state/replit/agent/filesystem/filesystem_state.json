{"file_contents":{"replit.md":{"content":"# ANDOVERVIEW - Project Documentation\n\n## Overview\nA modern, dynamic newspaper website prototype for ANDOVERVIEW with full backend functionality using Node.js/Express and SQLite. The project features user authentication, article management, commenting system, and responsive design.\n\n## Recent Changes\n\n### 🔒 Critical Security Fixes (September 14, 2025)\n- **FIXED**: Unsafe static file serving that exposed entire repository including backend source code\n- **FIXED**: Database file exposure (my-database.sqlite was publicly accessible)\n- **IMPLEMENTED**: Secure whitelisted static file serving for only necessary frontend directories\n- **ADDED**: Explicit blocking of `/backend/*` paths with 403 responses\n- **SECURED**: Session secret moved to environment variable (SESSION_SECRET)\n- **CONFIGURED**: Trust proxy settings for deployment readiness\n- **TESTED**: All security measures verified working, frontend functionality maintained\n\n**Security Test Results:**\n- ✅ Index.html serves at root (200)\n- ✅ CSS, JS, and assets serve correctly (200) \n- ✅ Backend files blocked (403)\n- ✅ Database files blocked (403)\n- ✅ Unwhitelisted directories blocked (404)\n\n## Project Architecture\n\n### Frontend Structure\n- **Static Assets**: `/assets/` (images, icons, logos)\n- **Stylesheets**: `/css/` (modular component-based CSS)\n- **JavaScript**: `/js/` (modular ES6 components and utilities)\n- **Entry Point**: `index.html` (single-page application)\n\n### Backend Structure (Secure)\n- **Server**: `backend/server.js` (Express server with security middleware)\n- **Database**: `backend/database.js` (SQLite with user/article/comment models)\n- **API Routes**: `backend/api-router.js` & `backend/auth-router.js`\n- **Content**: `backend/content-parser.js` (article processing)\n\n### Security Features\n- Whitelisted static file serving (only `/assets`, `/css`, `/js`)\n- Protected backend source code and database\n- Environment-based session secrets\n- Secure cookie configuration\n- Trust proxy configuration for deployments\n\n### Database Schema\n- **Users**: Authentication with custom avatars\n- **Articles**: Like counts and metadata\n- **Comments**: Threaded commenting system with foreign keys\n\n## User Preferences\n- **Coding Style**: Modular architecture with separated concerns\n- **Security**: Prioritize secure defaults and environment-based configuration\n- **Performance**: Efficient static file serving and database queries\n- **Maintainability**: Clear separation between frontend and backend code\n\n## Deployment Notes\n- Server binds to `0.0.0.0:5000` for Replit compatibility\n- Uses environment variables for sensitive configuration\n- Trust proxy configured for production deployments\n- Secure session management with httpOnly cookies","size_bytes":2733},"backend/api-router.js":{"content":"const express = require('express');\nconst multer = require('multer');\nconst path = require('path');\nconst fs = require('fs').promises;\nconst { initializeDatabase, isAuthenticated } = require('./database.js');\nconst { getCombinedDataFromFileSystem } = require('./content-parser.js');\n\nconst router = express.Router();\n\nlet cachedData = null;\nlet lastCacheTime = 0;\nconst CACHE_DURATION = 5 * 60 * 1000;\n\nconst storage = multer.diskStorage({\n    destination: function (req, file, cb) {\n        const dir = path.join(__dirname, '../uploads/avatars');\n        fs.mkdir(dir, { recursive: true })\n            .then(() => cb(null, dir))\n            .catch(err => cb(err, dir));\n    },\n    filename: function (req, file, cb) {\n        const userId = req.session.user.user_id;\n        const fileExtension = path.extname(file.originalname);\n        cb(null, `avatar_${userId}_${Date.now()}${fileExtension}`);\n    }\n});\n\nconst upload = multer({ storage: storage });\n\nrouter.get('/articles', async (req, res) => {\n    const db = await initializeDatabase();\n\n    const now = Date.now();\n    if (!cachedData || (now - lastCacheTime > CACHE_DURATION)) {\n        cachedData = await getCombinedDataFromFileSystem();\n        lastCacheTime = now;\n    }\n\n    const { articles, staff } = cachedData;\n    let articlesWithData = [];\n\n    try {\n        const articleIds = articles.map(article => article.id);\n\n        const articleDataPromises = articleIds.map(async (id) => {\n            let dynamicData = await db.get('SELECT likes FROM articles WHERE article_id = ?', id);\n            if (!dynamicData) {\n                await db.run('INSERT OR IGNORE INTO articles (article_id, likes) VALUES (?, 0)', id);\n                dynamicData = { likes: 0 };\n            }\n            return { article_id: id, likes: dynamicData.likes };\n        });\n\n        const articleDynamicData = await Promise.all(articleDataPromises);\n        const articleDataMap = new Map(articleDynamicData.map(data => [data.article_id, data]));\n\n        articlesWithData = articles.map(article => {\n            const data = articleDataMap.get(article.id) || { likes: 0 };\n            return { ...article, likes: data.likes };\n        });\n\n        if (req.session.user) {\n            const [userLikes, userBookmarks] = await Promise.all([\n                db.all('SELECT article_id FROM user_likes WHERE user_id = ?', req.session.user.user_id),\n                db.all('SELECT article_id FROM user_bookmarks WHERE user_id = ?', req.session.user.user_id)\n            ]);\n\n            const likedArticleIds = userLikes.map(like => like.article_id);\n            const bookmarkedArticleIds = userBookmarks.map(bookmark => bookmark.article_id);\n\n            articlesWithData = articlesWithData.map(article => ({\n                ...article,\n                user_has_liked: likedArticleIds.includes(article.id),\n                user_has_bookmarked: bookmarkedArticleIds.includes(article.id)\n            }));\n        }\n\n        res.json({ articles: articlesWithData, staff });\n\n    } catch (error) {\n        console.error('Error augmenting articles with DB data:', error);\n        res.status(500).json({ error: 'Failed to retrieve article data.' });\n    }\n});\n\nrouter.post('/articles/:id/like', isAuthenticated, async (req, res) => {\n    const db = await initializeDatabase();\n    const articleId = req.params.id;\n    const { action } = req.body;\n    const { user_id } = req.session.user;\n\n    try {\n        const existingLike = await db.get('SELECT * FROM user_likes WHERE user_id = ? AND article_id = ?', user_id, articleId);\n\n        if (action === 'like' && !existingLike) {\n            await db.run('INSERT INTO user_likes (user_id, article_id) VALUES (?, ?)', user_id, articleId);\n            await db.run('UPDATE articles SET likes = likes + 1 WHERE article_id = ?', articleId);\n        } else if (action === 'unlike' && existingLike) {\n            await db.run('DELETE FROM user_likes WHERE user_id = ? AND article_id = ?', user_id, articleId);\n            await db.run('UPDATE articles SET likes = MAX(0, likes - 1) WHERE article_id = ?', articleId);\n        }\n\n        const result = await db.get('SELECT likes FROM articles WHERE article_id = ?', articleId);\n        const userHasLiked = !!(await db.get('SELECT 1 FROM user_likes WHERE user_id = ? AND article_id = ?', user_id, articleId));\n\n        res.status(200).json({ likes: result ? result.likes : 0, user_has_liked: userHasLiked });\n    } catch (error) {\n        console.error('Error processing like:', error);\n        res.status(500).json({ error: 'An error occurred while processing your request.' });\n    }\n});\n\nrouter.post('/articles/:id/bookmark', isAuthenticated, async (req, res) => {\n    const db = await initializeDatabase();\n    const articleId = req.params.id;\n    const { action } = req.body;\n    const { user_id } = req.session.user;\n\n    try {\n        const existingBookmark = await db.get('SELECT * FROM user_bookmarks WHERE user_id = ? AND article_id = ?', user_id, articleId);\n\n        if (action === 'bookmark' && !existingBookmark) {\n            await db.run('INSERT INTO user_bookmarks (user_id, article_id) VALUES (?, ?)', user_id, articleId);\n        } else if (action === 'unbookmark' && existingBookmark) {\n            await db.run('DELETE FROM user_bookmarks WHERE user_id = ? AND article_id = ?', user_id, articleId);\n        }\n\n        const userHasBookmarked = !!(await db.get('SELECT 1 FROM user_bookmarks WHERE user_id = ? AND article_id = ?', user_id, articleId));\n\n        res.status(200).json({ user_has_bookmarked: userHasBookmarked, bookmarked: userHasBookmarked });\n    } catch (error) {\n        console.error('Error processing bookmark:', error);\n        res.status(500).json({ error: 'An error occurred while processing your request.' });\n    }\n});\n\n\nrouter.get('/articles/:id/comments', async (req, res) => {\n    const db = await initializeDatabase();\n    const articleId = req.params.id;\n    const comments = await db.all(`\n        SELECT\n            c.comment_id, c.article_id, c.author_id, c.author_name, c.content, c.timestamp,\n            u.custom_avatar\n        FROM comments c\n        LEFT JOIN users u ON c.author_id = u.user_id\n        WHERE c.article_id = ?\n        ORDER BY c.timestamp DESC\n    `, articleId);\n    res.json(comments);\n});\n\nrouter.post('/articles/:id/comments', isAuthenticated, async (req, res) => {\n    const db = await initializeDatabase();\n    const articleId = req.params.id;\n    const { content } = req.body;\n    const { user_id, username } = req.session.user;\n\n    if (!content) {\n        return res.status(400).json({ error: 'Comment content is required.' });\n    }\n\n    try {\n        const result = await db.run(\n            'INSERT INTO comments (article_id, author_id, author_name, content) VALUES (?, ?, ?, ?)',\n            articleId,\n            user_id,\n            username,\n            content\n        );\n\n        const newComment = await db.get(`\n            SELECT\n                c.comment_id, c.article_id, c.author_id, c.author_name, c.content, c.timestamp,\n                u.custom_avatar\n            FROM comments c\n            LEFT JOIN users u ON c.author_id = u.user_id\n            WHERE c.comment_id = ?\n        `, result.lastID);\n        res.status(201).json(newComment);\n    } catch (error) {\n        console.error('Error posting comment:', error);\n        res.status(500).json({ error: 'An error occurred while posting the comment.' });\n    }\n});\n\nrouter.put('/comments/:commentId', isAuthenticated, async (req, res) => {\n    const db = await initializeDatabase();\n    const commentId = req.params.commentId;\n    const { content } = req.body;\n    const { user_id } = req.session.user;\n\n    if (!content) {\n        return res.status(400).json({ error: 'Comment content is required.' });\n    }\n\n    try {\n        const comment = await db.get('SELECT * FROM comments WHERE comment_id = ? AND author_id = ?', commentId, user_id);\n        if (!comment) {\n            return res.status(404).json({ error: 'Comment not found or you do not have permission to edit this comment.' });\n        }\n\n        await db.run('UPDATE comments SET content = ? WHERE comment_id = ?', content, commentId);\n        const updatedComment = await db.get('SELECT * FROM comments WHERE comment_id = ?', commentId);\n        res.status(200).json(updatedComment);\n    } catch (error) {\n        console.error('Error editing comment:', error);\n        res.status(500).json({ error: 'An error occurred while editing the comment.' });\n    }\n});\n\nrouter.delete('/comments/:commentId', isAuthenticated, async (req, res) => {\n    const db = await initializeDatabase();\n    const commentId = req.params.commentId;\n    const { user_id } = req.session.user;\n\n    try {\n        const comment = await db.get('SELECT * FROM comments WHERE comment_id = ? AND author_id = ?', commentId, user_id);\n        if (!comment) {\n            return res.status(404).json({ error: 'Comment not found or you do not have permission to delete this comment.' });\n        }\n\n        await db.run('DELETE FROM comments WHERE comment_id = ?', commentId);\n        res.status(200).json({ message: 'Comment deleted successfully.' });\n    } catch (error) {\n        console.error('Error deleting comment:', error);\n        res.status(500).json({ error: 'An error occurred while deleting the comment.' });\n    }\n});\n\nrouter.post('/articles/:id/view', isAuthenticated, async (req, res) => {\n    const db = await initializeDatabase();\n    const articleId = req.params.id;\n    const { user_id } = req.session.user;\n\n    try {\n        await db.run('INSERT OR IGNORE INTO user_article_views (user_id, article_id) VALUES (?, ?)', user_id, articleId);\n        res.status(200).json({ success: true });\n    } catch (error) {\n        console.error('Error tracking article view:', error);\n        res.status(500).json({ error: 'An error occurred while tracking the view.' });\n    }\n});\n\nrouter.get('/account/data', isAuthenticated, async (req, res) => {\n    const db = await initializeDatabase();\n    const { user_id } = req.session.user;\n\n    try {\n        const user = await db.get('SELECT username, created_at, custom_avatar FROM users WHERE user_id = ?', user_id);\n        const comments = await db.all('SELECT * FROM comments WHERE author_id = ? ORDER BY timestamp DESC', user_id);\n        const [likedArticles, bookmarkedArticles, viewedArticles] = await Promise.all([\n            db.all('SELECT article_id FROM user_likes WHERE user_id = ?', user_id),\n            db.all('SELECT article_id FROM user_bookmarks WHERE user_id = ?', user_id),\n            db.all('SELECT article_id FROM user_article_views WHERE user_id = ?', user_id)\n        ]);\n        const likedArticleIds = likedArticles.map(like => like.article_id);\n        const bookmarkedArticleIds = bookmarkedArticles.map(bookmark => bookmark.article_id);\n        const viewedArticleIds = viewedArticles.map(view => view.article_id);\n\n        res.status(200).json({\n            username: user.username,\n            joinDate: user.created_at,\n            customAvatar: user.custom_avatar,\n            stats: {\n                comments: comments.length,\n                likes: likedArticleIds.length,\n                bookmarks: bookmarkedArticleIds.length,\n                articlesViewed: viewedArticleIds.length\n            },\n            comments: comments.map(comment => ({\n                content: comment.content,\n                timestamp: comment.timestamp,\n                article_id: comment.article_id\n            })),\n            likedArticleIds,\n            bookmarkedArticleIds,\n            viewedArticleIds\n        });\n\n    } catch (error) {\n        console.error('Error fetching account data:', error);\n        res.status(500).json({ error: 'Failed to retrieve account data.' });\n    }\n});\n\nrouter.post('/account/avatar', isAuthenticated, upload.single('avatar'), async (req, res) => {\n    const db = await initializeDatabase();\n    const { user_id } = req.session.user;\n\n    try {\n        if (!req.file) {\n            return res.status(400).json({ error: 'No file uploaded' });\n        }\n\n        const uploadsDir = path.join(__dirname, '../uploads/avatars');\n        try {\n            await fs.access(uploadsDir);\n        } catch {\n            await fs.mkdir(uploadsDir, { recursive: true });\n        }\n\n        const fileExtension = path.extname(req.file.originalname);\n        const fileName = `avatar_${user_id}_${Date.now()}${fileExtension}`;\n        const filePath = path.join(uploadsDir, fileName);\n\n        await fs.rename(req.file.path, filePath);\n\n        const oldUser = await db.get('SELECT custom_avatar FROM users WHERE user_id = ?', user_id);\n        if (oldUser && oldUser.custom_avatar) {\n            const oldFilePath = path.join(__dirname, '..', oldUser.custom_avatar);\n            try {\n                await fs.unlink(oldFilePath);\n            } catch (error) {\n                console.error('Error deleting old avatar:', error);\n            }\n        }\n\n        const avatarUrl = `uploads/avatars/${fileName}`;\n        await db.run('UPDATE users SET custom_avatar = ? WHERE user_id = ?', avatarUrl, user_id);\n\n        if (req.session.user) {\n            req.session.user.custom_avatar = avatarUrl;\n        }\n\n        res.status(200).json({ avatarUrl });\n    } catch (error) {\n        console.error('Error uploading avatar:', error);\n        if (req.file && req.file.path) {\n            try {\n                await fs.unlink(req.file.path);\n            } catch (cleanupError) {\n                console.error('Error cleaning up file:', cleanupError);\n            }\n        }\n        res.status(500).json({ error: 'An error occurred while uploading the avatar.' });\n    }\n});\n\nrouter.delete('/account/avatar', isAuthenticated, async (req, res) => {\n    const db = await initializeDatabase();\n    const { user_id } = req.session.user;\n\n    try {\n        const user = await db.get('SELECT custom_avatar FROM users WHERE user_id = ?', user_id);\n\n        if (user && user.custom_avatar) {\n            const filePath = path.join(__dirname, '..', user.custom_avatar);\n            try {\n                await fs.unlink(filePath);\n            } catch (error) {\n                console.error('Error deleting avatar file:', error);\n            }\n        }\n\n        await db.run('UPDATE users SET custom_avatar = NULL WHERE user_id = ?', user_id);\n\n        if (req.session.user) {\n            req.session.user.custom_avatar = null;\n        }\n\n        res.status(200).json({ success: true });\n    } catch (error) {\n        console.error('Error removing avatar:', error);\n        res.status(500).json({ error: 'An error occurred while removing the avatar.' });\n    }\n});\n\nrouter.delete('/account', isAuthenticated, async (req, res) => {\n    const db = await initializeDatabase();\n    const { user_id } = req.session.user;\n\n    try {\n        const user = await db.get('SELECT custom_avatar FROM users WHERE user_id = ?', user_id);\n        if (user && user.custom_avatar) {\n            const filePath = path.join(__dirname, '..', user.custom_avatar);\n            try {\n                await fs.unlink(filePath);\n            } catch (error) {\n                console.error('Error deleting avatar file:', error);\n            }\n        }\n\n        await db.run('DELETE FROM users WHERE user_id = ?', user_id);\n        req.session.destroy();\n        res.status(200).json({ success: true });\n    } catch (error) {\n        console.error('Error deleting account:', error);\n        res.status(500).json({ error: 'An error occurred while deleting your account.' });\n    }\n});\n\nmodule.exports = router;","size_bytes":15593},"backend/auth-router.js":{"content":"const express = require('express');\nconst bcrypt = require('bcrypt');\nconst { initializeDatabase } = require('./database');\n\nconst router = express.Router();\nconst saltRounds = 10;\n\nconst isAuthenticated = (req, res, next) => {\n    if (req.session.user) {\n        next();\n    } else {\n        res.status(401).json({ error: 'You must be logged in to perform this action.' });\n    }\n};\n\nrouter.put('/username', isAuthenticated, async (req, res) => {\n    const db = await initializeDatabase();\n    const { newUsername } = req.body;\n    const { user_id, username: oldUsername } = req.session.user;\n\n    if (!newUsername || newUsername.length < 3) {\n        return res.status(400).json({ error: 'Username must be at least 3 characters long.' });\n    }\n\n    try {\n        const existingUser = await db.get('SELECT user_id FROM users WHERE username = ? AND user_id != ?', newUsername, user_id);\n        if (existingUser) {\n            return res.status(409).json({ error: 'That username is already taken.' });\n        }\n        \n        await Promise.all([\n             db.run('UPDATE users SET username = ? WHERE user_id = ?', newUsername, user_id),\n             db.run('UPDATE comments SET author_name = ? WHERE author_id = ?', newUsername, user_id)\n        ]);\n        \n        const updatedUser = await db.get('SELECT user_id, username, custom_avatar FROM users WHERE user_id = ?', user_id);\n        \n        req.session.user = updatedUser;\n\n        res.status(200).json({ success: true, user: updatedUser });\n    \n    } catch (error) {\n        console.error('Username change error:', error);\n        res.status(500).json({ error: 'An error occurred while changing your username.' });\n    }\n});\n\nrouter.put('/password', isAuthenticated, async (req, res) => {\n    const db = await initializeDatabase();\n    const { currentPassword, newPassword } = req.body;\n    const { user_id } = req.session.user;\n\n    if (!newPassword || newPassword.length < 6) {\n        return res.status(400).json({ error: 'New password must be at least 6 characters long.' });\n    }\n\n    try {\n        const user = await db.get('SELECT password_hash FROM users WHERE user_id = ?', user_id);\n        if (!user) {\n            return res.status(404).json({ error: 'User not found.' });\n        }\n\n        const match = await bcrypt.compare(currentPassword, user.password_hash);\n        if (!match) {\n            return res.status(401).json({ error: 'Incorrect current password.' });\n        }\n\n        const new_password_hash = await bcrypt.hash(newPassword, saltRounds);\n        await db.run('UPDATE users SET password_hash = ? WHERE user_id = ?', new_password_hash, user_id);\n\n        res.status(200).json({ success: true, message: 'Password updated successfully.' });\n\n    } catch (error) {\n        console.error('Password change error:', error);\n        res.status(500).json({ error: 'An error occurred while changing your password.' });\n    }\n});\n\n\nrouter.post('/signup', async (req, res) => {\n    const db = await initializeDatabase();\n    const { username, password } = req.body;\n    if (!username || !password || password.length < 6) {\n        return res.status(400).json({ error: 'Username and a password of at least 6 characters are required.' });\n    }\n    try {\n        const existingUser = await db.get('SELECT * FROM users WHERE username = ?', username);\n        if (existingUser) {\n            return res.status(409).json({ error: 'Username already taken.' });\n        }\n        const password_hash = await bcrypt.hash(password, saltRounds);\n        const result = await db.run('INSERT INTO users (username, password_hash) VALUES (?, ?)', username, password_hash);\n        const user = { user_id: result.lastID, username: username, custom_avatar: null };\n        req.session.user = user;\n        res.status(201).json(user);\n    } catch (error) {\n        console.error('Signup error:', error);\n        res.status(500).json({ error: 'An error occurred during signup.' });\n    }\n});\n\nrouter.post('/login', async (req, res) => {\n    const db = await initializeDatabase();\n    const { username, password } = req.body;\n    if (!username || !password) {\n        return res.status(400).json({ error: 'Username and password are required.' });\n    }\n    try {\n        const user = await db.get('SELECT * FROM users WHERE username = ?', username);\n        if (!user) {\n            return res.status(401).json({ error: 'Invalid credentials.' });\n        }\n        const match = await bcrypt.compare(password, user.password_hash);\n        if (!match) {\n            return res.status(401).json({ error: 'Invalid credentials.' });\n        }\n        const userSessionData = { user_id: user.user_id, username: user.username, custom_avatar: user.custom_avatar };\n        req.session.user = userSessionData;\n        res.status(200).json(userSessionData);\n    } catch (error) {\n        console.error('Login error:', error);\n        res.status(500).json({ error: 'An error occurred during login.' });\n    }\n});\n\nrouter.post('/logout', (req, res) => {\n    req.session.destroy(err => {\n        if (err) {\n            return res.status(500).json({ error: 'Could not log out.' });\n        }\n        res.clearCookie('connect.sid');\n        res.status(200).json({ message: 'Logged out successfully.' });\n    });\n});\n\nrouter.get('/status', async (req, res) => {\n    if (req.session.user) {\n        const db = await initializeDatabase();\n        try {\n            const user = await db.get('SELECT user_id, username, custom_avatar FROM users WHERE user_id = ?', req.session.user.user_id);\n            if (user) {\n                req.session.user = user;\n                res.status(200).json({ loggedIn: true, user });\n            } else {\n                req.session.destroy();\n                res.status(200).json({ loggedIn: false });\n            }\n        } catch (error) {\n            console.error('Error fetching user status:', error);\n            res.status(500).json({ loggedIn: false, error: 'Failed to fetch user status' });\n        }\n    } else {\n        res.status(200).json({ loggedIn: false });\n    }\n});\n\nrouter.delete('/delete', isAuthenticated, async (req, res) => {\n    const db = await initializeDatabase();\n    const { user_id } = req.session.user;\n    try {\n        await db.run('DELETE FROM users WHERE user_id = ?', user_id);\n        req.session.destroy(err => {\n            if (err) {\n                console.error('Session destruction failed after account deletion:', err);\n                res.status(200).json({ message: 'Account deleted, but session could not be cleared automatically.' });\n            } else {\n                res.clearCookie('connect.sid');\n                res.status(200).json({ message: 'Account deleted successfully.' });\n            }\n        });\n    } catch (error) {\n        console.error('Account deletion error:', error);\n        res.status(500).json({ error: 'An error occurred during account deletion.' });\n    }\n});\n\nmodule.exports = router;","size_bytes":6951},"backend/content-parser.js":{"content":"const fs = require('fs').promises;\nconst path = require('path');\n\nconst DATA_ROOT = path.join(__dirname, '..', 'data');\nconst API_PATHS = {\n    articleDir: path.join(DATA_ROOT, 'articles'),\n    staff: path.join(DATA_ROOT, 'staff.txt'),\n};\n\nconst ANDOVERVIEW_STAFF_MEMBER = {\n    id: 0,\n    name: \"ANDOVERVIEW\",\n    role: \"Editorial Board\",\n    image: \"assets/icons/andoverview-avatar.svg\",\n    bio: \"This editorial represents the collective voice and viewpoint of the ANDOVERVIEW student newspaper staff.\",\n    authorLink: \"#articles-page-editorial\"\n};\n\nconst ROLE_ORDER = [\n    \"Editor-in-Chief\", \"Managing Editor\", \"Sports Editor\", \"Opinion Editor\", \"Arts Editor\",\n    \"Editorial Board\", \"Photographer\", \"Staff Writer\", \"Contributor\"\n];\n\nconst VALID_PLACEMENTS = new Set([\n    'Top Left', 'Top Center', 'Top Right',\n    'Middle Left', 'Middle Center', 'Middle Right',\n    'Bottom Center', 'Bottom Left', 'Bottom Right'\n]);\n\nfunction isValueNA(value) {\n    return !value || value.trim().toLowerCase() === 'n/a';\n}\n\nfunction splitMultiValueString(str) {\n    if (isValueNA(str)) return [];\n    const normalizedStr = str.replace(/\\s+and\\s+/gi, ',').replace(/\\s*&\\s*/g, ',');\n    return normalizedStr.split(',')\n        .map(item => item.trim())\n        .filter(item => item.length > 0);\n}\n\nfunction parseArticleTxt(txt, filename) {\n    const article = { id: filename.split('.')[0], images: [] };\n    const separatorMatch = txt.match(/^\\s*---\\s*$|\\n\\s*\\n/m);\n    const contentIndex = separatorMatch ? separatorMatch.index + separatorMatch[0].length : -1;\n    let frontmatterText, markdownContent;\n    if (contentIndex === -1) {\n        if (txt.includes(':')) {\n            frontmatterText = txt;\n            markdownContent = '';\n        } else {\n            frontmatterText = '';\n            markdownContent = txt;\n        }\n    } else {\n        frontmatterText = txt.substring(0, contentIndex);\n        markdownContent = txt.substring(contentIndex);\n    }\n    const frontmatter = {};\n    if (frontmatterText) {\n        frontmatterText.split('\\n').forEach(line => {\n            const separatorIndex = line.indexOf(':');\n            if (separatorIndex > 0) {\n                const key = line.substring(0, separatorIndex).trim().toLowerCase();\n                const value = line.substring(separatorIndex + 1).trim();\n                frontmatter[key] = value;\n            }\n        });\n    }\n    article.title = isValueNA(frontmatter.title) ? 'Untitled Article' : frontmatter.title;\n    const rawDescription = isValueNA(frontmatter.description) ? '' : frontmatter.description;\n    article.rawDescription = rawDescription;\n    article.description = rawDescription;\n    article.date = isValueNA(frontmatter.date) ? '' : frontmatter.date;\n    article.display = isValueNA(frontmatter.display) ? 'recent' : frontmatter.display;\n    article.author = splitMultiValueString(frontmatter.author);\n    article.tags = splitMultiValueString(frontmatter.tags);\n    article.positions = splitMultiValueString(frontmatter.position);\n    const categories = splitMultiValueString(frontmatter.category);\n    const specificCategories = categories.filter(c => c.toLowerCase() !== 'articles');\n    article.category = specificCategories[0] || categories[0] || 'Uncategorized';\n    article.categories = categories;\n    for (let i = 1; i < 10; i++) {\n        const fileKey = `imagefile ${i}`;\n        if (!isValueNA(frontmatter[fileKey])) {\n            const placementKey = `imageplacement ${i}`;\n            const captionKey = `imagecaption ${i}`;\n            const creditKey = `imagecredit ${i}`;\n            let placement = frontmatter[placementKey] || 'Top Center';\n            if (!VALID_PLACEMENTS.has(placement)) {\n                placement = 'Top Center';\n            }\n            article.images.push({\n                file: frontmatter[fileKey],\n                placement: placement,\n                caption: isValueNA(frontmatter[captionKey]) ? '' : frontmatter[captionKey],\n                credit: isValueNA(frontmatter[creditKey]) ? '' : frontmatter[creditKey]\n            });\n        }\n    }\n    if (article.images.length === 0 && !isValueNA(frontmatter.image)) {\n        article.images.push({\n            file: frontmatter.image,\n            placement: 'Top Center',\n            caption: isValueNA(frontmatter.imagecaption) ? '' : frontmatter.imagecaption,\n            credit: isValueNA(frontmatter.imagecredit) ? '' : frontmatter.imagecredit\n        });\n    }\n    if (article.images.length > 0) {\n        article.image = article.images[0].file;\n    }\n    article.content = markdownContent;\n    return article;\n}\n\nfunction parseStaffTxt(txt) {\n    if (!txt) return [];\n    const blocks = txt.split(/\\n\\s*\\n/).map(block => block.trim()).filter(Boolean);\n    return blocks.map(block => {\n        const staffMember = {};\n        const lines = block.split('\\n');\n        lines.forEach(line => {\n            const separatorIndex = line.indexOf(':');\n            if (separatorIndex === -1) return;\n            const key = line.substring(0, separatorIndex).trim().toLowerCase();\n            const value = line.substring(separatorIndex + 1).trim();\n            if (key && value) {\n                staffMember[key] = value;\n            }\n        });\n        return staffMember;\n    });\n}\n\nasync function getArticles() {\n    try {\n        const articleFiles = await fs.readdir(API_PATHS.articleDir);\n        const articlePromises = articleFiles\n            .filter(filename => filename.endsWith('.txt'))\n            .map(async (filename) => {\n            try {\n                const articleTxt = await fs.readFile(path.join(API_PATHS.articleDir, filename), 'utf-8');\n                return parseArticleTxt(articleTxt, filename);\n            } catch (e) {\n                console.error(`Failed to load or parse ${filename}`, e);\n                return null;\n            }\n        });\n        const articles = (await Promise.all(articlePromises)).filter(Boolean);\n        articles.sort((a, b) => new Date(b.date) - new Date(a.date));\n        return articles;\n    } catch (error) {\n        console.error(\"Could not read article directory:\", error);\n        return [];\n    }\n}\n\nasync function getStaff() {\n    try {\n        const staffTxt = await fs.readFile(API_PATHS.staff, 'utf-8');\n        const staffData = parseStaffTxt(staffTxt);\n        return staffData.map(person => ({\n            ...person,\n            image: person.image || 'assets/icons/placeholder-staff.svg'\n        }));\n    } catch (error) {\n        console.error(\"Could not fetch or parse staff data:\", error);\n        return [];\n    }\n}\n\nasync function getCombinedDataFromFileSystem() {\n    const [articles, staff] = await Promise.all([getArticles(), getStaff()]);\n    const staffMap = new Map(staff.map(s => [s.name.toLowerCase(), s]));\n    const articlesWithWriters = articles.map(article => {\n        const isEditorial = article.categories && article.categories.some(c => c.toLowerCase() === 'editorial');\n        if (isEditorial) {\n            return { ...article, writers: [{...ANDOVERVIEW_STAFF_MEMBER, isCurrentStaff: true}] };\n        }\n        const authorNames = article.author || [];\n        const writers = authorNames.map((authorName, index) => {\n            let writer;\n            const writerData = staffMap.get(authorName.toLowerCase());\n            if (writerData) {\n                writer = { ...writerData, isCurrentStaff: true };\n            } else {\n                const formerWriter = { name: authorName, isCurrentStaff: false };\n                const positions = article.positions || [];\n                let position;\n                if (positions.length === 1 && authorNames.length > 1) {\n                    position = positions[0];\n                } else {\n                    position = positions[index];\n                }\n                if (position && !isValueNA(position)) {\n                    formerWriter.role = position;\n                }\n                writer = formerWriter;\n            }\n            if (!writer.image) {\n                writer.image = 'assets/icons/placeholder-avatar.svg';\n            }\n            return writer;\n        });\n        writers.sort((a, b) => {\n            if (a.isCurrentStaff && !b.isCurrentStaff) return -1;\n            if (!a.isCurrentStaff && b.isCurrentStaff) return 1;\n            if (a.isCurrentStaff && b.isCurrentStaff) {\n                const roleIndexA = ROLE_ORDER.indexOf(a.role);\n                const roleIndexB = ROLE_ORDER.indexOf(b.role);\n                if (roleIndexA !== roleIndexB) {\n                    return (roleIndexA === -1 ? 999 : roleIndexA) - (roleIndexB === -1 ? 999 : roleIndexB);\n                }\n            }\n            return a.name.localeCompare(b.name);\n        });\n        return { ...article, writers };\n    });\n    return { articles: articlesWithWriters, staff };\n}\n\nmodule.exports = { getCombinedDataFromFileSystem };","size_bytes":8875},"backend/database.js":{"content":"const sqlite3 = require('sqlite3').verbose();\nconst { open } = require('sqlite');\nconst path = require('path');\n\nlet db;\n\nconst isAuthenticated = (req, res, next) => {\n    if (req.session.user) {\n        next();\n    } else {\n        res.status(401).json({ error: 'You must be logged in to perform this action.' });\n    }\n};\n\nasync function initializeDatabase() {\n    if (db) return db;\n\n    try {\n        db = await open({\n            filename: path.join(__dirname, 'my-database.sqlite'),\n            driver: sqlite3.Database\n        });\n\n        await db.exec(`\n            CREATE TABLE IF NOT EXISTS users (\n                user_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                username TEXT NOT NULL UNIQUE,\n                password_hash TEXT NOT NULL,\n                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n                custom_avatar TEXT\n            );\n\n            CREATE TABLE IF NOT EXISTS articles (\n                article_id TEXT PRIMARY KEY,\n                likes INTEGER NOT NULL DEFAULT 0\n            );\n\n            CREATE TABLE IF NOT EXISTS comments (\n                comment_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                article_id TEXT NOT NULL,\n                author_id INTEGER NOT NULL,\n                author_name TEXT NOT NULL,\n                content TEXT NOT NULL,\n                timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                FOREIGN KEY (article_id) REFERENCES articles(article_id) ON DELETE CASCADE,\n                FOREIGN KEY (author_id) REFERENCES users(user_id) ON DELETE CASCADE\n            );\n\n            CREATE TABLE IF NOT EXISTS user_likes (\n                like_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                user_id INTEGER NOT NULL,\n                article_id TEXT NOT NULL,\n                timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,\n                FOREIGN KEY (article_id) REFERENCES articles(article_id) ON DELETE CASCADE,\n                UNIQUE(user_id, article_id)\n            );\n\n            CREATE TABLE IF NOT EXISTS user_bookmarks (\n                bookmark_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                user_id INTEGER NOT NULL,\n                article_id TEXT NOT NULL,\n                timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,\n                FOREIGN KEY (article_id) REFERENCES articles(article_id) ON DELETE CASCADE,\n                UNIQUE(user_id, article_id)\n            );\n\n            CREATE TABLE IF NOT EXISTS user_article_views (\n                view_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                user_id INTEGER NOT NULL,\n                article_id TEXT NOT NULL,\n                timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n                FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,\n                FOREIGN KEY (article_id) REFERENCES articles(article_id) ON DELETE CASCADE,\n                UNIQUE(user_id, article_id)\n            );\n        `);\n\n        console.log('Database initialized successfully.');\n        return db;\n    } catch (error) {\n        console.error('Failed to initialize database:', error);\n        process.exit(1);\n    }\n}\n\nmodule.exports = { initializeDatabase, isAuthenticated };","size_bytes":3328},"backend/server.js":{"content":"const express = require('express');\nconst path = require('path');\nconst session = require('express-session');\nconst { initializeDatabase } = require('./database');\nconst apiRouter = require('./api-router');\nconst authRouter = require('./auth-router');\n\nconst app = express();\n\nconst PORT = process.env.PORT || 5000;\n\n// Configure trust proxy for deployment readiness\napp.set('trust proxy', 1);\n\napp.use(express.json());\n\napp.use(session({\n    secret: process.env.SESSION_SECRET || 'fallback-secret-change-in-production',\n    resave: false,\n    saveUninitialized: false,\n    cookie: {\n        secure: process.env.NODE_ENV === 'production',\n        httpOnly: true,\n        maxAge: 24 * 60 * 60 * 1000\n    }\n}));\n\ninitializeDatabase();\n\n// Block access to sensitive backend paths\napp.use('/backend*', (req, res) => {\n    res.status(403).json({ error: 'Access denied' });\n});\n\napp.use('/api', apiRouter);\napp.use('/api/users', authRouter);\n\n// Secure static file serving - only serve specific whitelisted directories\napp.use('/assets', express.static(path.join(__dirname, '../assets')));\napp.use('/css', express.static(path.join(__dirname, '../css')));\napp.use('/js', express.static(path.join(__dirname, '../js')));\n\n// Serve uploads directory (for user-uploaded content)\napp.use('/uploads', express.static(path.join(__dirname, '../uploads')));\n\n// Serve index.html at root\napp.get('/', (req, res) => {\n    res.sendFile(path.join(__dirname, '../index.html'));\n});\n\napp.listen(PORT, '0.0.0.0', () => {\n    console.log(`Server is running and listening on 0.0.0.0:${PORT}`);\n});","size_bytes":1571},"css/main.css":{"content":"@import url('components/header.css');\n@import url('components/footer.css');\n@import url('components/ticker.css');\n@import url('components/social-share.css');\n@import url('components/card.css');\n@import url('components/home.css');\n@import url('components/about.css');\n@import url('components/article.css');\n@import url('components/issues.css');\n@import url('components/modal.css');\n@import url('./components/toast.css');\n@import url('components/sorting.css');\n@import url('components/subscribe.css');\n@import url('components/contact.css');\n@import url('components/write-for-us.css');\n@import url('components/auth.css');\n@import url('components/account.css');\n@import url('components/avatar.css');\n@import url('components/typewriter.css');\n@import url('components/forms/password-toggle.css');\n@import url('utilities/responsive-base.css');\n\n:root {\n    --font-serif: 'Lora', serif;\n    --font-sans: 'Inter', sans-serif;\n    --color-bg: #FDFDFC;\n    --color-dark: #1A1A1A;\n    --color-text-secondary: #6B7280;\n    --color-brand-blue: #002D62;\n    --color-border: #E5E7EB;\n    --color-light-gray: #f7f7f7;\n    --shadow: 0 8px 30px rgba(0,0,0,0.08);\n    --transition-smooth: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);\n}\n\n* { margin: 0; padding: 0; box-sizing: border-box; }\nhtml { font-size: 16px; }\nbody {\n    background-color: var(--color-bg);\n    color: var(--color-dark);\n    font-family: var(--font-sans);\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\nh1, h2, h3, h4, h5, h6 { font-weight: 600; line-height: 1.2; margin-bottom: 0.5em; }\nh1 { font-size: 3.5rem; } h2 { font-size: 2.5rem; } h3 { font-size: 1.75rem; }\np { margin-bottom: 1.5rem; }\na { color: inherit; text-decoration: none; transition: var(--transition-smooth); }\na:hover { opacity: 0.8; }\nimg { max-width: 100%; display: block; }\n.container { max-width: 1280px; margin: 0 auto; padding: 0 40px; }\n\nmain {\n}\n\n.page { \n    animation: fadeIn 0.6s ease-in-out; \n    padding-bottom: 3rem;\n}\n@keyframes fadeIn { from { opacity: 0; } to { opacity: 1; } }","size_bytes":2048},"js/api.js":{"content":"let cachedCombinedData = null;\n\nexport function invalidateCache() {\n    cachedCombinedData = null;\n}\n\nexport async function getCombinedData() {\n    if (cachedCombinedData) {\n        return cachedCombinedData;\n    }\n    try {\n        const response = await fetch('/api/articles');\n        if (!response.ok) {\n            throw new Error(`Failed to fetch data from server: ${response.statusText}`);\n        }\n        const data = await response.json();\n        if (typeof marked !== 'undefined') {\n            marked.setOptions({ mangle: false, headerIds: false });\n            data.articles.forEach(article => {\n                article.description = marked.parseInline(article.rawDescription || '');\n                const markdownContent = article.content || '';\n                article.content = marked.parse(markdownContent);\n            });\n        }\n        cachedCombinedData = data;\n        return cachedCombinedData;\n    } catch (error) {\n        console.error(\"Could not fetch data:\", error);\n        return { articles: [], staff: [] };\n    }\n}\n\nexport async function changeUsername(newUsername) {\n    try {\n        const response = await fetch('/api/users/username', {\n            method: 'PUT',\n            credentials: 'include',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ newUsername }),\n        });\n        const data = await response.json();\n        if (!response.ok) return { success: false, error: data.error };\n        return { success: true, user: data.user };\n    } catch (error) {\n        return { success: false, error: 'Could not connect to the server.' };\n    }\n}\n\nexport async function changePassword(currentPassword, newPassword) {\n    try {\n        const response = await fetch('/api/users/password', {\n            method: 'PUT',\n            credentials: 'include',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ currentPassword, newPassword }),\n        });\n        const data = await response.json();\n        if (!response.ok) return { success: false, error: data.error };\n        return { success: true };\n    } catch (error) {\n        return { success: false, error: 'Could not connect to the server.' };\n    }\n}\n\nexport async function likeArticle(articleId, isLiking = true) {\n    try {\n        const response = await fetch(`/api/articles/${articleId}/like`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ action: isLiking ? 'like' : 'unlike' }),\n        });\n        if (!response.ok) throw new Error('Like request failed');\n        return await response.json();\n    } catch (error) {\n        console.error('Failed to like/unlike article:', error);\n        return null;\n    }\n}\n\nexport async function bookmarkArticle(articleId, isBookmarking = true) {\n    try {\n        const response = await fetch(`/api/articles/${articleId}/bookmark`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ action: isBookmarking ? 'bookmark' : 'unbookmark' }),\n        });\n        if (!response.ok) throw new Error('Bookmark request failed');\n        return await response.json();\n    } catch (error) {\n        console.error('Failed to bookmark/unbookmark article:', error);\n        return null;\n    }\n}\n\nexport async function getComments(articleId) {\n    try {\n        const response = await fetch(`/api/articles/${articleId}/comments`);\n        if (!response.ok) throw new Error('Failed to fetch comments');\n        return await response.json();\n    } catch (error) {\n        console.error('Error fetching comments:', error);\n        return [];\n    }\n}\n\nexport async function postComment(articleId, content) {\n    try {\n        const response = await fetch(`/api/articles/${articleId}/comments`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ content }),\n        });\n        if (!response.ok) throw new Error('Failed to post comment');\n        return await response.json();\n    } catch (error) {\n        console.error('Error posting comment:', error);\n        return null;\n    }\n}\n\nexport async function editComment(commentId, content) {\n    try {\n        const response = await fetch(`/api/comments/${commentId}`, {\n            method: 'PUT',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ content }),\n        });\n        if (!response.ok) throw new Error('Failed to edit comment');\n        return await response.json();\n    } catch (error) {\n        console.error('Error editing comment:', error);\n        return null;\n    }\n}\n\nexport async function deleteComment(commentId) {\n    try {\n        const response = await fetch(`/api/comments/${commentId}`, {\n            method: 'DELETE',\n            credentials: 'include',\n        });\n        if (!response.ok) throw new Error('Failed to delete comment');\n        return await response.json();\n    } catch (error) {\n        console.error('Error deleting comment:', error);\n        return null;\n    }\n}\n\nexport async function getAccountData() {\n    try {\n        const response = await fetch('/api/account/data', { credentials: 'include' });\n        if (response.status === 401) return { error: 'Unauthorized' };\n        if (!response.ok) throw new Error('Failed to fetch account data');\n        return await response.json();\n    } catch (error) {\n        console.error('Error fetching account data:', error);\n        return null;\n    }\n}\n\nexport async function trackArticleView(articleId) {\n    try {\n        const response = await fetch(`/api/articles/${articleId}/view`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n        if (!response.ok) throw new Error('Failed to track article view');\n        return await response.json();\n    } catch (error) {\n        console.error('Error tracking article view:', error);\n        return null;\n    }\n}\n\nexport async function deleteAccount() {\n    try {\n        const response = await fetch('/api/users/delete', {\n            method: 'DELETE',\n            credentials: 'include',\n        });\n        if (!response.ok) throw new Error('Failed to delete account');\n        return await response.json();\n    } catch (error) {\n        console.error('Error deleting account:', error);\n        return null;\n    }\n}","size_bytes":6780},"js/app.js":{"content":"import { initRouter } from './router.js';\nimport { initModal } from './lib/modal.js';\nimport { initHeaderSearch } from './lib/headerSearch.js';\nimport { forceDownload } from './lib/forceDownload.js';\nimport { checkLoginStatus } from './auth.js';\nimport { subscribe, setEmail, listen as listenToSubscription } from './lib/subscriptionState.js';\n\nfunction initFooterSubscriptionForm() {\n    const formContainer = document.getElementById('footer-form-container');\n    if (!formContainer) return;\n\n    const subscribeForm = document.getElementById('subscribe-form-footer');\n    const successMessage = document.getElementById('subscribe-success-message-footer');\n    const emailInput = document.getElementById('subscribe-email-footer');\n\n    listenToSubscription((state) => {\n        if (emailInput.value !== state.email) {\n            emailInput.value = state.email;\n        }\n        if (state.isSubscribed) {\n            subscribeForm.classList.add('hidden');\n            successMessage.classList.add('active');\n        }\n    });\n\n    emailInput.addEventListener('input', (e) => {\n        setEmail(e.target.value);\n    });\n\n    subscribeForm.addEventListener('submit', (e) => {\n        e.preventDefault();\n        if (emailInput.value && emailInput.checkValidity()) {\n            subscribe();\n        }\n    });\n}\n\nfunction initMobileNavAccordion() {\n    const nav = document.querySelector('.main-nav');\n    const mainHeader = document.querySelector('.main-header');\n    if (!nav || !mainHeader) return;\n\n    nav.addEventListener('click', (e) => {\n        const mobileToggle = document.querySelector('.mobile-toggle');\n        if (getComputedStyle(mobileToggle).display === 'none') return;\n        if (e.target.matches('.submenu-toggle')) {\n            e.preventDefault();\n            const dropdown = e.target.closest('.dropdown');\n            if (dropdown) {\n                const isOpen = dropdown.classList.toggle('is-open');\n                e.target.textContent = isOpen ? '−' : '+';\n                e.target.setAttribute('aria-expanded', isOpen);\n            }\n        } else if (e.target.closest('a')) {\n            mainHeader.classList.remove('nav-open');\n            nav.querySelectorAll('.dropdown.is-open').forEach(d => {\n                d.classList.remove('is-open');\n                const toggle = d.querySelector('.submenu-toggle');\n                if (toggle) {\n                    toggle.textContent = '+';\n                    toggle.setAttribute('aria-expanded', 'false');\n                }\n            });\n        }\n    });\n}\n\nfunction initCardTouchEvents() {\n    let activeCard = null;\n    const options = { passive: true };\n    document.body.addEventListener('touchstart', (e) => {\n        const card = e.target.closest('.article-card-linkable');\n        if (card) { activeCard = card; activeCard.classList.add('card-is-active'); }\n    }, options);\n    const endTouch = () => { if (activeCard) { activeCard.classList.remove('card-is-active'); activeCard = null; } };\n    document.body.addEventListener('touchend', endTouch);\n    document.body.addEventListener('touchcancel', endTouch);\n}\n\nfunction initGlobalEventListeners(closeModal, closeSearch) {\n    document.body.addEventListener('click', async (e) => {\n        const downloadBtn = e.target.closest('.download-btn');\n        if (downloadBtn) {\n            e.preventDefault(); if (downloadBtn.disabled) return;\n            const url = downloadBtn.dataset.url; const filename = downloadBtn.dataset.filename; const originalText = downloadBtn.textContent;\n            downloadBtn.textContent = 'Downloading...'; downloadBtn.disabled = true;\n            try { await forceDownload(url, filename); } catch (error) { console.error(\"Download failed:\", error.message); } finally { downloadBtn.textContent = originalText; downloadBtn.disabled = false; }\n            return;\n        }\n        const copyBtn = e.target.closest('.copy-link-btn');\n        if (copyBtn) {\n            e.preventDefault();\n            navigator.clipboard.writeText(window.location.href).then(() => {\n                copyBtn.classList.add('is-copied');\n                setTimeout(() => { copyBtn.classList.remove('is-copied'); }, 2000);\n            }).catch(err => { console.error('Failed to copy link: ', err); alert('Failed to copy link.'); });\n            return;\n        }\n        const card = e.target.closest('.article-card-linkable');\n        if (card) {\n            if (window.getSelection().toString().length > 0) return;\n            if (e.target.closest('a')) return;\n            const mainLink = card.querySelector('.main-article-link');\n            if (mainLink) location.hash = mainLink.hash;\n        }\n    });\n    const mainHeader = document.querySelector('.main-header');\n    const mobileToggle = document.querySelector('.mobile-toggle');\n    mobileToggle.addEventListener('click', () => mainHeader.classList.toggle('nav-open'));\n    document.addEventListener('keydown', (e) => { if (e.key === 'Escape') { closeModal(); closeSearch(); } });\n}\n\nasync function init() {\n    await checkLoginStatus();\n    const closeModal = initModal();\n    const closeSearch = initHeaderSearch();\n\n    initFooterSubscriptionForm();\n\n    initGlobalEventListeners(closeModal, closeSearch);\n    initMobileNavAccordion();\n    initCardTouchEvents();\n    initRouter();\n}\n\ndocument.addEventListener('DOMContentLoaded', init);","size_bytes":5352},"js/auth.js":{"content":"import { invalidateCache } from './api.js';\nimport { Avatar } from './components/common/Avatar.js';\n\nlet currentUser = null;\nlet isLoggedIn = false;\nlet authChecked = false;\n\nfunction generateUserGradient(username) {\n    const hash = username.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\n    const color1 = `hsl(${hash % 360}, 70%, 60%)`;\n    const color2 = `hsl(${(hash * 1.5) % 360}, 70%, 60%)`;\n    return `linear-gradient(to right, ${color1}, ${color2})`;\n}\n\nexport function updateCurrentUser(newUser) {\n    if (isLoggedIn && newUser) {\n        currentUser = newUser;\n        invalidateCache();\n    }\n}\n\nexport async function login(username, password) {\n    try {\n        const response = await fetch('/api/users/login', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ username, password }),\n        });\n        const data = await response.json();\n        if (response.ok) {\n            isLoggedIn = true;\n            currentUser = data;\n            invalidateCache();\n            updateAuthUI();\n            return { success: true, currentHash: location.hash };\n        } else {\n            return { success: false, error: data.error };\n        }\n    } catch (error) {\n        return { success: false, error: 'Could not connect to the server.' };\n    }\n}\nexport async function signup(username, password) {\n    try {\n        const response = await fetch('/api/users/signup', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ username, password }),\n        });\n        const data = await response.json();\n        if (response.ok) {\n            isLoggedIn = true;\n            currentUser = data;\n            invalidateCache();\n            updateAuthUI();\n            return { success: true, currentHash: location.hash };\n        } else {\n            return { success: false, error: data.error };\n        }\n    } catch (error) {\n        return { success: false, error: 'Could not connect to the server.' };\n    }\n}\n\nexport async function checkLoginStatus() {\n    if (authChecked) return;\n    try {\n        const response = await fetch('/api/users/status');\n        const data = await response.json();\n        if (data.loggedIn) {\n            isLoggedIn = true;\n            currentUser = data.user;\n        } else {\n            isLoggedIn = false;\n            currentUser = null;\n        }\n        authChecked = true;\n        updateAuthUI();\n    } catch (error) {\n        console.error('Error checking login status:', error);\n        isLoggedIn = false;\n        currentUser = null;\n        authChecked = true;\n    }\n}\n\nexport function updateAuthUI() {\n    const authStatusContainer = document.getElementById('auth-status');\n    const authBtnMobileContainer = document.getElementById('auth-btn-mobile');\n\n    document.body.classList.toggle('user-is-logged-in', isLoggedIn);\n\n    if (authStatusContainer) {\n        if (isLoggedIn && currentUser) {\n            const avatarHTML = Avatar({\n                username: currentUser.username,\n                customAvatar: currentUser.custom_avatar,\n                size: 'small',\n                className: 'header-avatar'\n            });\n            authStatusContainer.innerHTML = `\n                <a href=\"#account\" class=\"button-secondary\">My Account</a>\n                <a href=\"#account\" title=\"My Account\" class=\"header-avatar-link\">${avatarHTML}</a>\n            `;\n        } else {\n            authStatusContainer.innerHTML = `\n                <a href=\"#login\" class=\"button-secondary\">Log In</a>\n            `;\n        }\n    }\n\n    if (authBtnMobileContainer) {\n        if (isLoggedIn && currentUser) {\n            authBtnMobileContainer.innerHTML = `<a href=\"#account\" class=\"button-secondary\">My Account</a>`;\n        } else {\n            authBtnMobileContainer.innerHTML = `<a href=\"#login\" class=\"button-secondary\">Log In</a>`;\n        }\n    }\n}\n\nexport async function handleLogout() {\n    try {\n        await fetch('/api/users/logout', { method: 'POST' });\n        isLoggedIn = false;\n        currentUser = null;\n        invalidateCache();\n        updateAuthUI();\n        location.hash = '#';\n        location.reload();\n    } catch (error) {\n        console.error('Logout failed:', error);\n    }\n}\n\nexport function getCurrentUser() { return currentUser; }\nexport function getIsLoggedIn() { return isLoggedIn; }","size_bytes":4438},"js/router.js":{"content":"import { render as renderHome } from './pages/home.js';\nimport { render as renderAbout } from './pages/about.js';\nimport { render as renderArticleList } from './pages/articleList.js';\nimport { render as renderSingleArticle } from './pages/singleArticle.js';\nimport { render as renderIssues } from './pages/issues.js';\nimport { render as renderSearchResults } from './pages/searchResults.js';\nimport { render as renderSubscribe } from './pages/subscribe.js';\nimport { render as renderContact } from './pages/contact.js';\nimport { render as renderWriteForUs } from './pages/writeForUs.js';\nimport { render as renderLogin } from './pages/login.js';\nimport { render as renderSignup } from './pages/signup.js';\nimport { render as renderAccount } from './pages/account.js';\n\nconst mainContent = document.getElementById('main-content');\nconst footerCTA = document.getElementById('footer-cta');\nconst newsTicker = document.getElementById('news-ticker-container');\n\nconst routes = {\n    'home-page': () => renderHome(mainContent),\n    'about-page': () => renderAbout(mainContent),\n    'contact': () => renderContact(mainContent),\n    'write-for-us': () => renderWriteForUs(mainContent),\n    'articles-page-all': () => renderArticleList(mainContent, 'all', 'category'),\n    'articles-page-community': () => renderArticleList(mainContent, 'community', 'category'),\n    'articles-page-sports': () => renderArticleList(mainContent, 'sports', 'category'),\n    'articles-page-arts': () => renderArticleList(mainContent, 'arts', 'category'),\n    'articles-page-reviews': () => renderArticleList(mainContent, 'reviews', 'category'),\n    'articles-page-opinion': () => renderArticleList(mainContent, 'opinion', 'category'),\n    'articles-page-editorial': () => renderArticleList(mainContent, 'editorial', 'category'),\n    'articles-page-letter-to-the-editor': () => renderArticleList(mainContent, 'Letter to the Editor', 'category'),\n    'issues-page': () => renderIssues(mainContent),\n    'subscribe': () => renderSubscribe(mainContent),\n    'login': () => renderLogin(mainContent),\n    'signup': () => renderSignup(mainContent),\n    'account': () => renderAccount(mainContent),\n    'search': (param) => renderSearchResults(mainContent, param),\n    'single-article-page': (param) => renderSingleArticle(mainContent, param),\n    'author': (param) => renderArticleList(mainContent, param, 'author'),\n};\n\nfunction getRouteAndParams(hash) {\n    const pathString = hash.substring(1);\n    const [path, ...params] = pathString.split('/');\n    const param = params.join('/');\n    return { path: path || 'home-page', param };\n}\n\nfunction updateActiveNavLink(path) {\n    const navLinks = document.querySelectorAll('.main-nav a.nav-link');\n    navLinks.forEach(link => {\n        const linkPath = link.getAttribute('href').substring(1);\n        let isActive = (linkPath === path);\n        if (path === 'home-page' && linkPath === '') isActive = true;\n        if ((path === 'articles-page-editorial' || path === 'articles-page-letter-to-the-editor') && linkPath === 'articles-page-opinion') isActive = true;\n        if (path === 'articles-page-reviews' && linkPath === 'articles-page-arts') isActive = true;\n        if ((path === 'contact' || path === 'write-for-us') && linkPath === 'about-page') isActive = true;\n        link.classList.toggle('active-link', isActive);\n    });\n}\n\nexport async function handleRouteChange() {\n    const { path, param } = getRouteAndParams(location.hash);\n\n    const currentHash = location.hash;\n    if (path === 'login' || path === 'signup') {\n        const previousHash = sessionStorage.getItem('previousHash') || '#';\n        if (previousHash !== '#login' && previousHash !== '#signup') {\n            sessionStorage.setItem('returnToAfterAuth', previousHash);\n            sessionStorage.setItem('scrollPositionBeforeAuth', window.scrollY.toString());\n        }\n    } else {\n        sessionStorage.setItem('previousHash', currentHash);\n    }\n\n    if (footerCTA) {\n        const pagesToHideFooterOn = ['subscribe', 'login', 'signup', 'contact', 'account'];\n        footerCTA.classList.toggle('hidden', pagesToHideFooterOn.includes(path));\n    }\n\n    if (newsTicker) {\n        newsTicker.style.display = (path === 'home-page') ? 'flex' : 'none';\n    }\n\n    const renderFunction = routes[path];\n\n    if (renderFunction) {\n        await renderFunction(param);\n    } else {\n        location.hash = '#';\n        return;\n    }\n\n    updateActiveNavLink(path);\n    window.scrollTo(0, 0);\n}\n\nexport function initRouter() {\n    window.addEventListener('hashchange', handleRouteChange);\n    handleRouteChange();\n}","size_bytes":4605},"css/components/about.css":{"content":".page-header { \n    text-align: center; \n    padding: 4rem 0 2rem 0; \n}\n.page-header h1 { \n    font-family: var(--font-serif); \n    font-size: clamp(2rem, 8vw, 3.5rem); \n}\n.page-header h2 { \n    font-family: var(--font-serif); \n    font-size: 2.5rem; \n}\n.page-header p { \n    max-width: 600px; \n    margin: 1rem auto 0 auto; \n    color: var(--color-text-secondary); \n    font-size: 1.1rem; \n    line-height: 1.6; \n}\n.team-header { \n    padding-top: 4rem; \n    padding-bottom: 2rem; \n}\n\n.collapsible-card {\n    max-width: 750px;\n    margin: 0 auto;\n    border: 1px solid var(--color-border);\n    border-radius: 12px;\n    background-color: var(--color-white);\n    box-shadow: var(--shadow-sm);\n    transition: box-shadow 0.3s ease;\n}\n\n.collapsible-card:hover {\n    box-shadow: var(--shadow-md);\n}\n\n.card-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 1.5rem;\n    cursor: pointer;\n}\n\n.card-header h3 {\n    font-family: var(--font-serif);\n    font-size: 1.5rem;\n    margin: 0;\n}\n\n.card-toggle-btn {\n    background: none;\n    border: none;\n    padding: 0.5rem;\n    cursor: pointer;\n    line-height: 1;\n}\n\n.card-toggle-btn svg {\n    width: 20px;\n    height: 20px;\n    transition: transform 0.4s cubic-bezier(0.25, 1, 0.5, 1);\n}\n\n.card-content-wrapper {\n    max-height: 0;\n    overflow: hidden;\n    transition: max-height 0.5s ease-in-out;\n}\n\n.card-content {\n    padding: 1.5rem;\n    border-top: 1px solid var(--color-border);\n}\n\n.card-content p {\n    font-size: 1rem;\n    line-height: 1.7;\n    color: var(--color-text-secondary);\n    margin-bottom: 1rem;\n}\n.card-content p:last-child {\n    margin-bottom: 0;\n}\n\n.card-content p a {\n    color: var(--color-brand-blue);\n    font-weight: 500;\n    text-decoration: underline;\n    text-decoration-thickness: 1px;\n}\n.card-content p a:hover {\n    color: var(--color-dark);\n}\n\n.collapsible-card.is-expanded .card-content-wrapper {\n    max-height: 50rem;\n}\n\n.collapsible-card.is-expanded .card-toggle-btn svg {\n    transform: rotate(180deg);\n}\n\n\n.staff-grid { \n    display: grid; \n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); \n    gap: 2rem; \n    padding: 0 2rem; \n    align-items: start;\n}\n.staff-card { \n    text-align: center; \n    cursor: pointer; \n    transition: var(--transition-smooth); \n}\n.staff-card:hover { \n    transform: translateY(-10px); \n}\n.staff-card-img { \n    width: 100%; \n    aspect-ratio: 1 / 1; \n    overflow: hidden; \n    border-radius: 8px; \n    margin-bottom: 1rem; \n}\n.staff-card-img img { \n    width: 100%; \n    height: 100%; \n    object-fit: cover; \n    transition: transform 0.5s ease; \n}\n.staff-card:hover .staff-card-img img { \n    transform: scale(1.1); \n}\n.staff-card h4 { \n    font-family: var(--font-sans); \n    font-size: 1.2rem; \n    font-weight: 600; \n    margin-bottom: 0.2rem; \n}\n.staff-card p { \n    font-size: 0.9rem; \n    color: var(--color-text-secondary); \n}\n\n@media (max-width: 768px) {\n    .about-page .container {\n        padding: 2rem 20px;\n    }\n\n    .about-page .page-header h1 {\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n\n    .staff-grid {\n        grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\n        gap: 1.5rem;\n    }\n\n    .staff-bio-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n        gap: 1.5rem;\n        margin-top: 2rem;\n    }\n}\n\n@media (max-width: 480px) {\n    .about-page .container {\n        padding: 1.5rem 15px;\n    }\n\n    .about-page .page-header p {\n        font-size: 1rem;\n        line-height: 1.5;\n        padding: 0 10px;\n    }\n\n    .staff-grid {\n        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n        gap: 1rem;\n        padding: 0;\n    }\n\n    .staff-card {\n        padding: 0.5rem;\n    }\n}","size_bytes":3818},"css/components/account.css":{"content":".account-page .container {\n    max-width: 960px;\n    padding-top: 2.5rem;\n}\n\n.account-header {\n    display: flex;\n    align-items: center;\n    gap: 1.5rem;\n    margin-bottom: 2.5rem;\n    padding-bottom: 2.5rem;\n    border-bottom: 1px solid var(--color-border);\n}\n\n.account-header-info h1 {\n    font-family: var(--font-serif);\n    font-size: 2.25rem;\n    margin-bottom: 0.25rem;\n}\n\n.account-header-info p {\n    color: var(--color-text-secondary);\n    font-size: 0.9rem;\n    margin: 0;\n}\n\n.account-tabs {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    align-items: center;\n}\n.account-nav {\n    display: inline-flex;\n    list-style: none;\n    background-color: var(--color-light-gray);\n    border: 1px solid var(--color-border);\n    border-radius: 9999px;\n    padding: 0.5rem;\n    margin: 0;\n}\n.account-nav-btn {\n    padding: 0.75rem 1.25rem;\n    font-size: 1rem;\n    font-weight: 500;\n    color: var(--color-text-secondary);\n    background: none;\n    border: none;\n    cursor: pointer;\n    border-radius: 9999px;\n    transition: all 0.2s ease-in-out;\n}\n.account-nav-btn:hover:not(.active) {\n    color: var(--color-dark);\n}\n.account-nav-btn.active {\n    color: var(--color-white);\n    background-color: var(--color-brand-blue);\n    box-shadow: inset 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.tab-pane {\n    display: none;\n    animation: fadeIn 0.4s ease-in-out;\n    width: 100%;\n}\n.tab-pane.active {\n    display: block;\n}\n\n.account-card {\n    background-color: var(--color-white);\n    border: 1px solid var(--color-border);\n    box-shadow: 0 2px 4px rgba(0,0,0,0.02), 0 5px 15px rgba(0,0,0,0.04);\n    border-radius: 16px;\n    padding: 2rem;\n    margin-bottom: 2rem;\n    transition: all 0.2s ease-in-out;\n}\n.account-card:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 8px rgba(0,0,0,0.03), 0 10px 20px rgba(0,0,0,0.06);\n}\n.account-card:last-child {\n    margin-bottom: 0;\n}\n.account-card h2 {\n    font-family: var(--font-serif);\n    font-size: 1.75rem;\n    margin: 0 0 1.5rem 0;\n}\n\n.stats-grid {\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    gap: 1.5rem;\n}\n.stat-item {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n    gap: 0.5rem;\n    padding: 1.25rem 1rem;\n    border-radius: 12px;\n    background-color: #fafafa;\n    border: 1px solid var(--color-border);\n    transition: all 0.2s ease-in-out;\n}\n.stat-item:hover {\n    transform: translateY(-4px) scale(1.03);\n    box-shadow: var(--shadow-md);\n    background-color: var(--color-white);\n}\n.stat-icon-wrapper {\n    width: 56px;\n    height: 56px;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 0.5rem;\n}\n.stat-item:nth-child(1) .stat-icon-wrapper { background-color: #eef2ff; }\n.stat-item:nth-child(2) .stat-icon-wrapper { background-color: #fef2f2; }\n.stat-item:nth-child(3) .stat-icon-wrapper { background-color: #ecfdf5; }\n.stat-item:nth-child(4) .stat-icon-wrapper { background-color: #fffbeb; }\n.stat-icon {\n    width: 28px;\n    height: 28px;\n    background-color: var(--color-brand-blue);\n    mask-size: contain;\n    mask-repeat: no-repeat;\n    mask-position: center;\n}\n.stat-icon[data-icon=\"view\"] { mask-image: url('../../assets/icons/view.svg'); }\n.stat-icon[data-icon=\"like\"] { mask-image: url('../../assets/icons/like.svg'); }\n.stat-icon[data-icon=\"bookmark\"] { mask-image: url('../../assets/icons/bookmark.svg'); }\n.stat-icon[data-icon=\"comment\"] { mask-image: url('../../assets/icons/comment.svg'); }\n.stat-item:nth-child(1) .stat-icon { background-color: #4f46e5; }\n.stat-item:nth-child(2) .stat-icon { background-color: #ef4444; }\n.stat-item:nth-child(3) .stat-icon { background-color: #10b981; }\n.stat-item:nth-child(4) .stat-icon { background-color: #f59e0b; }\n.stat-value {\n    font-size: 2.25rem;\n    font-weight: 700;\n    color: var(--color-dark);\n    line-height: 1;\n}\n.stat-label {\n    font-size: 0.85rem;\n    color: var(--color-text-secondary);\n    font-weight: 500;\n}\n\n.activity-list {\n    list-style: none; padding: 0; margin: 0;\n    display: flex; flex-direction: column; gap: 1.5rem;\n}\n.empty-state {\n    text-align: center; padding: 2rem 1rem; color: var(--color-text-secondary);\n}\n.empty-state a {\n    color: var(--color-brand-blue); font-weight: 500; text-decoration: underline;\n}\n.comment-item-content {\n    background-color: var(--color-light-gray); border: 1px solid var(--color-border); border-radius: 8px;\n    padding: 1rem 1.25rem; margin-bottom: 0.75rem; font-style: italic;\n    color: var(--color-text-secondary); position: relative;\n}\n.comment-item-content::before {\n    content: '“'; font-family: var(--font-serif); font-size: 4rem; position: absolute;\n    top: 0rem; left: 0.75rem; opacity: 0.08;\n    line-height: 1;\n}\n.activity-item-meta {\n    font-size: 0.9rem; color: var(--color-text-secondary); padding-left: 1.25rem;\n}\n.activity-item-meta a {\n    color: var(--color-brand-blue); font-weight: 500;\n}\n\n.account-article-card {\n    display: flex; gap: 1.5rem; padding: 1rem 0;\n    border-bottom: 1px solid var(--color-border);\n}\n.activity-list li:last-child .account-article-card {\n    border-bottom: none; padding-bottom: 0;\n}\n.activity-list li:first-child .account-article-card {\n    padding-top: 0;\n}\n.account-article-card img {\n    width: 120px; height: 90px; object-fit: cover; border-radius: 8px; flex-shrink: 0;\n}\n.account-article-info .category {\n    font-size: 0.75rem; font-weight: 700; text-transform: uppercase;\n    color: var(--color-brand-blue); letter-spacing: 0.05em;\n}\n.account-article-info h3 {\n    font-family: var(--font-serif); font-size: 1.1rem; margin: 0.25rem 0 0.5rem 0; line-height: 1.4;\n}\n.account-article-info h3 a:hover {\n    text-decoration: underline; opacity: 1;\n}\n.account-article-info .author {\n    font-size: 0.85rem; color: var(--color-text-secondary);\n}\n\n#avatar-section .settings-info {\n    grid-column: 1 / -1; \n}\n.avatar-setting-container {\n    grid-column: 1 / -1; \n    display: flex;\n    align-items: center;\n    gap: 1.5rem;\n    margin-top: 1rem;\n}\n#avatar-display-container .avatar {\n    cursor: default;\n}\n#avatar-display-container img.avatar {\n    border: 2px solid var(--color-border);\n    box-shadow: var(--shadow-sm);\n}\n.avatar-actions {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n}\n#avatar-actions-default, #avatar-actions-editing {\n    display: flex;\n    gap: 0.75rem;\n}\n\n.settings-section {\n    display: grid;\n    grid-template-columns: 1fr auto; \n    gap: 1rem 2rem;\n    align-items: center;\n    padding: 1.5rem 0;\n    border-top: 1px solid var(--color-border);\n}\n.settings-section:first-of-type {\n    border-top: none;\n    padding-top: 0;\n}\n.settings-info {\n    grid-column: 1 / 2;\n}\n.settings-info h3 {\n    font-size: 1.1rem;\n    margin: 0;\n}\n.settings-info p {\n    margin: 0.25rem 0 0 0;\n    color: var(--color-text-secondary);\n    font-size: 0.9rem;\n}\n.settings-actions {\n    grid-column: 2 / 3;\n    justify-self: end;\n}\n.settings-section.danger-zone {\n    border: 1px solid #fca5a5;\n    background-color: #fef2f2;\n    border-radius: 12px;\n    padding: 1.5rem;\n    margin-top: 2rem;\n}\n.settings-section.danger-zone .settings-info h3 {\n    color: #b91c1c;\n}\n\n.edit-form {\n    display: none;\n    animation: fadeIn 0.3s ease-in-out;\n    grid-column: 1 / -1;\n    margin-top: 1.5rem;\n    padding: 1.5rem;\n    background-color: #fafafa;\n    border: 1px solid var(--color-border);\n    border-radius: 12px;\n}\n.settings-section.is-editing .settings-actions {\n    display: none;\n}\n.settings-section.is-editing .edit-form {\n    display: block;\n}\n\n.edit-form .form-group {\n    margin-bottom: 1rem;\n}\n.edit-form label {\n    display: block;\n    font-size: 0.9rem;\n    font-weight: 500;\n    margin-bottom: 0.5rem;\n}\n.edit-form input {\n    width: 100%;\n    padding: 10px;\n    font-size: 1rem;\n    border: 1px solid var(--color-border);\n    border-radius: 8px;\n    background-color: var(--color-white);\n    transition: all 0.2s ease-in-out;\n}\n.edit-form input:focus {\n    outline: none;\n    border-color: var(--color-brand-blue);\n    box-shadow: 0 0 0 3px rgba(0, 45, 98, 0.1);\n}\n.edit-form-actions {\n    display: flex;\n    justify-content: flex-end;\n    gap: 0.75rem;\n    margin-top: 1.5rem;\n}\n.settings-btn {\n    display: inline-flex;\n    align-items: center;\n    gap: 0.5rem;\n    flex-shrink: 0;\n}\n.settings-btn img {\n    width: 18px;\n    height: 18px;\n    filter: invert(1) brightness(2);\n}\n#logout-btn {\n    background-color: var(--color-brand-blue);\n    color: white;\n    border-color: var(--color-brand-blue);\n}\n#logout-btn:hover {\n    background-color: #00438a;\n    color: white;\n    cursor: pointer;\n    opacity: 1;\n}\n#delete-account-btn {\n    background-color: #ef4444;\n    border-color: #ef4444;\n}\n#delete-account-btn:hover {\n    background-color: #dc2626;\n    border-color: #dc2626;\n    opacity: 1;\n}\n\n@media (max-width: 768px) {\n    .account-header {\n        flex-direction: column;\n        text-align: center;\n        gap: 1rem;\n    }\n    .account-tabs {\n        align-items: stretch;\n    }\n    .account-nav {\n        display: flex;\n        flex-direction: column;\n        background-color: transparent;\n        border: none;\n        padding: 0;\n        border-radius: 0;\n        gap: 0.5rem;\n    }\n    .account-nav-btn {\n        width: 100%;\n        text-align: center;\n    }\n    .account-nav-btn:not(.active) {\n        background-color: var(--color-light-gray);\n    }\n    .stats-grid {\n        grid-template-columns: repeat(2, 1fr);\n        gap: 1rem;\n    }\n    .settings-section,\n    .settings-section.danger-zone {\n        grid-template-columns: 1fr;\n        gap: 1rem;\n    }\n    .settings-actions {\n        justify-self: start;\n    }\n    .avatar-setting-container {\n        flex-direction: column;\n        align-items: flex-start;\n    }\n}\n\n@media (max-width: 480px) {\n    .account-card {\n        padding: 1.5rem;\n    }\n    .stats-grid {\n        grid-template-columns: 1fr 1fr;\n        gap: 1rem;\n    }\n    .account-article-card {\n        flex-direction: column;\n    }\n    .account-article-card img {\n        width: 100%;\n        height: 150px;\n    }\n}","size_bytes":10084},"css/components/article.css":{"content":"@import url('./article/grid.css');\n@import url('./article/single.css');\n@import url('./article/authors.css');\n@import url('./article/metadata.css');","size_bytes":148},"css/components/auth.css":{"content":".auth-page {\n  min-height: 60vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 4rem 1.5rem;\n}\n\n.auth-form-container {\n  max-width: 400px;\n  width: 100%;\n  background-color: var(--color-white);\n  padding: 2.5rem;\n  border: 1px solid var(--color-border);\n  border-radius: 12px;\n  box-shadow: var(--shadow);\n}\n\n.auth-form-container h1 {\n  font-family: var(--font-serif);\n  text-align: center;\n  font-size: 2.5rem;\n  margin-bottom: 0.5rem;\n}\n\n.auth-form-container .subtitle {\n  text-align: center;\n  color: var(--color-text-secondary);\n  margin-bottom: 2rem;\n}\n\n.auth-form-container .subtitle a {\n  color: var(--color-brand-blue);\n  font-weight: 500;\n}\n\n.auth-form .form-group {\n  margin-bottom: 1.25rem;\n}\n\n.auth-form label {\n  display: block;\n  font-size: 0.9rem;\n  font-weight: 500;\n  margin-bottom: 0.5rem;\n}\n\n.auth-form input {\n  width: 100%;\n  padding: 12px;\n  font-size: 1rem;\n  border: 1px solid var(--color-border);\n  border-radius: 8px;\n  background-color: var(--color-light-gray);\n}\n\n.auth-form input:focus {\n  outline: none;\n  border-color: var(--color-brand-blue);\n}\n\n.auth-form button[type=\"submit\"] {\n  width: 100%;\n  padding: 14px;\n  font-size: 1rem;\n  font-weight: 500;\n  border-radius: 8px;\n  background-color: var(--color-brand-blue);\n  color: white;\n  border: none;\n  cursor: pointer;\n  margin-top: 1rem;\n  transition: opacity 0.2s;\n}\n\n.auth-form button[type=\"submit\"]:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.auth-form .error-message {\n  background-color: #ffebee;\n  color: #c62828;\n  border: 1px solid #ef9a9a;\n  border-radius: 8px;\n  padding: 1rem;\n  margin-bottom: 1.5rem;\n  font-size: 0.9rem;\n  text-align: center;\n  display: none;\n}","size_bytes":1699},"css/components/avatar.css":{"content":"/* avatar component styles */\n.avatar {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    color: white;\n    font-weight: 700;\n    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);\n    background-size: cover;\n    background-position: center;\n    text-align: center;\n    flex-shrink: 0;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n    border: 2px solid var(--color-bg);\n    box-sizing: content-box;\n}\n\n.avatar--small {\n    width: 32px;\n    height: 32px;\n    font-size: 0.75rem;\n}\n\n.avatar--medium {\n    width: 40px;\n    height: 40px;\n    font-size: 0.875rem;\n}\n\n.avatar--large {\n    width: 80px;\n    height: 80px;\n    font-size: 2rem;\n}\n\n.account-avatar {\n    cursor: pointer;\n    transition: var(--transition-smooth);\n}\n\n.account-avatar:hover {\n    transform: scale(1.05);\n}\n\n.comment-avatar,\n.comment-form-avatar {\n    border-width: 1px;\n}\n\n@media (max-width: 768px) {\n    .avatar--large {\n        width: 60px;\n        height: 60px;\n        font-size: 1.25rem;\n    }\n}","size_bytes":1014},"css/components/card.css":{"content":".article-card-linkable {\n    position: relative;\n    transition: transform 0.3s ease-in-out;\n    -webkit-tap-highlight-color: transparent;\n    touch-action: manipulation;\n    cursor: pointer;\n}\n\n.article-card-linkable:hover {\n    transform: translateY(-8px);\n}\n\n.article-card-linkable.card-is-active {\n    transform: translateY(-2px) scale(0.99);\n    transition-duration: 0.1s;\n}","size_bytes":379},"css/components/contact.css":{"content":"@import url('./contact/layout.css');\n@import url('./contact/form.css');\n@import url('./contact/success-message.css');\n@import url('./contact/details-card.css');","size_bytes":160},"css/components/footer.css":{"content":"/* Foot. */\n.footer-cta {\n    background-color: var(--color-brand-blue); color: white;\n    text-align: center; padding: 120px 40px;\n    transition: display 0.3s;\n}\n.footer-cta.hidden {\n    display: none;\n}\n.footer-cta h2 { font-family: var(--font-serif); font-weight: 400; font-size: 56px; line-height: 1.2; max-width: 750px; margin: 0 auto; }\n\n.footer-cta .form-container {\n    position: relative;\n    max-width: 500px;\n    margin: 40px auto 0 auto;\n    min-height: 52px; \n}\n\n.footer-cta #subscribe-form-footer {\n    display: flex;\n    transition: opacity 0.3s ease-in-out;\n}\n.footer-cta #subscribe-form-footer.hidden {\n    opacity: 0;\n    pointer-events: none;\n}\n\n.footer-cta #subscribe-email-footer {\n    background-color: rgba(255, 255, 255, 0.1);\n    border: 1px solid rgba(255, 255, 255, 0.3);\n    border-right: none;\n    color: white;\n    font-size: 16px;\n    padding: 14px 24px;\n    transition: all 0.2s ease-in-out;\n    flex-grow: 1;\n    border-top-left-radius: 9999px;\n    border-bottom-left-radius: 9999px;\n}\n.footer-cta #subscribe-email-footer::placeholder { color: rgba(255, 255, 255, 0.6); }\n.footer-cta #subscribe-email-footer:focus {\n    outline: none;\n    background-color: rgba(255, 255, 255, 0.2);\n    border-color: white;\n}\n\n.footer-cta .button-subscribe {\n    background-color: var(--color-bg);\n    color: var(--color-brand-blue);\n    font-weight: 600;\n    font-size: 16px;\n    border: 1px solid transparent;\n    padding: 14px 28px;\n    cursor: pointer;\n    transition: all 0.2s ease-in-out;\n    flex-shrink: 0;\n    border-top-right-radius: 9999px;\n    border-bottom-right-radius: 9999px;\n}\n.footer-cta .button-subscribe:hover {\n    opacity: 0.9;\n}\n\n.footer-cta .subscribe-success {\n    background-color: rgba(255, 255, 255, 0.1);\n    border: 1px solid rgba(255, 255, 255, 0.3);\n    border-radius: 9999px;\n    padding: 14px 24px;\n    font-size: 16px;\n    font-weight: 500;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    opacity: 0;\n    pointer-events: none;\n    transition: opacity 0.3s ease-in-out;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.footer-cta .subscribe-success.active {\n    opacity: 1;\n}\n\n/* copyright */\n.main-footer {\n    background-color: #f9f9f9;\n    border-top: 1px solid var(--color-border);\n    text-align: center;\n    padding: 2.5rem 2rem;\n    color: var(--color-text-secondary);\n    font-size: 0.9rem;\n}\n\n@media (max-width: 768px) {\n    .footer-cta { \n        padding: 60px 20px;\n        overflow: hidden; \n    }\n    \n    .footer-cta h2 { \n        font-size: 28px;\n        line-height: 1.3;\n        padding: 0 10px;\n    }\n    \n    .footer-cta .form-container {\n        max-width: 100%;\n        padding: 0 10px;\n    }\n    \n    .footer-cta #subscribe-form-footer {\n        width: 100%;\n        max-width: 100%;\n    }\n    \n    .footer-cta #subscribe-email-footer,\n    .footer-cta .button-subscribe {\n        font-size: 14px;\n        padding: 12px 16px;\n    }\n}\n\n@media (max-width: 480px) {\n    .footer-cta {\n        padding: 40px 15px;\n    }\n    \n    .footer-cta h2 {\n        font-size: 24px;\n    }\n    \n    .footer-cta #subscribe-email-footer,\n    .footer-cta .button-subscribe {\n        font-size: 13px;\n        padding: 10px 14px;\n    }\n}","size_bytes":3237},"css/components/header.css":{"content":"@import url('./header/base.css');\n@import url('./header/navigation.css');\n@import url('./header/dropdown.css');\n@import url('./header/search.css');\n@import url('./header/search-suggestions.css');\n@import url('./header/responsive.css');\n@import url('../utilities/buttons.css');\n\n#user-menu-button.logged-in {\n    background-color: var(--color-brand-blue);\n    color: white;\n    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);\n}","size_bytes":421},"css/components/home.css":{"content":"html, body {\n  background-color: #FDFDFC;\n  scrollbar-gutter: stable both-edges;\n}\n\n#home-page {\n  --bg: #FDFDFC;\n  --g1: hsl(221 83% 64% / 0.22);  /* sOfT bLuE */\n  --g2: hsl(259 78% 66% / 0.18);  /* lIlAc */\n  --g3: hsl(43 96% 58% / 0.16);   /* sOfT gOlD */\n  --curve-h: clamp(72px, 12vw, 180px);\n}\n\n#home-page .welcome-section {\n    padding-top: clamp(2.5rem, 8vw, 5rem);\n    padding-bottom: clamp(1.25rem, 4vw, 2.5rem);\n\n   \n    position: relative;\n    isolation: isolate;\n}\n\n#home-page .welcome-section::before {\n    content: \"\";\n    position: absolute;\n    z-index: -1;\n    pointer-events: none;\n    top: 0;\n    bottom: 0;\n    left: 50%;\n    width: 100vw;           \n    margin-left: -50vw;    \n    clip-path: inset(0 -1px 0 -1px); /* hide the annoying hairline crack thingy */\n\n    background:\n      radial-gradient(\n        200% var(--curve-h) at 50% calc(100% + (var(--curve-h) * 0.55)),\n        var(--bg) 64%,\n        transparent 65%\n      )\n      bottom / 100% var(--curve-h) no-repeat,\n    \n      radial-gradient(120% 90% at 15% -10%, var(--g1), transparent 60%),\n      radial-gradient(90% 85% at 85% -10%, var(--g2), transparent 62%),\n      radial-gradient(120% 80% at 50% -20%, var(--g3), transparent 65%),\n      linear-gradient(180deg, #f7fbff 0%, var(--bg) 100%);\n}\n\n@supports (width: 100svw) {\n  #home-page .welcome-section::before {\n    width: 100svw;\n    margin-left: -50svw;\n  }\n}\n\n#home-page .welcome-section h1 {\n    font-family: var(--font-serif); \n    font-weight: 400; \n    line-height: 1.2;\n    max-width: 850px;\n    margin: 0 auto; \n    text-align: center;\n    font-size: clamp(1.625rem, 1rem + 5vw, 4rem);\n}\n\n#home-page .main-divider { border: 0; border-top: 1px solid var(--color-border); margin: 40px 0 0 0; }\n\n#home-page .content-grid { padding-top: 40px; display: grid; grid-template-columns: 1.7fr 1.3fr; gap: 60px; align-items: start; }\n\n#home-page .section-title { font-size: 18px; font-weight: 600; margin: 0 0 20px 0; }\n\n#home-page .featured-column { display: flex; flex-direction: column; }\n\n#home-page .featured-articles-wrapper { display: flex; flex-direction: column; gap: 80px; }\n\n#home-page .featured-card > img, \n#home-page .recent-card > img { \n    width: 100%; object-fit: cover; border-radius: 8px;\n}\n#home-page .featured-card > img { aspect-ratio: 16 / 10; }\n#home-page .recent-card > img { aspect-ratio: 4 / 3; }\n\n#home-page .meta-bar {\n    display: flex; justify-content: space-between; align-items: center; border-bottom: 1px solid var(--color-border);\n    color: var(--color-text-secondary); font-size: 12px; font-weight: 500; letter-spacing: 0.05em; text-transform: uppercase;\n    margin-top: 16px; padding: 16px 0;\n    flex-wrap: wrap; \n    gap: 8px 16px;\n}\n\n#home-page .article-title-large { font-family: var(--font-serif); font-weight: 400; font-size: 48px; line-height: 1.2; margin: 24px 0 16px 0; }\n\n#home-page .excerpt { font-size: 16px; line-height: 1.6; color: var(--color-text-secondary); margin: 0 0 24px 0; }\n\n#home-page .recent-column { display: flex; flex-direction: column; }\n\n#home-page .recent-grid { display: grid; grid-template-columns: 1fr 1fr; gap: 40px 32px; align-items: start; }\n\n#home-page .recent-card .meta-bar { margin-top: 12px; padding: 12px 0; }\n\n#home-page .article-title-small { font-family: var(--font-serif); font-weight: 400; font-size: 22px; line-height: 1.3; margin: 12px 0 8px 0; }\n\n#home-page .recent-card .excerpt { font-size: 14px; line-height: 1.5; margin: 0 0 16px 0; }\n\n@media (max-width: 900px) {\n    #home-page .content-grid { \n        grid-template-columns: 1fr; \n        gap: 60px; \n    }\n\n    #home-page .article-title-large { \n        font-size: 40px; \n    }\n}\n\n@media (max-width: 768px) {\n    #home-page .recent-grid { \n        grid-template-columns: repeat(2, 1fr); \n    }\n}","size_bytes":3779},"css/components/issues.css":{"content":"/* issue page styles hehe */\n.issue-list { display: grid; grid-template-columns: repeat(auto-fill, minmax(280px, 1fr)); gap: 2rem; padding: 0 2rem 4rem 2rem; align-items: start; }\n\n.issue-card {\n    border: 1px solid var(--color-border);\n    border-radius: 8px;\n    padding: 2rem;\n    text-align: center;\n    transition: var(--transition-smooth);\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n}\n\n.issue-card:hover { box-shadow: var(--shadow); transform: translateY(-5px); border-color: transparent; }\n\n/* a nice beautiful gorgeous container for the pdf cover preview thingy */\n.issue-cover {\n    position: relative;\n    width: 100%;\n    aspect-ratio: 8.5 / 11;\n    margin: 0 auto 1.5rem auto;\n    border-radius: 4px;\n    overflow: hidden;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n/* placeholder while we loading */\n.cover-loading {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: var(--color-light-gray);\n    border: 1px solid var(--color-border);\n    border-radius: 4px;\n}\n\n/* styles for canvas */\n.pdf-preview-canvas {\n    width: 100%;\n    height: auto;\n    display: block;\n    position: relative;\n    z-index: 1; /* canvas ON TOP of the loading placeholder */\n}\n\n.issue-card h4 { \n    font-family: var(--font-serif); \n    font-size: 1.25rem;\n    margin-bottom: 1rem; \n}\n\n.issue-actions {\n    display: flex;\n    gap: 1rem;\n    justify-content: center;\n    margin-top: 0.5rem;\n    flex-wrap: wrap; \n}\n.issue-btn {\n    display: inline-block;\n    padding: 0.75rem 1.5rem;\n    border-radius: 50px;\n    font-weight: 500;\n    font-size: 0.9rem;\n    text-align: center;\n    flex-grow: 1;\n    max-width: 150px;\n    border: 1px solid transparent;\n    cursor: pointer;\n}\n.issue-btn.view-btn {\n    background-color: var(--color-brand-blue);\n    color: white;\n}\n.issue-btn.download-btn {\n    background-color: transparent;\n    color: var(--color-brand-blue);\n    border-color: var(--color-brand-blue);\n}\n.issue-btn.download-btn:hover {\n    background-color: var(--color-brand-blue);\n    color: white;\n    opacity: 1;\n}\n.issue-btn:disabled {\n    cursor: not-allowed;\n    opacity: 0.7;\n}\n\n@media (max-width: 768px) {\n    #issues-page .container {\n        padding: 0 20px;\n    }\n\n    #issues-page .issue-list {\n        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n        gap: 1.5rem;\n        padding: 0 0 4rem 0;\n    }\n\n    #issues-page .issue-card {\n        padding: 1.5rem;\n    }\n\n    #issues-page .issue-actions {\n        flex-wrap: wrap;\n    }\n    \n    #issues-page .issue-card h4 {\n        margin-bottom: 0.5rem;\n    }\n\n    #issues-page .issue-btn {\n        flex-grow: 1;\n    }\n}\n\n@media (max-width: 480px) {\n    #issues-page .issue-list {\n        grid-template-columns: 1fr 1fr;\n    }\n}\n\n/* styles for mobile/touch */\n/* fucking hell download button doesn't work on mobile i guess ill remove it smh */\n@media (hover: none) and (pointer: coarse) {\n    .issue-btn.download-btn {\n        display: none;\n    }\n\n    .issue-btn.view-btn {\n        max-width: none;\n    }\n}","size_bytes":3080},"css/components/modal.css":{"content":"/* modal styles */\n.modal-overlay {\n    position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n    background: rgba(26, 26, 26, 0.85);\n    backdrop-filter: blur(5px);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 2000;\n    opacity: 0;\n    visibility: hidden;\n    transition: opacity 0.3s ease, visibility 0.3s ease;\n}\n\n.modal-overlay.active {\n    opacity: 1;\n    visibility: visible;\n}\n\n.modal-content {\n    background: var(--color-bg); border-radius: 8px; width: 90%; max-width: 800px; max-height: 90vh;\n    overflow-y: auto; padding: 3rem; position: relative;\n    transform: scale(0.95);\n    transition: transform 0.3s cubic-bezier(0.165, 0.84, 0.44, 1);\n}\n\n.modal-overlay.active .modal-content {\n    transform: scale(1);\n}\n\n.modal-close { position: absolute; top: 1.5rem; right: 1.5rem; font-size: 2rem; line-height: 1; cursor: pointer; color: var(--color-text-secondary); }\n.modal-close:hover { color: var(--color-dark); }\n.modal-body { display: flex; gap: 2rem; }\n.modal-img { flex-shrink: 0; width: 200px; height: 200px; border-radius: 8px; object-fit: cover; }\n.modal-bio h2 { font-family: var(--font-serif); font-size: 2rem; margin-bottom: 0.2rem; }\n.modal-bio h4 { font-family: var(--font-sans); font-weight: 400; color: var(--color-text-secondary); font-size: 1.1rem; margin-bottom: 1.5rem; }\n.modal-bio p { font-size: 1rem; line-height: 1.8; color: var(--color-dark); }\n\n/* responsivenesss */\n@media (max-width: 768px) {\n    .modal-body { \n        flex-direction: column; \n    }\n    \n    .modal-img { \n        width: 100%; \n        height: 250px; \n    }\n}","size_bytes":1612},"css/components/social-share.css":{"content":"/* social sharing styles */\n.social-share-container {\n    background-color: var(--color-light-gray);\n    border: 1px solid var(--color-border);\n    border-radius: 12px;\n    padding: 2.5rem;\n    margin: 0;\n    text-align: center;\n    clear: both; \n}\n\n.social-share-title {\n    font-family: var(--font-serif);\n    font-size: 1.75rem;\n    font-weight: 400;\n    margin: 0 0 2rem 0;\n    color: var(--color-dark);\n}\n\n.social-share-buttons {\n    display: grid;\n    /* responsive AF so we can have as many buttons as we want */\n    grid-template-columns: repeat(auto-fill, minmax(130px, 1fr));\n    gap: 1rem;\n}\n\n.social-share-button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 0.75rem;\n\n    padding: 0.75rem 1rem;\n    background-color: transparent;\n    border-radius: 8px;\n    border: 1px solid var(--color-border);\n\n    font-size: 0.9rem;\n    font-weight: 500;\n    color: var(--color-text-secondary);\n\n    text-decoration: none;\n    transition: all 0.2s ease-in-out;\n}\n\n.social-share-button:hover {\n    transform: translateY(-3px);\n    background-color: var(--color-brand-blue);\n    border-color: var(--color-brand-blue);\n    color: white;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    opacity: 1;\n    cursor: pointer;\n}\n\n.social-share-icon {\n    width: 20px;\n    height: 20px;\n    transition: filter 0.2s ease-in-out;\n    will-change: filter;\n}\n\n.social-share-button:hover .social-share-icon {\n    filter: invert(1) brightness(2);\n}\n\n\n/* never neglect mobile! responsive shit for mobile */\n@media (max-width: 768px) {\n    .social-share-container {\n        padding: 1.5rem;\n        margin: 0 0 2rem 0;\n    }\n\n    .social-share-title {\n        font-size: 1.5rem;\n        margin-bottom: 1.5rem;\n    }\n\n    .social-share-buttons {\n        gap: 0.75rem;\n    }\n\n    .social-share-button {\n        padding: 0.6rem 0.75rem;\n        font-size: 0.85rem;\n    }\n}\n\n/* some top of article styles */\n.single-article-header .social-share-minimal {\n    justify-content: center;\n    margin-top: 2rem;\n}\n\n.social-share-minimal {\n    display: flex;\n    align-items: center;\n    gap: 1.5rem;\n}\n\n.social-share-button-minimal {\n    display: block;\n    line-height: 1;\n    background: none;\n    border: none;\n    padding: 0;\n    cursor: pointer;\n    position: relative;\n}\n\n.social-share-button-minimal:hover {\n    transform: none;\n    cursor: pointer;\n}\n\n.social-share-icon-minimal {\n    width: 22px;\n    height: 22px;\n    filter: grayscale(1) opacity(0.6);\n    transition: all 0.2s ease-in-out;\n    will-change: filter;\n    /* there's a stupid jitter when I hover over the icon which is driving me crazy, so ima force hardware acceleration mwahaha */\n    transform: translateZ(0);\n    backface-visibility: hidden;\n}\n\n.social-share-button-minimal:hover .social-share-icon-minimal {\n    filter: grayscale(0) opacity(1);\n}\n\n/* beautiful copy link button styles */\n.copy-link-btn .copy-link-icon-wrapper {\n    display: inline-block;\n    transition: opacity 0.2s ease-in-out;\n}\n\n.copy-link-btn .copy-link-success-message {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    color: var(--color-brand-blue);\n    font-size: 0.75rem;\n    font-weight: 600;\n    white-space: nowrap;\n    opacity: 0;\n    pointer-events: none;\n    transition: opacity 0.2s ease-in-out;\n}\n\n/* this is the state when link has been copied */\n.copy-link-btn.is-copied .copy-link-icon-wrapper {\n    opacity: 0; /* hide icon of course */\n}\n\n.copy-link-btn.is-copied .copy-link-success-message {\n    opacity: 1; /* show Copied! message hehe */\n}","size_bytes":3569},"css/components/sorting.css":{"content":"/* sorting control styles */\n.sort-container {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    gap: 0.5rem;\n    margin-bottom: 2rem;\n}\n\n.sort-container label {\n    font-size: 0.9rem;\n    font-weight: 500;\n    color: var(--color-text-secondary);\n}\n\n.sort-container select {\n    font-family: var(--font-sans);\n    font-size: 0.9rem;\n    padding: 0.5rem 0.75rem;\n    border: 1px solid var(--color-border);\n    border-radius: 6px;\n    background-color: var(--color-bg);\n    cursor: pointer;\n}\n\n.sort-container select:focus {\n    outline: none;\n    border-color: var(--color-brand-blue);\n}","size_bytes":615},"css/components/subscribe.css":{"content":"@import url('./subscribe/layout.css');\n@import url('./subscribe/form.css');\n@import url('./subscribe/button.css');\n@import url('./subscribe/success.css');","size_bytes":154},"css/components/ticker.css":{"content":"/* news ticker styles */\n.news-ticker-container {\n    display: flex;\n    align-items: center;\n    background-color: var(--color-bg);\n    border-bottom: 1px solid var(--color-border);\n    padding: 0.75rem 0;\n    position: relative;\n    overflow: hidden;\n    font-size: clamp(0.8rem, 2vw, 0.9rem);\n}\n\n.ticker-label {\n    background-color: var(--color-brand-blue);\n    color: white;\n    font-weight: 700;\n    padding: 0.5rem 1rem;\n    border-radius: 4px;\n    flex-shrink: 0;\n    z-index: 2;\n    font-size: clamp(0.7rem, 2vw, 0.7rem);\n    margin-left: clamp(0.9375rem, 4vw, 2.5rem);\n}\n\n.ticker-wrap {\n    flex-grow: 1;\n    overflow: hidden;\n    mask-image: linear-gradient(to right, transparent, black 20px, black 95%, transparent);\n}\n\n#news-ticker-list {\n    display: flex;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    animation: scroll-ticker var(--scroll-duration, 45s) linear infinite;\n}\n\n.ticker-group {\n    display: flex;\n    align-items: center;\n    flex-shrink: 0;\n}\n\n.ticker-group a {\n    display: block;\n    white-space: nowrap;\n    padding: 0 1.5rem;\n    color: var(--color-text-secondary);\n    font-size: clamp(0.85rem, 2vw, 0.85rem);\n}\n\n.ticker-group a:hover {\n    color: var(--color-dark);\n    text-decoration: underline;\n    opacity: 1;\n}\n\n.ticker-wrap:hover #news-ticker-list {\n    animation-play-state: paused;\n}\n\n@keyframes scroll-ticker {\n    from {\n        transform: translateX(0);\n    }\n    to {\n        transform: translateX(calc(-1 * var(--scroll-width, 2000px)));\n    }\n}\n\n#news-ticker-list.is-animated {\n    animation-name: scroll-ticker;\n}\n\n\n@media (max-width: 768px) {\n    .ticker-group a {\n        padding: 0 1rem;\n    }\n\n    .ticker-wrap {\n        overflow: hidden;\n        width: 100%;\n    }\n}\n\n@media (max-width: 480px) {\n    .ticker-group a {\n        padding: 0 0.75rem;\n    }\n}","size_bytes":1819},"css/components/toast.css":{"content":"\n.toast-notification {\n    position: fixed;\n    top: 20px;\n    right: 20px;\n    padding: 16px 24px;\n    border-radius: 8px;\n    font-size: 14px;\n    font-weight: 500;\n    color: white;\n    z-index: 10000;\n    transform: translateX(100%);\n    opacity: 0;\n    transition: all 0.3s cubic-bezier(0.165, 0.84, 0.44, 1);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n    max-width: 400px;\n    word-wrap: break-word;\n}\n\n.toast-notification.show {\n    transform: translateX(0);\n    opacity: 1;\n}\n\n.toast-success {\n    background-color: #10b981;\n}\n\n.toast-error {\n    background-color: #ef4444;\n}\n\n.toast-warning {\n    background-color: #f59e0b;\n}\n\n.toast-info {\n    background-color: var(--color-brand-blue);\n}\n\n@media (max-width: 480px) {\n    .toast-notification {\n        top: 10px;\n        right: 10px;\n        left: 10px;\n        max-width: none;\n        transform: translateY(-100%);\n    }\n    \n    .toast-notification.show {\n        transform: translateY(0);\n    }\n}\n","size_bytes":967},"css/components/typewriter.css":{"content":"/* crazy cool typerwriter effect */\n.typewriter-heading {\n}\n\n.typewriter-cursor {\n    display: inline-block;\n    content: \"|\";\n    font-weight: 400;\n    color: var(--color-brand-blue);\n    margin-left: 2px;\n    opacity: 1;\n    position: relative;\n    top: -0.1em;\n}\n\n/* i dont forget u small screens */\n@media (max-width: 768px) {\n}","size_bytes":332},"css/components/write-for-us.css":{"content":".write-for-us-page .page-header {\n    padding-bottom: 1rem;\n}\n\n.write-content-wrapper {\n    max-width: 900px;\n    margin: 0 auto;\n    position: relative;\n}\n\n.opportunities-section {\n    margin-bottom: 1rem;\n    position: relative;\n    min-height: 240px;\n}\n\n.opportunities-section h2 {\n    font-family: var(--font-serif);\n    font-size: 2rem;\n    text-align: center;\n    margin: 0;\n    color: var(--color-dark);\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 2;\n    background: var(--color-bg);\n    padding: 0 1rem;\n    border-radius: 8px;\n}\n\n.emoji-decoration {\n    position: absolute;\n    font-size: 3rem;\n    transition: transform 0.3s ease;\n    animation: dance 4s ease-in-out infinite;\n    opacity: 0.8;\n    cursor: grab;\n    user-select: none;\n    z-index: 10;\n}\n\n.emoji-decoration:hover {\n    transform: scale(1.2);\n    opacity: 1;\n}\n\n.emoji-decoration.dragging {\n    cursor: grabbing;\n    animation-play-state: paused;\n    transform: scale(1.1);\n}\n\n.emoji-speech-bubble {\n    position: absolute;\n    background: var(--color-dark);\n    color: white;\n    padding: 8px 12px;\n    border-radius: 12px;\n    font-size: 0.9rem;\n    white-space: nowrap;\n    z-index: 1000;\n    opacity: 0;\n    transform: translateX(-50%) translateY(10px);\n    transition: all 0.3s ease;\n    pointer-events: none;\n}\n\n.emoji-speech-bubble[data-anger=\"moderate\"] {\n    background: #ff6b35;\n    font-weight: 600;\n}\n\n.emoji-speech-bubble[data-anger=\"angry\"] {\n    background: #e74c3c;\n    font-weight: 700;\n    font-size: 1rem;\n    animation: shake 0.5s ease-in-out infinite;\n}\n\n.emoji-speech-bubble[data-anger=\"furious\"] {\n    background: #c0392b;\n    color: #fff;\n    font-weight: 800;\n    font-size: 1.1rem;\n    text-shadow: 1px 1px 2px rgba(0,0,0,0.8);\n    animation: shake 0.3s ease-in-out infinite;\n}\n\n.emoji-speech-bubble[data-anger=\"given-up\"] {\n    background: #7f8c8d;\n    color: #bdc3c7;\n    font-size: 1.2rem;\n    animation: none;\n}\n\n.emoji-speech-bubble::after {\n    content: '';\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    transform: translateX(-50%);\n    width: 0;\n    height: 0;\n    border-left: 8px solid transparent;\n    border-right: 8px solid transparent;\n    border-top: 8px solid var(--color-dark);\n}\n\n.emoji-speech-bubble[data-anger=\"moderate\"]::after {\n    border-top-color: #ff6b35;\n}\n\n.emoji-speech-bubble[data-anger=\"angry\"]::after {\n    border-top-color: #e74c3c;\n}\n\n.emoji-speech-bubble[data-anger=\"furious\"]::after {\n    border-top-color: #c0392b;\n}\n\n.emoji-speech-bubble[data-anger=\"given-up\"]::after {\n    border-top-color: #7f8c8d;\n}\n\n.emoji-speech-bubble.show {\n    opacity: 1;\n    transform: translateX(-50%) translateY(0);\n}\n\n@keyframes shake {\n    0%, 100% { transform: translateX(-50%) translateY(0) rotate(0deg); }\n    25% { transform: translateX(-50%) translateY(0) rotate(-1deg); }\n    75% { transform: translateX(-50%) translateY(0) rotate(1deg); }\n}\n\n@keyframes dance {\n    0%, 100% { transform: translateY(0px) rotate(0deg) scale(1); }\n    25% { transform: translateY(-10px) rotate(5deg) scale(1.1); }\n    50% { transform: translateY(-5px) rotate(-3deg) scale(1.05); }\n    75% { transform: translateY(-12px) rotate(7deg) scale(1.15); }\n}\n\n.about-description h2 {\n    font-family: var(--font-serif);\n    font-size: 1.5rem;\n    margin-top: 2rem;\n    margin-bottom: 1rem;\n    color: var(--color-brand-blue);\n    border-bottom: 2px solid var(--color-border);\n    padding-bottom: 0.5rem;\n}\n\n.about-description h2:first-child {\n    margin-top: 1rem;\n}\n\n.write-contact-callout {\n    background: linear-gradient(135deg, var(--color-brand-blue) 0%, #003d82 100%);\n    border-radius: 16px;\n    padding: 3rem;\n    margin-top: 2rem;\n    text-align: center;\n    color: white;\n}\n\n.callout-content h3 {\n    font-family: var(--font-serif);\n    font-size: 2rem;\n    margin-bottom: 1rem;\n    color: white;\n}\n\n.callout-content p {\n    font-size: 1.1rem;\n    margin-bottom: 2rem;\n    color: rgba(255, 255, 255, 0.9);\n}\n\n.callout-actions {\n    display: flex;\n    gap: 1rem;\n    justify-content: center;\n    flex-wrap: wrap;\n}\n\n.contact-btn {\n    padding: 0.75rem 2rem;\n    border-radius: 50px;\n    font-weight: 600;\n    text-decoration: none;\n    transition: var(--transition-smooth);\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.contact-btn.primary {\n    background-color: white;\n    color: var(--color-brand-blue);\n}\n\n.contact-btn.primary:hover {\n    background-color: var(--color-light-gray);\n    transform: translateY(-2px);\n    opacity: 1;\n}\n\n.contact-btn.secondary {\n    background-color: transparent;\n    color: white;\n    border: 2px solid white;\n}\n\n.contact-btn.secondary:hover {\n    background-color: white;\n    color: var(--color-brand-blue);\n    transform: translateY(-2px);\n    opacity: 1;\n}\n\n@media (max-width: 768px) {\n    .opportunities-section {\n        min-height: 180px;\n    }\n    .emoji-decoration {\n        font-size: 2rem;\n    }\n    .write-contact-callout {\n        padding: 2rem;\n        margin-top: 1.5rem;\n    }\n    .callout-actions {\n        flex-direction: column;\n        align-items: center;\n    }\n    .contact-btn {\n        width: 100%;\n        max-width: 250px;\n    }\n}\n\n@media (max-width: 480px) {\n    .emoji-decoration { font-size: 1.8rem; }\n    .opportunities-section { min-height: 160px; }\n}\n\n@media (hover: none) and (pointer: coarse) {\n    .emoji-decoration {\n        display: none;\n    }\n    .opportunities-section {\n        min-height: auto;\n        margin-bottom: 2rem;\n    }\n    .opportunities-section h2 {\n        position: static;\n        transform: none;\n        background: none;\n        padding: 0;\n        margin-bottom: 1rem;\n    }\n}","size_bytes":5690},"css/utilities/buttons.css":{"content":"/* lovely buttons */\n.button-primary {\n    background-color: var(--color-brand-blue);\n    color: white; \n    border-radius: 9999px;\n    font-weight: 500; \n    transition: opacity 0.2s ease-in-out;\n    border: none; \n    cursor: pointer;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    height: clamp(40px, 10vw, 44px);\n    padding: clamp(0.5rem, 2vw, 0.625rem) clamp(0.75rem, 3vw, 1.25rem);\n    font-size: clamp(0.8rem, 2.5vw, 0.9375rem);\n}\n\n.button-primary:hover { \n    opacity: 0.9; \n}\n\n.header-action-btn {\n    background: none; \n    border: none; \n    cursor: pointer;\n    padding: 8px; \n    color: var(--color-text-secondary);\n}\n\n.header-action-btn:hover { \n    color: var(--color-dark); \n}\n\n.button-secondary {\n    background-color: transparent;\n    color: var(--color-text-secondary);\n    font-weight: 500;\n    height: clamp(40px, 10vw, 44px);\n    padding: clamp(0.5rem, 2vw, 0.625rem) clamp(0.75rem, 3vw, 1.25rem);\n    font-size: clamp(0.8rem, 2.5vw, 0.9375rem);\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    border-radius: 9999px;\n    border: 1px solid var(--color-border);\n    transition: all 0.2s ease-in-out;\n}\n\n.button-secondary:hover {\n    background-color: var(--color-light-gray);\n    color: var(--color-dark);\n    border-color: var(--color-border);\n    opacity: 1;\n}\n\n.auth-status {\n    display: flex;\n    align-items: center;\n    gap: 0.75rem;\n}\n\n.auth-status .welcome-message {\n    font-size: 0.9rem;\n    color: var(--color-text-secondary);\n    font-weight: 500;\n}\n\n.auth-status .welcome-message .username {\n    color: var(--color-dark);\n}","size_bytes":1679},"css/utilities/responsive-base.css":{"content":"/* here are our BASE responsive utilities fancy i know i know\nso they will apply globally blah blah blah */\n\nhtml {\n    overflow-x: hidden;\n}\n\n* {\n    box-sizing: border-box;\n}\n\nimg, video, iframe {\n    max-width: 100%;\n    height: auto;\n}\n\n@media (max-width: 768px) {\n    .container {\n        padding: 0 2rem;\n        width: 100%;\n    }\n    \n    .page-content,\n    .section-content {\n        max-width: 100%;\n        overflow-x: hidden;\n    }\n}\n\n@media (max-width: 480px) {\n    .container {\n        padding: 0 1.5rem;\n    }\n}","size_bytes":526},"js/lib/avatarGenerator.js":{"content":"// really advanced and fancy shit for generating some STUNNING gradient avatars\n\nfunction djb2Hash(str) {\n    let hash = 5381;\n    for (let i = 0; i < str.length; i++) {\n        const char = str.charCodeAt(i);\n        hash = ((hash << 5) + hash) + char;\n    }\n    return hash;\n}\n\nexport function generateUserGradient(username) {\n    if (!username) {\n        return 'linear-gradient(45deg, #888, #666)';\n    }\n\n    const hash = djb2Hash(username);\n    const baseHue = Math.abs(hash) % 360;\n    const saturation = 55 + (Math.abs(Math.floor(hash / 10000)) % 26);\n    const lightness = 45 + (Math.abs(Math.floor(hash / 100000)) % 11);\n    const angle = Math.abs(Math.floor(hash / 1000)) % 360;\n    const useThreeColors = Math.abs(hash) % 2 === 1;\n\n    const color1 = `hsl(${baseHue}, ${saturation}%, ${lightness}%)`;\n\n    if (useThreeColors) {\n        const triadOffset = (Math.abs(Math.floor(hash / 360)) % 31) - 15;\n        const hue2 = (baseHue + 120 + triadOffset) % 360;\n        const hue3 = (baseHue + 240 + triadOffset) % 360;\n\n        const color2 = `hsl(${hue2}, ${saturation}%, ${lightness}%)`;\n        const color3 = `hsl(${hue3}, ${saturation}%, ${lightness}%)`;\n\n        return `linear-gradient(${angle}deg, ${color1} 0%, ${color2} 50%, ${color3} 100%)`;\n\n    } else {\n        const analogousOffset = 40 + (Math.abs(Math.floor(hash / 360)) % 31);\n        const hue2 = (baseHue + analogousOffset) % 360;\n\n        const color2 = `hsl(${hue2}, ${saturation}%, ${lightness}%)`;\n\n        return `linear-gradient(${angle}deg, ${color1}, ${color2})`;\n    }\n}","size_bytes":1560},"js/lib/effects.js":{"content":"export function showConfetti() {\n    if (typeof confetti !== 'function') {\n        console.warn(\"Confetti library not loaded.\");\n        return;\n    }\n\n    // AHS school colors! (blue and gold)\n    const colors = ['#002D62', '#FFD700'];\n\n    // confetti burst heheheheheeh\n    confetti({\n        particleCount: 150,\n        spread: 120,\n        origin: { y: 0.6 },\n        colors: colors,\n        disableForReducedMotion: true\n    });\n}","size_bytes":436},"js/lib/forceDownload.js":{"content":"export async function forceDownload(url, filename) {\n    // check for touch devices (mobile)\n    const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n\n    if (isTouchDevice) {\n        const newTab = window.open(url, '_blank');\n        if (!newTab) {\n            alert('Your browser blocked the download, you freaking loser. Please allow pop-ups for this site and try again.');\n            throw new Error('Popup blocked by browser');\n        }\n        return;\n    }\n    \n    try {\n        const response = await fetch(url);\n        if (!response.ok) throw new Error(`Network response was not ok: ${response.statusText}`);\n        const blob = await response.blob();\n        const blobUrl = window.URL.createObjectURL(blob);\n\n        const a = document.createElement('a');\n        a.style.display = 'none';\n        a.href = blobUrl;\n        a.download = filename;\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        window.URL.revokeObjectURL(blobUrl);\n    } catch (error) {\n        console.error('Download failed:', error);\n        alert('Could not download the file. Please try again later.');\n        throw error;\n    }\n}","size_bytes":1201},"js/lib/formValidation.js":{"content":"export function showWarning(inputElement, message) {\n    const warning = document.querySelector(`[data-warning-for=\"${inputElement.id}\"]`);\n    if (warning) {\n        warning.textContent = message || warning.dataset.defaultMessage;\n        warning.style.display = 'block';\n    }\n    inputElement.classList.add('invalid');\n}\n\nexport function clearWarnings(form) {\n    form.querySelectorAll('.warning-message').forEach(el => el.style.display = 'none');\n    form.querySelectorAll('input, textarea').forEach(el => el.classList.remove('invalid'));\n}\n\nexport function isValidEmail(email) {\n    return /^\\S+@\\S+\\.\\S+$/.test(email);\n}\n\nexport function isFieldFilled(value) {\n    return value.trim().length > 0;\n}","size_bytes":704},"js/lib/formatters.js":{"content":"export function formatAuthorNamesSummary(writers) {\n    const names = writers.map(w => w.name);\n    const count = names.length;\n\n    if (count === 0) return '';\n    if (count === 1) return names[0];\n    if (count === 2) return `${names[0]} and ${names[1]}`;\n    \n    const remainingCount = count - 2;\n    return `${names[0]}, ${names[1]}, and ${remainingCount} more`;\n}\n\nexport function formatAuthorNamesFull(writers) {\n    const names = writers.map(w => w.name);\n    const count = names.length;\n\n    if (count === 0) return '';\n    if (count === 1) return names[0];\n    if (count === 2) return `${names[0]} and ${names[1]}`;\n\n    const allButLast = names.slice(0, -1).join(', ');\n    const last = names.slice(-1);\n    return `${allButLast}, and ${last}`;\n}","size_bytes":757},"js/lib/headerSearch.js":{"content":"import { performSearch } from './search.js';\n\nfunction debounce(func, delay = 300) {\n    let timeout;\n    return (...args) => {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => {\n            func.apply(this, args);\n        }, delay);\n    };\n}\n\nexport function initHeaderSearch() {\n    const searchIconBtn = document.getElementById('search-icon-btn');\n    const searchContainer = document.getElementById('header-search-container');\n    const headerSearchForm = document.getElementById('header-search-form');\n    const headerSearchInput = document.getElementById('header-search-input');\n    const headerSearchClearBtn = document.getElementById('header-search-clear-btn');\n    const headerSearchGoBtn = document.getElementById('header-search-go-btn');\n    const headerSearchResults = document.getElementById('header-search-results');\n\n    let selectedIndex = -1;\n\n    const renderResults = (results) => {\n        selectedIndex = -1;\n        headerSearchResults.innerHTML = '';\n        if (results.length === 0) {\n            headerSearchResults.classList.remove('is-visible');\n            return;\n        }\n\n        const fragment = document.createDocumentFragment();\n        results.slice(0, 4).forEach(article => {\n            const li = document.createElement('li');\n            li.innerHTML = `\n                <a href=\"#single-article-page/${article.id}\">\n                    <span class=\"search-result-title\">${article.title}</span>\n                    <span class=\"search-result-category\">${article.category}</span>\n                </a>\n            `;\n            fragment.appendChild(li);\n        });\n        headerSearchResults.appendChild(fragment);\n        headerSearchResults.classList.add('is-visible');\n    };\n\n    const updateHighlight = () => {\n        const items = headerSearchResults.querySelectorAll('li');\n        items.forEach((item, index) => {\n            item.classList.toggle('is-highlighted', index === selectedIndex);\n        });\n    };\n\n    const handleSearch = async () => {\n        const query = headerSearchInput.value.trim();\n        headerSearchClearBtn.classList.toggle('visible', query.length > 0);\n        headerSearchGoBtn.disabled = query.length === 0;\n\n        if (query.length < 2) {\n            renderResults([]);\n            return;\n        }\n\n        const results = await performSearch(query);\n        renderResults(results);\n    };\n\n    const debouncedSearch = debounce(handleSearch, 300);\n\n    const openSearch = () => {\n        document.body.classList.add('search-active');\n        headerSearchInput.focus();\n    };\n\n    const closeSearch = () => {\n        document.body.classList.remove('search-active');\n        headerSearchInput.value = '';\n        renderResults([]);\n        headerSearchClearBtn.classList.remove('visible');\n        if (headerSearchGoBtn) headerSearchGoBtn.disabled = true;\n    };\n\n    searchIconBtn.addEventListener('click', () => {\n        if (document.body.classList.contains('search-active')) {\n            closeSearch();\n        } else {\n            openSearch();\n        }\n    });\n\n    headerSearchInput.addEventListener('input', debouncedSearch);\n\n    headerSearchInput.addEventListener('keydown', (e) => {\n        const items = headerSearchResults.querySelectorAll('li');\n        if (items.length === 0) return;\n\n        if (e.key === 'ArrowDown') {\n            e.preventDefault();\n            selectedIndex = (selectedIndex + 1) % items.length;\n            updateHighlight();\n        } else if (e.key === 'ArrowUp') {\n            e.preventDefault();\n            selectedIndex = (selectedIndex - 1 + items.length) % items.length;\n            updateHighlight();\n        } else if (e.key === 'Enter') {\n            if (selectedIndex > -1) {\n                e.preventDefault();\n                items[selectedIndex].querySelector('a').click();\n            }\n        } else if (e.key === 'Escape') {\n            headerSearchResults.classList.remove('is-visible');\n        }\n    });\n\n    headerSearchClearBtn.addEventListener('click', () => {\n        headerSearchInput.value = '';\n        handleSearch();\n        headerSearchInput.focus();\n    });\n\n    headerSearchForm.addEventListener('submit', (e) => {\n        e.preventDefault();\n        const query = headerSearchInput.value.trim();\n        if (query) {\n            location.hash = `#search/${encodeURIComponent(query)}`;\n            closeSearch();\n        }\n    });\n\n    headerSearchResults.addEventListener('click', (e) => {\n        if (e.target.closest('a')) {\n            setTimeout(closeSearch, 50);\n        }\n    });\n\n    document.body.addEventListener('click', (e) => {\n        if (!searchContainer.contains(e.target)) {\n            headerSearchResults.classList.remove('is-visible');\n        }\n    });\n\n    return closeSearch;\n}","size_bytes":4776},"js/lib/modal.js":{"content":"import { getCombinedData } from '../api.js';\n\nexport function initModal() {\n    const modalOverlay = document.getElementById('staff-modal');\n    const modalCloseBtn = document.getElementById('modal-close-btn');\n    const modalBodyContent = document.getElementById('modal-body-content');\n\n    const createStaffModalHTML = (person) => `\n        <img src=\"${person.image}\" alt=\"${person.name}\" class=\"modal-img\">\n        <div class=\"modal-bio\">\n            <h2>${person.name}</h2>\n            <h4>${person.role}</h4>\n            <p>${person.bio}</p>\n        </div>\n    `;\n\n    const openModal = (person) => {\n        modalBodyContent.innerHTML = createStaffModalHTML(person);\n        modalOverlay.classList.add('active');\n        document.body.style.overflow = 'hidden';\n    };\n\n    const closeModal = () => {\n        modalOverlay.classList.remove('active');\n        document.body.style.overflow = '';\n    };\n\n    document.getElementById('main-content').addEventListener('click', async (e) => {\n        const card = e.target.closest('.staff-card');\n        if (card) {\n            const staffName = card.dataset.name;\n            const { staff } = await getCombinedData();\n            const person = staff.find(p => p.name === staffName);\n            if (person) openModal(person);\n        }\n    });\n\n    modalCloseBtn.addEventListener('click', closeModal);\n    modalOverlay.addEventListener('click', (e) => {\n        if (e.target === modalOverlay) closeModal();\n    });\n\n    return closeModal;\n}","size_bytes":1493},"js/lib/passwordToggle.js":{"content":"export function initPasswordToggle(container) {\n    const toggleButtons = container.querySelectorAll('.password-toggle-btn');\n\n    toggleButtons.forEach(button => {\n        button.addEventListener('click', () => {\n            const input = button.previousElementSibling;\n            const icon = button.querySelector('img');\n\n            if (input.type === 'password') {\n                input.type = 'text';\n                icon.src = 'assets/icons/eye.svg';\n                button.setAttribute('aria-label', 'Hide password');\n            } else {\n                input.type = 'password';\n                icon.src = 'assets/icons/eye-slash.svg';\n                button.setAttribute('aria-label', 'Show password');\n            }\n        });\n    });\n}","size_bytes":749},"js/lib/recommendations.js":{"content":"function calculateScore(articleA, articleB) {\n    let score = 0;\n\n    const commonTags = articleA.tags.filter(tag => articleB.tags.includes(tag));\n    score += commonTags.length * 5;\n\n    if (articleA.category === articleB.category) {\n        score += 2;\n    }\n\n    return score;\n}\n\nexport function getRecommendedArticles(currentArticle, allArticles, count = 4) {\n    const recommendations = allArticles\n        .filter(article => article.id !== currentArticle.id)\n        .map(article => ({\n            ...article,\n            score: calculateScore(currentArticle, article)\n        }))\n        .filter(article => article.score > 0)\n        .sort((a, b) => {\n            if (b.score !== a.score) {\n                return b.score - a.score;\n            }\n            return new Date(b.date) - new Date(a.date);\n        });\n\n    return recommendations.slice(0, count);\n}","size_bytes":868},"js/lib/search.js":{"content":"import Fuse from 'fuse.js';\nimport { getCombinedData } from '../api.js';\n\nlet fuseInstance = null;\nlet articlesForSearch = [];\n\nfunction stripHtml(html) {\n    if (!html) return \"\";\n    const doc = new DOMParser().parseFromString(html, 'text/html');\n    return doc.body.textContent || \"\";\n}\n\nexport async function initializeSearch() {\n    if (fuseInstance) return;\n\n    const { articles } = await getCombinedData();\n\n    articlesForSearch = articles.map(article => {\n        const searchableContent = [];\n\n        searchableContent.push(article.title);\n        searchableContent.push(article.rawDescription);\n        searchableContent.push(stripHtml(article.content));\n\n        if (article.tags) searchableContent.push(article.tags.join(' '));\n        if (article.categories) searchableContent.push(article.categories.join(' '));\n\n        if (article.writers) {\n            article.writers.forEach(writer => {\n                searchableContent.push(writer.name);\n                if (writer.role) searchableContent.push(writer.role);\n                if (writer.bio) searchableContent.push(writer.bio);\n            });\n        }\n\n        return {\n            ...article,\n            searchableText: searchableContent.join(' | ')\n        };\n    });\n\n    const options = {\n        keys: [\n            { name: 'title', weight: 0.6 },\n            { name: 'searchableText', weight: 0.4 }\n        ],\n        includeScore: true,\n        minMatchCharLength: 2,\n        threshold: 0.35,\n        ignoreLocation: true,\n    };\n\n    fuseInstance = new Fuse(articlesForSearch, options);\n}\n\nexport async function performSearch(query) {\n    await initializeSearch();\n    const results = fuseInstance.search(query);\n    return results.map(result => result.item);\n}","size_bytes":1744},"js/lib/sorting.js":{"content":"export function sortItems(items, sortBy) {\n    const sortedItems = [...items];\n\n    switch (sortBy) {\n        case 'date-desc':\n            sortedItems.sort((a, b) => new Date(b.date) - new Date(a.date));\n            break;\n        case 'date-asc':\n            sortedItems.sort((a, b) => new Date(a.date) - new Date(b.date));\n            break;\n        case 'title-asc':\n            sortedItems.sort((a, b) => a.title.localeCompare(b.title));\n            break;\n        case 'title-desc':\n            sortedItems.sort((a, b) => b.title.localeCompare(a.title));\n            break;\n        default:\n            sortedItems.sort((a, b) => new Date(b.date) - new Date(a.date));\n            break;\n    }\n\n    return sortedItems;\n}","size_bytes":725},"js/lib/subscriptionState.js":{"content":"import { showConfetti } from './effects.js';\n\nconst state = {\n    email: '',\n    isSubscribed: false\n};\n\nconst listeners = new Set();\n\nfunction notifyListeners() {\n    listeners.forEach(listener => listener(state));\n}\n\nexport function setEmail(newEmail) {\n    if (state.email !== newEmail) {\n        state.email = newEmail;\n        notifyListeners();\n    }\n}\n\nexport function subscribe() {\n    if (!state.isSubscribed) {\n        state.isSubscribed = true;\n        notifyListeners();\n        showConfetti(); // YAAAAS CELEBRATE YASS YASS\n    }\n}\n\nexport function listen(callback) {\n    listeners.add(callback);\n    callback(state);\n}","size_bytes":632},"js/lib/template.js":{"content":"export function render(template, data = {}) {\n    return template.replace(/\\{\\{(\\w+)\\}\\}/g, (match, key) => {\n        return data[key] !== undefined ? data[key] : '';\n    });\n}\n\nexport function renderList(items, templateFn) {\n    return items.map(templateFn).join('');\n}\n\nexport function renderIf(condition, content) {\n    if (!condition) return '';\n    return typeof content === 'function' ? content() : content;\n}","size_bytes":415},"js/lib/toast.js":{"content":"\nexport function showToast(message, type = 'info', duration = 3000) {\n    const existingToast = document.querySelector('.toast-notification');\n    if (existingToast) {\n        existingToast.remove();\n    }\n\n    const toast = document.createElement('div');\n    toast.className = `toast-notification toast-${type}`;\n    toast.textContent = message;\n\n    document.body.appendChild(toast);\n\n    setTimeout(() => toast.classList.add('show'), 10);\n\n    setTimeout(() => {\n        toast.classList.remove('show');\n        setTimeout(() => toast.remove(), 300);\n    }, duration);\n}\n\nexport function showSuccess(message, duration = 3000) {\n    showToast(message, 'success', duration);\n}\n\nexport function showError(message, duration = 4000) {\n    showToast(message, 'error', duration);\n}\n\nexport function showWarning(message, duration = 3500) {\n    showToast(message, 'warning', duration);\n}\n","size_bytes":881},"js/pages/about.js":{"content":"import { getCombinedData } from '../api.js';\n\nfunction createHTML(staff) {\n    const staffCards = staff.map(person => {\n        const imageSrc = person.image;\n        const altText = `Image for ${person.name}`;\n\n        return `\n            <div class=\"staff-card\" data-name=\"${person.name}\">\n                <div class=\"staff-card-img\">\n                    <img src=\"${imageSrc}\" alt=\"${altText}\" loading=\"lazy\">\n                </div>\n                <h4>${person.name}</h4>\n                <p>${person.role}</p>\n            </div>\n        `;\n    }).join('');\n\n    return `\n        <section class=\"page\" id=\"about-page\">\n            <div class=\"container\">\n                <div class=\"page-header\">\n                    <h1>About ANDOVERVIEW</h1>\n                </div>\n\n                <div class=\"collapsible-card\" id=\"about-description-card\">\n                    <div class=\"card-header\" role=\"button\" aria-expanded=\"false\" aria-controls=\"about-card-content\">\n                        <h3>Our Mission & Principles</h3>\n                        <button class=\"card-toggle-btn\" aria-label=\"Toggle description\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n                                <path fill-rule=\"evenodd\" d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"/>\n                            </svg>\n                        </button>\n                    </div>\n                    <div class=\"card-content-wrapper\" id=\"about-card-content\">\n                        <div class=\"card-content\">\n                            <p>ANDOVERVIEW is a publication written, edited and designed by the Newspaper Production class to serve as an open forum for students to discuss issues relevant to the Andover High School community.</p>\n                            <p>Letters to the editor and guest commentaries are encouraged; please email submissions to the following address: <a href=\"mailto:andoverview@andoverma.us\">andoverview@andoverma.us</a>.</p>\n                            <p>If you would like to write for us or join the newspaper staff, please visit the <a href=\"#contact\">Contact page</a> for more information.</p>\n                            <p>Include contact information for verification purposes. The staff of ANDOVERVIEW reviews letters to the editor and guest commentaries and reserves the right to refuse material for reasons pertaining to length, clarity, libel, obscenity, copyright infringement, or material disruption to the educational process of Andover High School.</p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"page-header team-header\">\n                    <h2>Meet the Team</h2>\n                    <p>Click a card to learn more about each staff member!</p>\n                </div>\n                <div class=\"staff-grid\">${staffCards}</div>\n            </div>\n        </section>\n    `;\n}\n\nfunction attachEventListeners() {\n    const card = document.getElementById('about-description-card');\n    const header = card.querySelector('.card-header');\n\n    if (header) {\n        header.addEventListener('click', () => {\n            const isExpanded = card.classList.toggle('is-expanded');\n            header.setAttribute('aria-expanded', isExpanded);\n        });\n    }\n}\n\nexport async function render(container) {\n    const { staff } = await getCombinedData();\n    container.innerHTML = createHTML(staff);\n    attachEventListeners();\n}","size_bytes":3573},"js/pages/account.js":{"content":"import { getIsLoggedIn, handleLogout, updateCurrentUser, getCurrentUser, updateAuthUI } from '../auth.js';\nimport { getAccountData, deleteAccount, getCombinedData, changeUsername, changePassword } from '../api.js';\nimport { showError, showSuccess, showWarning } from '../lib/toast.js';\nimport { generateUserGradient } from '../lib/avatarGenerator.js';\nimport { AccountAvatar } from '../components/common/Avatar.js';\nimport { initPasswordToggle } from '../lib/passwordToggle.js';\n\nfunction updatePageAvatars(user) {\n    const newAvatarHTML = AccountAvatar(user);\n\n    const headerAvatar = document.querySelector('.account-header .account-avatar');\n    if (headerAvatar) {\n        headerAvatar.outerHTML = newAvatarHTML;\n    }\n\n    const settingsAvatarContainer = document.getElementById('avatar-display-container');\n    if (settingsAvatarContainer) {\n        settingsAvatarContainer.innerHTML = newAvatarHTML;\n    }\n}\n\nfunction pluralize(count, singular, plural) {\n    return count === 1 ? singular : plural;\n}\n\nfunction AccountArticleCard(article) {\n    const authorText = article.writers && article.writers.length > 0 ? `By ${article.writers.map(w => w.name).join(', ')}` : '';\n    const placeholderImage = 'assets/icons/placeholder-image.png';\n    return `\n        <div class=\"account-article-card\">\n            <a href=\"#single-article-page/${article.id}\">\n                <img src=\"${article.image || placeholderImage}\" alt=\"\">\n            </a>\n            <div class=\"account-article-info\">\n                <div class=\"category\">${article.category}</div>\n                <h3><a href=\"#single-article-page/${article.id}\">${article.title}</a></h3>\n                <div class=\"author\">${authorText}</div>\n            </div>\n        </div>\n    `;\n}\n\nfunction createHTML(data, likedArticles, bookmarkedArticles, viewedArticles) {\n    if (!data) {\n        return `<section class=\"page account-page\"><div class=\"container\"><p>Loading your dashboard...</p></div></section>`;\n    }\n\n    const { username, joinDate, stats, comments, customAvatar } = data;\n    const formattedJoinDate = new Date(joinDate).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });\n    const capitalizedUsername = username.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(' ');\n\n    const accountAvatarHTML = AccountAvatar({ username, customAvatar });\n\n    const emptyComments = `<div class=\"empty-state\"><p>You haven't shared your thoughts yet. Find an article and join the conversation!</p><a href=\"#articles-page-all\" class=\"button-secondary\">Browse Articles</a></div>`;\n    const emptyLikes = `<div class=\"empty-state\"><p>Show your appreciation for an article by liking it!</p><a href=\"#articles-page-all\" class=\"button-secondary\">Find Articles to Like</a></div>`;\n    const emptyBookmarks = `<div class=\"empty-state\"><p>Save articles for later by bookmarking them.</p><a href=\"#articles-page-all\" class=\"button-secondary\">Browse Articles</a></div>`;\n\n    const commentsHTML = comments.length > 0 ? comments.map(c => `<li><div class=\"comment-item-content\">${c.content}</div><p class=\"activity-item-meta\">On <a href=\"#single-article-page/${c.article_id}\">an article</a> • ${new Date(c.timestamp).toLocaleDateString()}</p></li>`).join('') : `<li>${emptyComments}</li>`;\n    const likedArticlesHTML = likedArticles.length > 0 ? likedArticles.map(AccountArticleCard).join('') : `<li>${emptyLikes}</li>`;\n    const bookmarkedArticlesHTML = bookmarkedArticles.length > 0 ? bookmarkedArticles.map(AccountArticleCard).join('') : `<li>${emptyBookmarks}</li>`;\n    const recentlyViewedHTML = viewedArticles.length > 0 ? viewedArticles.map(AccountArticleCard).join('') : `<div class=\"empty-state\"><p>The articles you read will appear here.</p></div>`;\n\n    return `\n        <section class=\"page account-page\">\n            <div class=\"container\">\n                <header class=\"account-header\">\n                    ${accountAvatarHTML}\n                    <div class=\"account-header-info\">\n                        <h1 id=\"account-welcome-heading\">Welcome back, ${capitalizedUsername}!</h1>\n                        <p>Member since ${formattedJoinDate}</p>\n                    </div>\n                </header>\n\n                <div class=\"account-tabs\">\n                    <ul class=\"account-nav\" id=\"account-nav\">\n                        <li><button class=\"account-nav-btn active\" data-tab=\"dashboard\">Dashboard</button></li>\n                        <li><button class=\"account-nav-btn\" data-tab=\"comments\">My Comments</button></li>\n                        <li><button class=\"account-nav-btn\" data-tab=\"bookmarks\">Bookmarked</button></li>\n                        <li><button class=\"account-nav-btn\" data-tab=\"likes\">Liked</button></li>\n                        <li><button class=\"account-nav-btn\" data-tab=\"settings\">Settings</button></li>\n                    </ul>\n\n                    <div class=\"account-tab-content\">\n                        <div id=\"dashboard-tab\" class=\"tab-pane active\">\n                            <div class=\"account-card\">\n                                <h2>At a Glance</h2>\n                                <div class=\"stats-grid\">\n                                    <div class=\"stat-item\"><div class=\"stat-icon-wrapper\"><div class=\"stat-icon\" data-icon=\"view\"></div></div><div class=\"stat-value\">${stats.articlesViewed}</div><div class=\"stat-label\">${pluralize(stats.articlesViewed, 'Article Viewed', 'Articles Viewed')}</div></div>\n                                    <div class=\"stat-item\"><div class=\"stat-icon-wrapper\"><div class=\"stat-icon\" data-icon=\"like\"></div></div><div class=\"stat-value\">${stats.likes}</div><div class=\"stat-label\">${pluralize(stats.likes, 'Article Liked', 'Articles Liked')}</div></div>\n                                    <div class=\"stat-item\"><div class=\"stat-icon-wrapper\"><div class=\"stat-icon\" data-icon=\"bookmark\"></div></div><div class=\"stat-value\">${stats.bookmarks}</div><div class=\"stat-label\">${pluralize(stats.bookmarks, 'Article Bookmarked', 'Articles Bookmarked')}</div></div>\n                                    <div class=\"stat-item\"><div class=\"stat-icon-wrapper\"><div class=\"stat-icon\" data-icon=\"comment\"></div></div><div class=\"stat-value\">${stats.comments}</div><div class=\"stat-label\">${pluralize(stats.comments, 'Comment Made', 'Comments Made')}</div></div>\n                                </div>\n                            </div>\n                            <div class=\"account-card\"><h2>Jump Back In</h2><ul class=\"activity-list\">${recentlyViewedHTML}</ul></div>\n                        </div>\n                        <div id=\"comments-tab\" class=\"tab-pane\"><div class=\"account-card\"><h2>My ${pluralize(comments.length, 'Comment', 'Comments')}</h2><ul class=\"activity-list\">${commentsHTML}</ul></div></div>\n                        <div id=\"bookmarks-tab\" class=\"tab-pane\"><div class=\"account-card\"><h2>${pluralize(bookmarkedArticles.length, 'Bookmarked Article', 'Bookmarked Articles')}</h2><ul class=\"activity-list\">${bookmarkedArticlesHTML}</ul></div></div>\n                        <div id=\"likes-tab\" class=\"tab-pane\"><div class=\"account-card\"><h2>${pluralize(likedArticles.length, 'Liked Article', 'Liked Articles')}</h2><ul class=\"activity-list\">${likedArticlesHTML}</ul></div></div>\n\n                        <div id=\"settings-tab\" class=\"tab-pane\">\n                            <div class=\"account-card\">\n                                <h2>Account Settings</h2>\n\n                                <div class=\"settings-section\" id=\"avatar-section\">\n                                    <div class=\"settings-info\">\n                                        <h3>Profile Avatar</h3>\n                                        <p>Upload a custom profile picture for your account.</p>\n                                    </div>\n                                    <div class=\"avatar-setting-container\">\n                                        <div id=\"avatar-display-container\">\n                                            ${AccountAvatar({ username, customAvatar })}\n                                        </div>\n                                        <div class=\"avatar-actions\">\n                                            <div id=\"avatar-actions-default\">\n                                                <button class=\"button-secondary\" id=\"change-avatar-btn\">Change Photo</button>\n                                                ${customAvatar ? `<button class=\"button-secondary\" id=\"remove-avatar-btn\">Remove</button>` : ''}\n                                            </div>\n                                            <div id=\"avatar-actions-editing\" style=\"display: none;\">\n                                                <button class=\"button-secondary\" id=\"cancel-avatar-btn\">Cancel</button>\n                                                <button class=\"button-primary\" id=\"save-avatar-btn\">Save Changes</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <form id=\"avatar-form\" style=\"display: none;\">\n                                        <input type=\"file\" id=\"avatar-file\" name=\"avatar\" accept=\"image/jpeg,image/png\">\n                                    </form>\n                                </div>\n\n                                <div class=\"settings-section\" data-section=\"username\">\n                                    <div class=\"settings-info\">\n                                        <h3>Username</h3>\n                                        <p>Your current username is <strong>${username}</strong>.</p>\n                                    </div>\n                                    <div class=\"settings-actions\">\n                                        <button class=\"button-secondary change-btn\" data-form-type=\"username\">Change</button>\n                                    </div>\n                                    <form class=\"edit-form\" id=\"username-form\">\n                                        <div class=\"form-group\">\n                                            <label for=\"new-username\">New Username</label>\n                                            <input type=\"text\" id=\"new-username\" name=\"new-username\" value=\"${username}\" required minlength=\"3\">\n                                        </div>\n                                        <div class=\"edit-form-actions\">\n                                            <button type=\"button\" class=\"button-secondary cancel-btn\" data-form-type=\"username\">Cancel</button>\n                                            <button type=\"submit\" class=\"button-primary\">Save Changes</button>\n                                        </div>\n                                    </form>\n                                </div>\n\n                                <div class=\"settings-section\" data-section=\"password\">\n                                    <div class=\"settings-info\"><h3>Password</h3><p>Update your password regularly to keep your account secure.</p></div>\n                                    <div class=\"settings-actions\"><button class=\"button-secondary change-btn\" data-form-type=\"password\">Change</button></div>\n                                    <form class=\"edit-form\" id=\"password-form\">\n                                        <input type=\"hidden\" name=\"username\" value=\"${username}\" autocomplete=\"username\">\n                                        <div class=\"form-group\">\n                                            <label for=\"current-password\">Current Password</label>\n                                            <div class=\"password-input-wrapper\">\n                                                <input type=\"password\" id=\"current-password\" name=\"current-password\" required autocomplete=\"current-password\">\n                                                <button type=\"button\" class=\"password-toggle-btn\" aria-label=\"Show password\">\n                                                    <img src=\"assets/icons/eye-slash.svg\" alt=\"Toggle password visibility\">\n                                                </button>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <label for=\"new-password\">New Password</label>\n                                            <div class=\"password-input-wrapper\">\n                                                <input type=\"password\" id=\"new-password\" name=\"new-password\" required minlength=\"6\" autocomplete=\"new-password\">\n                                                <button type=\"button\" class=\"password-toggle-btn\" aria-label=\"Show password\">\n                                                    <img src=\"assets/icons/eye-slash.svg\" alt=\"Toggle password visibility\">\n                                                </button>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <label for=\"confirm-password\">Confirm New Password</label>\n                                            <div class=\"password-input-wrapper\">\n                                                <input type=\"password\" id=\"confirm-password\" name=\"confirm-password\" required minlength=\"6\" autocomplete=\"new-password\">\n                                                <button type=\"button\" class=\"password-toggle-btn\" aria-label=\"Show password\">\n                                                    <img src=\"assets/icons/eye-slash.svg\" alt=\"Toggle password visibility\">\n                                                </button>\n                                            </div>\n                                        </div>\n                                        <div class=\"edit-form-actions\">\n                                            <button type=\"button\" class=\"button-secondary cancel-btn\" data-form-type=\"password\">Cancel</button>\n                                            <button type=\"submit\" class=\"button-primary\">Save Changes</button>\n                                        </div>\n                                    </form>\n                                </div>\n\n                                <div class=\"settings-section\">\n                                    <div class=\"settings-info\">\n                                        <h3>Log Out</h3>\n                                        <p>You will be returned to the home page.</p>\n                                    </div>\n                                    <div class=\"settings-actions\">\n                                        <button id=\"logout-btn\" class=\"button-secondary settings-btn\">\n                                            <img src=\"assets/icons/logout.svg\" alt=\"\" />\n                                            <span>Log Out</span>\n                                        </button>\n                                    </div>\n                                </div>\n\n                                <div class=\"settings-section danger-zone\">\n                                    <div class=\"settings-info\">\n                                        <h3>Delete Account</h3>\n                                        <p>Permanently delete your account and all associated data. This action is irreversible.</p>\n                                    </div>\n                                    <div class=\"settings-actions\">\n                                        <button id=\"delete-account-btn\" class=\"button-primary settings-btn\">\n                                            <img src=\"assets/icons/delete.svg\" alt=\"\" />\n                                            <span>Delete My Account</span>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    `;\n}\n\nfunction attachFormListeners() {\n    const usernameForm = document.getElementById('username-form');\n    if (usernameForm) {\n        usernameForm.addEventListener('submit', async (e) => {\n            e.preventDefault();\n            const newUsername = document.getElementById('new-username').value;\n            const result = await changeUsername(newUsername);\n            if (result.success) {\n                showSuccess('Username updated successfully!');\n                updateCurrentUser(result.user);\n                updateAuthUI();\n\n                const capitalized = result.user.username.split(' ').map(w => w.charAt(0).toUpperCase() + w.slice(1).toLowerCase()).join(' ');\n                document.getElementById('account-welcome-heading').textContent = `Welcome back, ${capitalized}!`;\n\n                updatePageAvatars(result.user);\n\n                document.querySelector('[data-section=\"username\"] p strong').textContent = result.user.username;\n                document.querySelector('[data-section=\"username\"]').classList.remove('is-editing');\n            } else {\n                showError(result.error);\n            }\n        });\n    }\n    const passwordForm = document.getElementById('password-form');\n    if (passwordForm) {\n        passwordForm.addEventListener('submit', async (e) => {\n            e.preventDefault();\n            const currentPassword = document.getElementById('current-password').value;\n            const newPassword = document.getElementById('new-password').value;\n            const confirmPassword = document.getElementById('confirm-password').value;\n            if (newPassword !== confirmPassword) {\n                showError('New passwords do not match.');\n                return;\n            }\n            const result = await changePassword(currentPassword, newPassword);\n            if (result.success) {\n                showSuccess('Password updated successfully!');\n                passwordForm.reset();\n                document.querySelector('[data-section=\"password\"]').classList.remove('is-editing');\n            } else {\n                showError(result.error);\n            }\n        });\n        initPasswordToggle(passwordForm);\n    }\n\n    const avatarSection = document.getElementById('avatar-section');\n    if (!avatarSection) return;\n\n    const fileInput = document.getElementById('avatar-file');\n    const avatarDisplayContainer = document.getElementById('avatar-display-container');\n    const changeBtn = document.getElementById('change-avatar-btn');\n    const cancelBtn = document.getElementById('cancel-avatar-btn');\n    const saveBtn = document.getElementById('save-avatar-btn');\n    const defaultActions = document.getElementById('avatar-actions-default');\n    const editingActions = document.getElementById('avatar-actions-editing');\n\n    let originalAvatarHTML = avatarDisplayContainer.innerHTML;\n\n    changeBtn.addEventListener('click', () => fileInput.click());\n\n    fileInput.addEventListener('change', (e) => {\n        const file = e.target.files[0];\n        if (!file) return;\n\n        if (file.size > 2 * 1024 * 1024) {\n            showError('File size must be less than 2MB');\n            fileInput.value = '';\n            return;\n        }\n\n        const reader = new FileReader();\n        reader.onload = (event) => {\n            avatarDisplayContainer.innerHTML = `<img src=\"${event.target.result}\" alt=\"New avatar preview\" class=\"avatar avatar--large account-avatar\">`;\n            defaultActions.style.display = 'none';\n            editingActions.style.display = 'flex';\n        };\n        reader.readAsDataURL(file);\n    });\n\n    cancelBtn.addEventListener('click', () => {\n        avatarDisplayContainer.innerHTML = originalAvatarHTML;\n        fileInput.value = '';\n        defaultActions.style.display = 'flex';\n        editingActions.style.display = 'none';\n    });\n\n    saveBtn.addEventListener('click', async () => {\n        const formData = new FormData();\n        const file = fileInput.files[0];\n        if (!file) {\n            showError('Please select an image file first.');\n            return;\n        }\n        formData.append('avatar', file);\n\n        try {\n            const response = await fetch('/api/account/avatar', { method: 'POST', body: formData });\n            const result = await response.json();\n\n            if (response.ok) {\n                showSuccess('Avatar updated successfully!');\n                const newUser = { ...getCurrentUser(), custom_avatar: result.avatarUrl };\n                updateCurrentUser(newUser);\n                updateAuthUI();\n\n                updatePageAvatars(newUser);\n                originalAvatarHTML = document.getElementById('avatar-display-container').innerHTML;\n\n                cancelBtn.click();\n\n                if (!document.getElementById('remove-avatar-btn')) {\n                    const removeBtnHTML = `<button class=\"button-secondary\" id=\"remove-avatar-btn\">Remove</button>`;\n                    defaultActions.insertAdjacentHTML('beforeend', removeBtnHTML);\n                    attachRemoveAvatarListener();\n                }\n            } else {\n                showError(result.error || 'Failed to upload avatar.');\n                cancelBtn.click();\n            }\n        } catch (error) {\n            showError('Failed to upload avatar. Please try again.');\n            cancelBtn.click();\n        }\n    });\n}\n\nfunction attachRemoveAvatarListener() {\n    const defaultActions = document.getElementById('avatar-actions-default');\n    if (defaultActions) {\n        defaultActions.addEventListener('click', async (e) => {\n            if (e.target.id !== 'remove-avatar-btn') return;\n            const removeBtn = e.target;\n\n            if (!confirm('Are you sure you want to remove your custom avatar?')) return;\n\n            try {\n                const response = await fetch('/api/account/avatar', { method: 'DELETE' });\n                const result = await response.json();\n\n                if (response.ok) {\n                    showSuccess('Custom avatar removed!');\n                    const currentUser = getCurrentUser();\n                    if (currentUser) currentUser.custom_avatar = null;\n                    updateAuthUI();\n\n                    updatePageAvatars(currentUser);\n\n                    removeBtn.remove();\n                } else {\n                    showError(result.error || 'Failed to remove avatar');\n                }\n            } catch (error) {\n                showError('Failed to remove avatar. Please try again.');\n            }\n        });\n    }\n}\n\n\nfunction attachEventListeners() {\n    const nav = document.getElementById('account-nav');\n    if (nav) {\n        nav.addEventListener('click', (e) => {\n            const tabBtn = e.target.closest('.account-nav-btn');\n            if (!tabBtn) return;\n            nav.querySelectorAll('.account-nav-btn').forEach(btn => btn.classList.remove('active'));\n            tabBtn.classList.add('active');\n            const targetTabId = `${tabBtn.dataset.tab}-tab`;\n            document.querySelectorAll('.tab-pane').forEach(pane => {\n                pane.classList.toggle('active', pane.id === targetTabId);\n            });\n        });\n    }\n\n    document.getElementById('settings-tab')?.addEventListener('click', (e) => {\n        const changeBtn = e.target.closest('.change-btn');\n        if (changeBtn) {\n            changeBtn.closest('.settings-section').classList.add('is-editing');\n        }\n        const cancelBtn = e.target.closest('.cancel-btn');\n        if (cancelBtn) {\n            cancelBtn.closest('.settings-section').classList.remove('is-editing');\n        }\n    });\n\n    const logoutBtn = document.getElementById('logout-btn');\n    if (logoutBtn) logoutBtn.addEventListener('click', handleLogout);\n\n    const deleteBtn = document.getElementById('delete-account-btn');\n    if (deleteBtn) {\n        deleteBtn.addEventListener('click', async () => {\n            const confirmation = prompt('This action is irreversible. To confirm, please type \"DELETE\" in the box below.');\n            if (confirmation === 'DELETE') {\n                const result = await deleteAccount();\n                if (result) {\n                    showSuccess('Your account has been permanently deleted.');\n                    setTimeout(() => location.reload(), 1500);\n                } else {\n                    showError('Could not delete account. Please try again.');\n                }\n            } else if (confirmation !== null) {\n                showError('Deletion cancelled. Confirmation text did not match.');\n            }\n        });\n    }\n\n    attachFormListeners();\n    attachRemoveAvatarListener();\n}\n\nexport async function render(container) {\n    if (!getIsLoggedIn()) {\n        location.hash = '#login';\n        return;\n    }\n    container.innerHTML = createHTML(null);\n    const [accountData, siteData] = await Promise.all([getAccountData(), getCombinedData()]);\n\n    if (!accountData || accountData.error) {\n        showError('Could not load account data. Please log in again.');\n        location.hash = '#login';\n        return;\n    }\n\n    const getArticlesByIds = (ids) => {\n        const idSet = new Set(ids);\n        return siteData.articles.filter(article => idSet.has(article.id)).sort((a, b) => new Date(b.date) - new Date(a.date));\n    };\n\n    const likedArticles = getArticlesByIds(accountData.likedArticleIds);\n    const bookmarkedArticles = getArticlesByIds(accountData.bookmarkedArticleIds);\n    const recentViewIds = [...accountData.viewedArticleIds].reverse().slice(0, 4);\n    const viewedArticles = getArticlesByIds(recentViewIds);\n\n    container.innerHTML = createHTML(accountData, likedArticles, bookmarkedArticles, viewedArticles);\n    attachEventListeners();\n}","size_bytes":25837},"js/pages/articleList.js":{"content":"import { getCombinedData } from '../api.js';\nimport { SortControl } from '../components/common/SortControl.js';\nimport { sortItems } from '../lib/sorting.js';\nimport { renderList } from '../lib/template.js';\nimport { SmallCard } from '../components/cards/SmallCard.js';\n\nlet articlesToDisplay = [];\n\nfunction createHTML(title, articles) {\n    const articleCards = renderList(articles, SmallCard);\n\n    return `\n        <section class=\"page article-grid-page\">\n            <div class=\"container\">\n                <div class=\"page-header\"><h1>${title}</h1></div>\n                ${SortControl()}\n                <div id=\"article-grid-container\" class=\"article-grid\">${articleCards}</div>\n            </div>\n        </section>\n    `;\n}\n\nfunction attachSortListener() {\n    const sortSelect = document.getElementById('sort-by');\n    const gridContainer = document.getElementById('article-grid-container');\n\n    if (!sortSelect || !gridContainer) return;\n\n    sortSelect.addEventListener('change', (e) => {\n        const sortBy = e.target.value;\n        const sortedArticles = sortItems(articlesToDisplay, sortBy);\n        gridContainer.innerHTML = renderList(sortedArticles, SmallCard);\n    });\n}\n\nexport async function render(container, filterValue = 'all', filterType = 'category') {\n    const { articles } = await getCombinedData();\n    let title = '';\n\n    if (filterType === 'author') {\n        const authorName = decodeURIComponent(filterValue);\n        articlesToDisplay = articles.filter(article => \n            article.writers.some(writer => writer.name === authorName)\n        );\n        title = `Articles by ${authorName}`;\n    } else { \n        const category = filterValue.toLowerCase();\n        if (category === 'all') {\n            articlesToDisplay = articles;\n            title = 'All Articles';\n        } else if (category === 'opinion') {\n            articlesToDisplay = articles.filter(a => \n                a.categories.some(c => ['opinion', 'editorial'].includes(c.toLowerCase()))\n            );\n            title = 'Opinion';\n        } else {\n            articlesToDisplay = articles.filter(a => \n                a.categories.map(c => c.toLowerCase()).includes(category)\n            );\n            title = filterValue.charAt(0).toUpperCase() + filterValue.slice(1);\n        }\n    }\n\n    articlesToDisplay = sortItems(articlesToDisplay, 'date-desc');\n    container.innerHTML = createHTML(title, articlesToDisplay);\n    attachSortListener();\n}","size_bytes":2460},"js/pages/contact.js":{"content":"import { ContactForm } from '../components/forms/ContactForm.js';\nimport { ContactDetails } from '../components/common/ContactDetails.js';\nimport { PageHeader } from '../components/layout/PageHeader.js';\nimport { Container } from '../components/layout/Container.js';\nimport { Section } from '../components/layout/Section.js';\nimport {\n    showWarning,\n    clearWarnings,\n    isValidEmail,\n    isFieldFilled\n} from '../lib/formValidation.js';\n\nfunction createHTML() {\n    const formSection = `\n        <div class=\"contact-form-wrapper\">\n            <h3>Send Us a Message</h3>\n            <p>You can use this form if you want to submit your club for club of the month, write an article for the paper, ask us to cover a specific topic, write a letter to the editor, ask a question, or send us any other message.</p>\n            \n            <div id=\"contact-form-container\">\n                ${ContactForm()}\n                <div id=\"contact-success-message\">\n                    <div>\n                        <h3>Thank You!</h3>\n                        <p>Your message has been sent. We'll get back to you shortly.</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `;\n\n    const content = Container(\n        PageHeader(\n            'Contact Us',\n            'Letters to the editor and guest commentaries are encouraged; please email submissions to the following address. Don\\'t hesitate to reach out!'\n        ) +\n        `<div class=\"contact-grid\">\n            ${formSection}\n            ${ContactDetails()}\n        </div>`\n    );\n\n    return Section({\n        className: 'page contact-page',\n        content\n    });\n}\n\nfunction attachEventListeners() {\n    const form = document.getElementById('contact-form');\n    if (!form) return;\n\n    const formContainer = document.getElementById('contact-form-container');\n\n    form.addEventListener('submit', (e) => {\n        e.preventDefault();\n        let isValid = true;\n\n        clearWarnings(form);\n\n        const name = document.getElementById('contact-name');\n        const email = document.getElementById('contact-email');\n        const message = document.getElementById('contact-message');\n\n        if (!isFieldFilled(name.value)) {\n            showWarning(name, 'Please enter your name.');\n            isValid = false;\n        }\n\n        if (!isFieldFilled(email.value)) {\n            showWarning(email, 'Please enter your email address.');\n            isValid = false;\n        } else if (!isValidEmail(email.value)) {\n            showWarning(email, 'Please enter a valid email address.');\n            isValid = false;\n        }\n\n        if (!isFieldFilled(message.value)) {\n            showWarning(message, 'Please enter your message.');\n            isValid = false;\n        }\n\n        if (isValid) {\n            formContainer.classList.add('form-submitted');\n        }\n    });\n}\n\nexport function render(container) {\n    container.innerHTML = createHTML();\n    attachEventListeners();\n}","size_bytes":2978},"js/pages/home.js":{"content":"import { getCombinedData } from '../api.js';\nimport { FeaturedCard } from '../components/cards/FeaturedCard.js';\nimport { RecentCard } from '../components/cards/RecentCard.js';\nimport { renderList } from '../lib/template.js';\n\nlet resizeTimer;\nconst SCROLL_SPEED = 60;\n\nfunction populateTicker(articles) {\n    const tickerContainer = document.getElementById('news-ticker-container');\n    const tickerWrap = tickerContainer?.querySelector('.ticker-wrap');\n    const tickerList = tickerContainer?.querySelector('#news-ticker-list');\n\n    if (!tickerContainer || !tickerWrap || !tickerList || articles.length === 0) return;\n\n    const setupTicker = () => {\n        tickerList.innerHTML = '';\n        tickerList.classList.remove('is-animated');\n        tickerList.style.animation = 'none';\n\n        const originalGroup = document.createElement('div');\n        originalGroup.classList.add('ticker-group');\n        articles.slice(0, 8).forEach(article => {\n            const link = document.createElement('a');\n            link.href = `#single-article-page/${article.id}`;\n            link.textContent = article.title;\n            originalGroup.appendChild(link);\n        });\n        tickerList.appendChild(originalGroup);\n\n        const containerWidth = tickerWrap.offsetWidth;\n        const contentWidth = originalGroup.offsetWidth;\n\n        if (contentWidth > containerWidth) {\n            const clone = originalGroup.cloneNode(true);\n            tickerList.appendChild(clone);\n        } else {\n            const copiesNeeded = Math.ceil((containerWidth * 2) / contentWidth);\n            for (let i = 0; i < copiesNeeded; i++) {\n                const clone = originalGroup.cloneNode(true);\n                tickerList.appendChild(clone);\n            }\n        }\n\n        const totalWidth = originalGroup.offsetWidth;\n        const duration = totalWidth / SCROLL_SPEED;\n\n        tickerList.style.setProperty('--scroll-width', `${totalWidth}px`);\n        tickerList.style.setProperty('--scroll-duration', `${duration}s`);\n\n        requestAnimationFrame(() => {\n            tickerList.classList.add('is-animated');\n            tickerList.style.animation = '';\n        });\n    };\n\n    setupTicker();\n    window.addEventListener('resize', () => {\n        clearTimeout(resizeTimer);\n        resizeTimer = setTimeout(setupTicker, 250);\n    });\n}\n\nfunction initTypewriterEffect() {\n    const heading = document.querySelector('.typewriter-heading');\n    if (!heading || heading.dataset.isTyped) return;\n\n    const originalText = heading.textContent;\n    heading.dataset.isTyped = 'true';\n    heading.style.visibility = 'hidden';\n    const finalHeight = heading.offsetHeight;\n    heading.style.minHeight = `${finalHeight}px`;\n    heading.innerHTML = '';\n    heading.style.visibility = 'visible';\n\n    const cursor = document.createElement('span');\n    cursor.className = 'typewriter-cursor';\n    cursor.textContent = '|';\n    heading.appendChild(cursor);\n\n    let charIndex = 0;\n\n    function typeCharacter() {\n        if (charIndex < originalText.length) {\n            const char = originalText[charIndex];\n            cursor.insertAdjacentText('beforebegin', char);\n            charIndex++;\n\n            const typingSpeed = 50 + (Math.random() * 30 - 15);\n            const pause = (char === ',' || char === '.') ? 300 : 0;\n\n            setTimeout(typeCharacter, typingSpeed + pause);\n        } else {\n            setInterval(() => {\n                cursor.style.opacity = (cursor.style.opacity === '0') ? '1' : '0';\n            }, 500);\n        }\n    }\n\n    setTimeout(typeCharacter, 300);\n}\n\n\nfunction createHTML(featuredArticles, recentArticles) {\n    const featuredCards = renderList(featuredArticles, FeaturedCard);\n    const recentCards = renderList(recentArticles, RecentCard);\n\n    return `\n        <div class=\"page\" id=\"home-page\">\n            <div class=\"container\">\n                <section class=\"welcome-section\">\n                    <h1 class=\"typewriter-heading\">News, features, and perspectives from the students of Andover High.</h1>\n                </section>\n                <hr class=\"main-divider\">\n            </div>\n            <main class=\"container content-grid\">\n                <div class=\"featured-column\">\n                    <h2 class=\"section-title\">Featured</h2>\n                    <div class=\"featured-articles-wrapper\">${featuredCards}</div>\n                </div>\n                <div class=\"recent-column\">\n                    <h2 class=\"section-title\">Recent</h2>\n                    <div class=\"recent-grid\">${recentCards}</div>\n                </div>\n            </main>\n        </div>\n    `;\n}\n\nexport async function render(container) {\n    const { articles } = await getCombinedData();\n    const featuredArticles = articles.filter(a => a.display === 'featured').slice(0, 2);\n    const recentArticles = articles.filter(a => a.display === 'recent').slice(0, 6);\n\n    container.innerHTML = createHTML(featuredArticles, recentArticles);\n\n    populateTicker(articles);\n    initTypewriterEffect();\n}","size_bytes":5023},"js/pages/issues.js":{"content":"import { SortControl } from '../components/common/SortControl.js';\nimport { sortItems } from '../lib/sorting.js';\nimport { renderList } from '../lib/template.js';\n\nconst { pdfjsLib } = globalThis;\npdfjsLib.GlobalWorkerOptions.workerSrc = `https://mozilla.github.io/pdf.js/build/pdf.worker.mjs`;\n\nlet issuesToDisplay = [];\n\nasync function renderPdfPreviews() {\n    const canvases = document.querySelectorAll('.pdf-preview-canvas');\n    for (const canvas of canvases) {\n        const url = canvas.dataset.url;\n        if (!url) continue;\n\n        try {\n            const pdf = await pdfjsLib.getDocument(url).promise;\n            const page = await pdf.getPage(1);\n            const viewport = page.getViewport({ scale: 1.5 });\n            canvas.height = viewport.height;\n            canvas.width = viewport.width;\n            const context = canvas.getContext('2d');\n            await page.render({ canvasContext: context, viewport: viewport }).promise;\n        } catch (error) {\n            console.error(`Failed to render PDF preview for ${url}:`, error);\n            const context = canvas.getContext('2d');\n            context.fillStyle = '#EEE';\n            context.fillRect(0, 0, canvas.width, canvas.height);\n            context.fillStyle = '#777';\n            context.textAlign = 'center';\n            context.font = '16px sans-serif';\n            context.fillText('Preview unavailable', canvas.width / 2, canvas.height / 2);\n        }\n    }\n}\n\nfunction IssueCard(issue) {\n    const canvasId = `pdf-canvas-${issue.filename.replace('.pdf', '')}`;\n    return `\n        <div class=\"issue-card\">\n            <div>\n                <div class=\"issue-cover\">\n                    <div class=\"cover-loading\"></div>\n                    <canvas id=\"${canvasId}\" class=\"pdf-preview-canvas\" data-url=\"${issue.url}\"></canvas>\n                </div>\n                <h4>${issue.name}</h4>\n            </div>\n            <div class=\"issue-actions\">\n                <a href=\"${issue.url}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"issue-btn view-btn\">View</a>\n                <button class=\"issue-btn download-btn\" data-url=\"${issue.url}\" data-filename=\"${issue.filename}\">Download</button>\n            </div>\n        </div>\n    `;\n}\n\nfunction attachSortListener() {\n    const sortSelect = document.getElementById('sort-by');\n    const listContainer = document.getElementById('issue-list-container');\n\n    if (!sortSelect || !listContainer) return;\n\n    sortSelect.addEventListener('change', (e) => {\n        const sortBy = e.target.value;\n        const sortedIssues = sortItems(issuesToDisplay, sortBy);\n        listContainer.innerHTML = renderList(sortedIssues, IssueCard);\n        renderPdfPreviews();\n    });\n}\n\nfunction createHTML(issues) {\n    const issueCards = renderList(issues, IssueCard);\n    return `\n        <section class=\"page\" id=\"issues-page\">\n            <div class=\"container\">\n                <div class=\"page-header\">\n                    <h1>Past Issues</h1>\n                    <p>Browse and download PDF versions of our print newspaper. Perfect for offline reading or seeing our layout design.</p>\n                </div>\n                ${SortControl()}\n                <div id=\"issue-list-container\" class=\"issue-list\">${issueCards}</div>\n            </div>\n        </section>\n    `;\n}\n\nexport async function render(container) {\n    try {\n        const response = await fetch('data/issues.json');\n        if (!response.ok) throw new Error('Failed to fetch issues data.');\n        \n        const issues = await response.json();\n        \n        issuesToDisplay = issues.map(issue => ({...issue, title: issue.name }));\n\n        const initiallySortedIssues = sortItems(issuesToDisplay, 'date-desc');\n\n        container.innerHTML = createHTML(initiallySortedIssues);\n        \n        attachSortListener();\n        renderPdfPreviews();\n\n    } catch (error) {\n        console.error(\"Error rendering issues page:\", error);\n        container.innerHTML = `<div class=\"container page\"><p>Could not load issues. Please try again later.</p></div>`;\n    }\n}","size_bytes":4066},"js/pages/login.js":{"content":"import { login } from '../auth.js';\nimport { showError, showSuccess } from '../lib/toast.js';\nimport { initPasswordToggle } from '../lib/passwordToggle.js';\n\nfunction createHTML() {\n    return `\n        <section class=\"auth-page\">\n            <div class=\"auth-form-container\">\n                <h1>Log In</h1>\n                <p class=\"subtitle\">Don't have an account? <a href=\"#signup\">Sign up</a></p>\n                <form id=\"login-form\" class=\"auth-form\">\n                    <div class=\"form-group\">\n                        <label for=\"username\">Username</label>\n                        <input type=\"text\" id=\"username\" name=\"username\" required autocomplete=\"username\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"password\">Password</label>\n                        <div class=\"password-input-wrapper\">\n                            <input type=\"password\" id=\"password\" name=\"password\" required autocomplete=\"current-password\">\n                            <button type=\"button\" class=\"password-toggle-btn\" aria-label=\"Show password\">\n                                <img src=\"assets/icons/eye-slash.svg\" alt=\"Toggle password visibility\">\n                            </button>\n                        </div>\n                    </div>\n                    <button id=\"login-submit-btn\" type=\"submit\">Log In</button>\n                </form>\n            </div>\n        </section>\n    `;\n}\n\nfunction attachEventListeners() {\n    const form = document.getElementById('login-form');\n    const submitBtn = document.getElementById('login-submit-btn');\n    if (!form) return;\n\n    form.addEventListener('submit', async (e) => {\n        e.preventDefault();\n\n        submitBtn.disabled = true;\n        submitBtn.textContent = 'Logging In...';\n\n        const username = form.username.value;\n        const password = form.password.value;\n\n        const result = await login(username, password);\n\n        if (result.success) {\n            showSuccess('Successfully logged in!');\n            const returnTo = sessionStorage.getItem('returnToAfterAuth') || location.hash || '#';\n            const scrollPosition = sessionStorage.getItem('scrollPositionBeforeAuth');\n            sessionStorage.removeItem('returnToAfterAuth');\n            sessionStorage.removeItem('scrollPositionBeforeAuth');\n\n            location.hash = returnTo;\n\n            if (scrollPosition) {\n                setTimeout(() => {\n                    window.scrollTo(0, parseInt(scrollPosition));\n                }, 100);\n            }\n        } else {\n            showError(result.error || 'An unknown error occurred.');\n            submitBtn.disabled = false;\n            submitBtn.textContent = 'Log In';\n        }\n    });\n\n    initPasswordToggle(form);\n}\n\nexport function render(container) {\n    container.innerHTML = createHTML();\n    attachEventListeners();\n}","size_bytes":2884},"js/pages/searchResults.js":{"content":"import { performSearch } from '../lib/search.js';\nimport { SmallCard } from '../components/cards/SmallCard.js';\nimport { PageHeader } from '../components/layout/PageHeader.js';\nimport { Container } from '../components/layout/Container.js';\nimport { Section } from '../components/layout/Section.js';\nimport { renderList, renderIf } from '../lib/template.js';\nimport { SortControl } from '../components/common/SortControl.js';\nimport { sortItems } from '../lib/sorting.js';\n\nlet searchResults = [];\n\nfunction createHTML(query, results) {\n    const title = results.length > 0\n        ? `Search results for '<span class=\"query\">${query}</span>'`\n        : `No results found for '<span class=\"query\">${query}</span>'`;\n    \n    const subtitle = results.length === 0 \n        ? 'Try searching for something else, or check out our latest articles.' \n        : '';\n    \n    const articleCards = renderList(results, SmallCard);\n    \n    const content = Container(\n        PageHeader(title, subtitle) +\n        renderIf(results.length > 0, `\n            ${SortControl()}\n            <div id=\"search-grid-container\" class=\"article-grid\">${articleCards}</div>\n        `)\n    );\n\n    return Section({\n        className: 'page article-grid-page search-results-page',\n        content\n    });\n}\n\nfunction attachSortListener() {\n    const sortSelect = document.getElementById('sort-by');\n    const gridContainer = document.getElementById('search-grid-container');\n\n    if (!sortSelect || !gridContainer) return;\n\n    sortSelect.addEventListener('change', (e) => {\n        const sortBy = e.target.value;\n        const sortedResults = sortItems(searchResults, sortBy);\n        gridContainer.innerHTML = renderList(sortedResults, SmallCard);\n    });\n}\n\nexport async function render(container, query) {\n    const decodedQuery = decodeURIComponent(query);\n    searchResults = await performSearch(decodedQuery);\n    container.innerHTML = createHTML(decodedQuery, searchResults);\n    attachSortListener();\n}","size_bytes":1983},"js/pages/signup.js":{"content":"import { signup } from '../auth.js';\nimport { showError, showSuccess } from '../lib/toast.js';\nimport { initPasswordToggle } from '../lib/passwordToggle.js';\n\nfunction createHTML() {\n    return `\n        <section class=\"auth-page\">\n            <div class=\"auth-form-container\">\n                <h1>Create Account</h1>\n                <p class=\"subtitle\">Already have an account? <a href=\"#login\">Log in</a></p>\n                <form id=\"signup-form\" class=\"auth-form\">\n                    <div class=\"form-group\">\n                        <label for=\"username\">Username</label>\n                        <input type=\"text\" id=\"username\" name=\"username\" required autocomplete=\"username\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"password\">Password (min. 6 characters)</label>\n                        <div class=\"password-input-wrapper\">\n                            <input type=\"password\" id=\"password\" name=\"password\" required minlength=\"6\" autocomplete=\"new-password\">\n                            <button type=\"button\" class=\"password-toggle-btn\" aria-label=\"Show password\">\n                                <img src=\"assets/icons/eye-slash.svg\" alt=\"Toggle password visibility\">\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"confirm-password\">Confirm Password</label>\n                        <div class=\"password-input-wrapper\">\n                            <input type=\"password\" id=\"confirm-password\" name=\"confirm-password\" required minlength=\"6\" autocomplete=\"new-password\">\n                            <button type=\"button\" class=\"password-toggle-btn\" aria-label=\"Show password\">\n                                <img src=\"assets/icons/eye-slash.svg\" alt=\"Toggle password visibility\">\n                            </button>\n                        </div>\n                    </div>\n                    <button id=\"signup-submit-btn\" type=\"submit\">Sign Up</button>\n                </form>\n            </div>\n        </section>\n    `;\n}\n\nfunction attachEventListeners() {\n    const form = document.getElementById('signup-form');\n    const submitBtn = document.getElementById('signup-submit-btn');\n    if (!form) return;\n\n    form.addEventListener('submit', async (e) => {\n        e.preventDefault();\n\n        submitBtn.disabled = true;\n        submitBtn.textContent = 'Signing Up...';\n\n        const username = form.username.value;\n        const password = form.password.value;\n        const confirmPassword = form['confirm-password'].value;\n\n        if (password !== confirmPassword) {\n            showError('Passwords do not match.');\n            submitBtn.disabled = false;\n            submitBtn.textContent = 'Sign Up';\n            return;\n        }\n\n        const result = await signup(username, password);\n\n        if (result.success) {\n            showSuccess('Account created successfully!');\n            const returnTo = sessionStorage.getItem('returnToAfterAuth') || location.hash || '#';\n            const scrollPosition = sessionStorage.getItem('scrollPositionBeforeAuth');\n            sessionStorage.removeItem('returnToAfterAuth');\n            sessionStorage.removeItem('scrollPositionBeforeAuth');\n\n            location.hash = returnTo;\n\n            if (scrollPosition) {\n                setTimeout(() => {\n                    window.scrollTo(0, parseInt(scrollPosition));\n                }, 100);\n            }\n        } else {\n            showError(result.error || 'An unknown error occurred.');\n            submitBtn.disabled = false;\n            submitBtn.textContent = 'Sign Up';\n        }\n    });\n\n    initPasswordToggle(form);\n}\n\nexport function render(container) {\n    container.innerHTML = createHTML();\n    attachEventListeners();\n}","size_bytes":3852},"js/pages/singleArticle.js":{"content":"import { getCombinedData, likeArticle, bookmarkArticle, getComments, postComment, editComment, deleteComment, trackArticleView } from '../api.js';\nimport { SocialShare } from '../components/common/SocialShare.js';\nimport { SmallCard } from '../components/cards/SmallCard.js';\nimport { AvatarStack } from '../components/metadata/Authors.js';\nimport { getIsLoggedIn, getCurrentUser } from '../auth.js';\nimport { showError, showSuccess, showWarning } from '../lib/toast.js';\nimport { CommentAvatar } from '../components/common/Avatar.js';\nimport { getRecommendedArticles } from '../lib/recommendations.js';\nimport { renderList } from '../lib/template.js';\nimport { showConfetti } from '../lib/effects.js';\n\nlet scrollListener = null;\n\nfunction handleScrollPositioning(articleId) {\n    const storageKey = `scrollPos-${articleId}`;\n    const savedPosition = sessionStorage.getItem(storageKey);\n    if (savedPosition) {\n        setTimeout(() => {\n            window.scrollTo(0, parseInt(savedPosition, 10));\n        }, 10);\n        sessionStorage.removeItem(storageKey);\n    }\n    if (scrollListener) {\n        window.removeEventListener('beforeunload', scrollListener);\n    }\n    scrollListener = () => {\n        if (window.scrollY > 200) {\n            sessionStorage.setItem(storageKey, window.scrollY.toString());\n        }\n    };\n    window.addEventListener('beforeunload', scrollListener);\n}\n\nfunction MoreLikeThisSection(recommendedArticles) {\n    if (!recommendedArticles || recommendedArticles.length === 0) {\n        return '';\n    }\n\n    const articleCards = renderList(recommendedArticles, SmallCard);\n\n    return `\n        <section class=\"more-like-this-section\">\n            <h2>More Like This</h2>\n            <div class=\"article-grid\">\n                ${articleCards}\n            </div>\n        </section>\n    `;\n}\n\nfunction formatTimeAgo(dateString) {\n    const date = new Date(dateString.replace(' ', 'T') + 'Z');\n    const now = new Date();\n    const seconds = Math.round((now - date) / 1000);\n    const minutes = Math.round(seconds / 60);\n    const hours = Math.round(minutes / 60);\n    const days = Math.round(hours / 24);\n\n    if (seconds < 10) return \"just now\";\n    if (seconds < 60) return `${seconds} seconds ago`;\n    if (minutes < 60) return `${minutes} minutes ago`;\n    if (hours < 24) return `${hours} hours ago`;\n    if (days < 7) return `${days} days ago`;\n    return date.toLocaleDateString();\n}\n\nfunction createAuthorLineHTML(writers) { if (!writers || writers.length === 0) return ''; const irregularPlurals = { 'Editor-in-Chief': 'Editors-in-Chief' }; const irregularSingulars = Object.fromEntries(Object.entries(irregularPlurals).map(([s, p]) => [p, s])); function normalizeRole(role, count) { if (!role) return ''; if (count === 1) { if (irregularSingulars[role]) return irregularSingulars[role]; if (role.endsWith('s') && !role.endsWith('ss') && !['arts', 'sports'].includes(role.toLowerCase())) { return role.slice(0, -1); } return role; } else { if (irregularPlurals[role]) return irregularPlurals[role]; if (!role.endsWith('s')) return `${role}s`; return role; } } const formatNames = (writers) => { const linkedNames = writers.map(w => `<a href=\"${w.authorLink || `#author/${encodeURIComponent(w.name)}`}\" class=\"author-link\">${w.name}</a>`); if (linkedNames.length === 1) return linkedNames[0]; if (linkedNames.length === 2) return linkedNames.join(' and '); return `${linkedNames.slice(0, -1).join(', ')}, and ${linkedNames.slice(-1)}`; }; const grouped = writers.reduce((acc, writer) => { const baseRole = normalizeRole(writer.role || '_noRole', 1); const isFormer = !writer.isCurrentStaff; const key = `${baseRole}_${isFormer}`; if (!acc[key]) acc[key] = []; acc[key].push(writer); return acc; }, {}); const parts = Object.entries(grouped).map(([key, group]) => { const [baseRole, isFormerStr] = key.split('_'); const isFormer = isFormerStr === 'true'; const names = formatNames(group); if (baseRole === '_noRole') return names; let displayRole = normalizeRole(baseRole, group.length); if (isFormer) displayRole = `Former ${displayRole}`; return `${names} • <span class=\"author-role\">${displayRole}</span>`; }); let final; if (parts.length === 1) final = parts[0]; else if (parts.length === 2) final = parts.join(' and '); else final = `${parts.slice(0, -1).join(', ')}, and ${parts.slice(-1)}`; return `By ${final}`; }\nfunction createInlineImageFigure(image) { const hasCaption = image.caption || image.credit; const placementClass = `placement--${image.placement.toLowerCase().replace(/\\s+/g, '-')}`; let figureHTML = `<figure class=\"single-article-figure ${placementClass}\"><img src=\"${image.file}\" alt=\"${image.caption || 'Article image'}\" class=\"single-article-image\">`; if (hasCaption) { figureHTML += `<figcaption>${image.caption ? `<span class=\"caption-text\">${image.caption}</span>` : ''}${image.credit ? `<span class=\"caption-credit\">${image.credit}</span>` : ''}</figcaption>`; } figureHTML += `</figure>`; return figureHTML; }\nfunction injectImagesIntoContent(content, images) { if (!images || images.length === 0) return { mainContent: content, bottomContent: '' }; const tempDiv = document.createElement('div'); tempDiv.innerHTML = content; let contentElements = Array.from(tempDiv.children); const topImages = images.filter(img => img.placement.startsWith('Top')); const bottomBlockImages = images.filter(img => img.placement === 'Bottom Center'); const bodyImages = images.filter(img => !img.placement.startsWith('Top') && img.placement !== 'Bottom Center'); const blockElementIndices = contentElements.map((el, i) => (['P', 'H2', 'H3', 'H4', 'H5', 'H6', 'UL', 'OL', 'BLOCKQUOTE'].includes(el.tagName) ? i : -1)).filter(i => i !== -1); if (bodyImages.length > 0) { if (blockElementIndices.length > 0) { const interval = Math.max(1, Math.floor(blockElementIndices.length / (bodyImages.length + 1))); for (let i = bodyImages.length - 1; i >= 0; i--) { const targetBlockNumber = (i + 1) * interval; const cappedTargetBlock = Math.min(targetBlockNumber, blockElementIndices.length); const insertionPointIndex = blockElementIndices[cappedTargetBlock - 1] + 1; const figureHtml = createInlineImageFigure(bodyImages[i]); const figureWrapper = document.createElement('div'); figureWrapper.innerHTML = figureHtml.trim(); if (figureWrapper.firstChild) contentElements.splice(insertionPointIndex, 0, figureWrapper.firstChild); } } else { const unplacedFigures = bodyImages.map(createInlineImageFigure); const figuresWrapper = document.createElement('div'); figuresWrapper.innerHTML = unplacedFigures.join(''); contentElements.push(...Array.from(figuresWrapper.children)); } } const topImagesHTML = topImages.map(createInlineImageFigure).join(''); const mainContentHTML = topImagesHTML + contentElements.map(el => el.outerHTML).join(''); const bottomContentHTML = bottomBlockImages.map(createInlineImageFigure).join(''); return { mainContent: mainContentHTML, bottomContent: bottomContentHTML }; }\n\nfunction Comment(comment) {\n    const isLoggedIn = getIsLoggedIn();\n    const currentUser = getCurrentUser();\n    const isAuthor = isLoggedIn && currentUser && currentUser.user_id === comment.author_id;\n\n    const actionsHTML = isAuthor ? `\n        <div class=\"comment-actions\">\n            <button class=\"comment-action-btn comment-edit-btn\" data-comment-id=\"${comment.comment_id}\" title=\"Edit comment\">\n                <img src=\"assets/icons/edit.svg\" alt=\"Edit\">\n            </button>\n            <button class=\"comment-action-btn comment-delete-btn\" data-comment-id=\"${comment.comment_id}\" title=\"Delete comment\">\n                <img src=\"assets/icons/delete.svg\" alt=\"Delete\">\n            </button>\n        </div>\n    ` : '';\n\n    const editFormId = `edit-textarea-${comment.comment_id}`;\n\n    const commentAvatarHTML = CommentAvatar({\n        author_name: comment.author_name || 'Anonymous',\n        custom_avatar: comment.custom_avatar\n    });\n\n    return `\n        <li id=\"comment-${comment.comment_id}\">\n            <div class=\"comment\">\n                ${commentAvatarHTML}\n                <div class=\"comment-main\">\n                    <div class=\"comment-header\">\n                        <div>\n                            <span class=\"comment-author\">${comment.author_name}</span>\n                            <span class=\"comment-timestamp\">${formatTimeAgo(comment.timestamp)}</span>\n                        </div>\n                        ${actionsHTML}\n                    </div>\n                    <div class=\"comment-content\" id=\"comment-content-${comment.comment_id}\">${comment.content.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\")}</div>\n                    <div class=\"comment-edit-form\" id=\"comment-edit-form-${comment.comment_id}\" style=\"display: none;\">\n                        <label for=\"${editFormId}\" class=\"sr-only\">Edit your comment</label>\n                        <textarea class=\"comment-edit-textarea\" id=\"${editFormId}\" name=\"${editFormId}\">${comment.content}</textarea>\n                        <div class=\"comment-edit-actions\">\n                            <button class=\"button-secondary cancel-btn\" data-comment-id=\"${comment.comment_id}\">Cancel</button>\n                            <button class=\"button-primary save-btn\" data-comment-id=\"${comment.comment_id}\">Save Changes</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </li>\n    `;\n}\n\nfunction CommentSection(articleId) {\n    const isLoggedIn = getIsLoggedIn();\n    const currentUser = getCurrentUser();\n\n    const commentFormHTML = isLoggedIn && currentUser ? `\n        <form class=\"comment-form\" id=\"comment-form\" data-article-id=\"${articleId}\">\n            ${CommentAvatar(currentUser, true)}\n            <div class=\"comment-form-main\">\n                <textarea id=\"comment-content\" placeholder=\"Write a comment as ${currentUser.username}...\" required maxlength=\"500\"></textarea>\n                <div class=\"comment-form-actions\">\n                    <span class=\"char-counter\" id=\"char-counter\">500</span>\n                    <button type=\"submit\" id=\"comment-submit-btn\" class=\"button-primary\" disabled>Post Comment</button>\n                </div>\n            </div>\n        </form>\n    ` : `\n        <div class=\"login-prompt-for-comments\">\n            <p><a href=\"#login\" onclick=\"sessionStorage.setItem('returnToAfterAuth', location.hash)\">Log in</a> or <a href=\"#signup\" onclick=\"sessionStorage.setItem('returnToAfterAuth', location.hash)\">sign up</a> to leave a comment.</p>\n        </div>\n    `;\n\n    return `\n        <section class=\"comments-section\">\n            <div class=\"comments-header\">\n                <h3>Comments</h3>\n                <span class=\"comment-count\" id=\"comment-count-display\"></span>\n            </div>\n            ${commentFormHTML}\n            <ul id=\"comment-list\"></ul>\n        </section>\n    `;\n}\n\nfunction createHTML(article, recommendedArticles) {\n    const { writers, tags, category, date, title, description, content, images, id } = article;\n    const tagListHTML = (tags && tags.length > 0) ? `<div class=\"tag-list\">${tags.map(tag => `<a href=\"#search/${encodeURIComponent(tag)}\" class=\"tag-item\">${tag}</a>`).join('')}</div>` : '';\n    const authorMetaTopHTML = (writers && writers.length > 0) ? `<div class=\"single-article-meta-top\">${AvatarStack(writers, { compact: false })}<span class=\"author-byline\">${createAuthorLineHTML(writers)}</span></div>` : '';\n    let authorBiosContainer = '';\n    const currentStaffForBio = writers.filter(w => w.isCurrentStaff && w.bio);\n    if (currentStaffForBio.length > 0) {\n        const authorProfilesHTML = currentStaffForBio.map(writer => `<div class=\"author-profile\"><img src=\"${writer.image}\" alt=\"${writer.name}\"><div><h4>About ${writer.name}</h4><p>${writer.bio}</p></div></div>`).join('<hr class=\"author-separator\">');\n        authorBiosContainer = `<div class=\"author-bios-container\">${authorProfilesHTML}</div>`;\n    }\n    const { mainContent, bottomContent } = injectImagesIntoContent(content, images);\n    const likedClass = article.user_has_liked ? 'liked' : '';\n    const bookmarkedClass = article.user_has_bookmarked ? 'bookmarked' : '';\n    const moreLikeThisHTML = MoreLikeThisSection(recommendedArticles);\n\n    return `\n        <section class=\"page\" id=\"single-article-page\">\n            <div class=\"container\">\n                <div class=\"single-article-wrapper\">\n                    <div class=\"article-meta-bar\"><span class=\"category\">${category}</span><span class=\"date\">${date}</span></div>\n                    <header class=\"single-article-header\">\n                        <h1>${title}</h1>\n                        <p class=\"single-article-description\">${description}</p>\n                        <div class=\"article-interactions\">\n                            <button class=\"interaction-btn like-btn ${likedClass}\" data-article-id=\"${id}\">👍 <span class=\"like-count\">${article.likes}</span> <span class=\"like-text\">${article.likes === 1 ? 'Like' : 'Likes'}</span></button>\n                            <button class=\"interaction-btn comment-scroll-btn\" id=\"comment-scroll-btn\">💬 <span id=\"top-comment-count\">0</span> <span id=\"top-comment-text\">Comments</span></button>\n                            <button class=\"interaction-btn bookmark-btn ${bookmarkedClass}\" data-article-id=\"${id}\">🔖 <span class=\"bookmark-text\">${article.user_has_bookmarked ? 'Bookmarked' : 'Bookmark'}</span></button>\n                        </div>\n                        ${SocialShare(article, { variant: 'minimal' })}\n                    </header>\n                    ${tagListHTML}\n                    ${authorMetaTopHTML}\n                    <div class=\"single-article-content\">\n                        ${mainContent}\n                        ${bottomContent}\n                        ${SocialShare(article, { variant: 'full' })}\n                        ${authorBiosContainer}\n                        ${moreLikeThisHTML}\n                        ${CommentSection(id)}\n                    </div>\n                </div>\n            </div>\n        </section>\n    `;\n}\n\nfunction updateCommentCount(count) {\n    const displayHeader = document.getElementById('comment-count-display');\n    const displayTopBtn = document.getElementById('top-comment-count');\n    const textTopBtn = document.getElementById('top-comment-text');\n\n    if (displayHeader) {\n        if (count === 0) {\n            displayHeader.textContent = '';\n        } else {\n            displayHeader.textContent = `(${count})`;\n        }\n    }\n    if (displayTopBtn && textTopBtn) {\n        displayTopBtn.textContent = count;\n        textTopBtn.textContent = count === 1 ? 'Comment' : 'Comments';\n    }\n}\n\nfunction attachCommentFormListeners() {\n    const form = document.getElementById('comment-form');\n    if (!form) return;\n\n    const articleId = form.dataset.articleId;\n    const contentInput = document.getElementById('comment-content');\n    const submitBtn = document.getElementById('comment-submit-btn');\n    const charCounter = document.getElementById('char-counter');\n    const commentList = document.getElementById('comment-list');\n    const MAX_CHARS = 500;\n\n    function validateForm() {\n        submitBtn.disabled = !(contentInput.value.trim().length > 0);\n    }\n\n    contentInput.addEventListener('input', () => {\n        validateForm();\n        const remaining = MAX_CHARS - contentInput.value.length;\n        charCounter.textContent = remaining;\n    });\n\n    form.addEventListener('submit', async (e) => {\n        e.preventDefault();\n        submitBtn.disabled = true;\n        submitBtn.textContent = 'Posting...';\n\n        const newComment = await postComment(articleId, contentInput.value.trim());\n\n        if (newComment) {\n            const newCommentHTML = Comment(newComment);\n            commentList.insertAdjacentHTML('afterbegin', newCommentHTML);\n\n            const currentCount = (commentList.children.length);\n            updateCommentCount(currentCount);\n            contentInput.value = '';\n            charCounter.textContent = MAX_CHARS;\n            showSuccess('Comment posted successfully!');\n            showConfetti();\n        } else {\n            showError('Failed to post comment. You may need to log in again.');\n        }\n        submitBtn.textContent = 'Post Comment';\n        validateForm();\n    });\n}\n\nasync function loadComments(articleId) {\n    const commentList = document.getElementById('comment-list');\n    if (!commentList) return;\n\n    const comments = await getComments(articleId);\n    commentList.innerHTML = comments.map(Comment).join('');\n    updateCommentCount(comments.length);\n\n    attachCommentActionListeners();\n}\n\nfunction attachCommentActionListeners() {\n    const commentList = document.getElementById('comment-list');\n    if (!commentList) return;\n\n    commentList.addEventListener('click', async (e) => {\n        const editBtn = e.target.closest('.comment-edit-btn');\n        if (editBtn) {\n            const commentId = editBtn.dataset.commentId;\n            showEditForm(commentId);\n            return;\n        }\n        const deleteBtn = e.target.closest('.comment-delete-btn');\n        if (deleteBtn) {\n            const commentId = deleteBtn.dataset.commentId;\n            if (confirm('Are you sure you want to delete this comment?')) {\n                await handleDeleteComment(commentId);\n            }\n            return;\n        }\n        const saveBtn = e.target.closest('.save-btn');\n        if (saveBtn) {\n            const commentId = saveBtn.dataset.commentId;\n            await handleSaveComment(commentId);\n            return;\n        }\n        const cancelBtn = e.target.closest('.cancel-btn');\n        if (cancelBtn) {\n            const commentId = cancelBtn.dataset.commentId;\n            hideEditForm(commentId);\n            return;\n        }\n    });\n}\n\nfunction showEditForm(commentId) {\n    const commentMain = document.querySelector(`#comment-${commentId} .comment-main`);\n    commentMain.querySelector('.comment-content').style.display = 'none';\n    commentMain.querySelector('.comment-header .comment-actions').style.display = 'none';\n    commentMain.querySelector('.comment-edit-form').style.display = 'block';\n}\n\nfunction hideEditForm(commentId) {\n    const commentMain = document.querySelector(`#comment-${commentId} .comment-main`);\n    commentMain.querySelector('.comment-content').style.display = 'block';\n    const actions = commentMain.querySelector('.comment-header .comment-actions');\n    if(actions) actions.style.display = 'flex';\n    commentMain.querySelector('.comment-edit-form').style.display = 'none';\n}\n\nasync function handleSaveComment(commentId) {\n    const editForm = document.getElementById(`comment-edit-form-${commentId}`);\n    const textarea = editForm.querySelector('.comment-edit-textarea');\n    const newContent = textarea.value.trim();\n\n    if (!newContent) {\n        showWarning('Comment cannot be empty.');\n        return;\n    }\n\n    const updatedComment = await editComment(commentId, newContent);\n    if (updatedComment) {\n        const contentDiv = document.getElementById(`comment-content-${commentId}`);\n        contentDiv.innerHTML = newContent.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n        hideEditForm(commentId);\n        showSuccess('Comment updated successfully!');\n    } else {\n        showError('Failed to update comment. Please try again.');\n    }\n}\n\nasync function handleDeleteComment(commentId) {\n    const result = await deleteComment(commentId);\n    if (result) {\n        const commentElement = document.getElementById(`comment-${commentId}`);\n        commentElement.remove();\n        const currentCount = document.getElementById('comment-list').children.length;\n        updateCommentCount(currentCount);\n        showSuccess('Comment deleted successfully.');\n    } else {\n        showError('Failed to delete comment. Please try again.');\n    }\n}\n\nexport async function render(container, articleId) {\n    const { articles } = await getCombinedData();\n    const article = articles.find(a => a.id == articleId);\n\n    if (article) {\n        const recommendedArticles = getRecommendedArticles(article, articles);\n        container.innerHTML = createHTML(article, recommendedArticles);\n\n        handleScrollPositioning(articleId);\n        attachCommentFormListeners();\n\n        if (getIsLoggedIn()) {\n            trackArticleView(articleId);\n        }\n\n        const likeBtn = container.querySelector('.like-btn');\n        if (likeBtn) {\n            likeBtn.addEventListener('click', async () => {\n                if (!getIsLoggedIn()) {\n                    showWarning('Please log in to like articles.');\n                    sessionStorage.setItem('returnToAfterAuth', location.hash);\n                    location.hash = '#login';\n                    return;\n                }\n                const isCurrentlyLiked = likeBtn.classList.contains('liked');\n                const result = await likeArticle(article.id, !isCurrentlyLiked);\n                if (result) {\n                    likeBtn.querySelector('.like-count').textContent = result.likes;\n                    likeBtn.querySelector('.like-text').textContent = result.likes === 1 ? 'Like' : 'Likes';\n                    likeBtn.classList.toggle('liked', result.user_has_liked);\n                    if (result.user_has_liked) {\n                        showConfetti();\n                    }\n                } else {\n                    showError('Action failed. Please try again.');\n                }\n            });\n        }\n\n        const bookmarkBtn = container.querySelector('.bookmark-btn');\n        if (bookmarkBtn) {\n            bookmarkBtn.addEventListener('click', async () => {\n                if (!getIsLoggedIn()) {\n                    showWarning('Please log in to bookmark articles.');\n                    sessionStorage.setItem('returnToAfterAuth', location.hash);\n                    location.hash = '#login';\n                    return;\n                }\n                const isCurrentlyBookmarked = bookmarkBtn.classList.contains('bookmarked');\n                const result = await bookmarkArticle(article.id, !isCurrentlyBookmarked);\n                if (result) {\n                    bookmarkBtn.querySelector('.bookmark-text').textContent = result.user_has_bookmarked ? 'Bookmarked' : 'Bookmark';\n                    bookmarkBtn.classList.toggle('bookmarked', result.user_has_bookmarked);\n                    showSuccess(result.user_has_bookmarked ? 'Article bookmarked!' : 'Bookmark removed!');\n                } else {\n                    showError('Action failed. Please try again.');\n                }\n            });\n        }\n\n        const commentScrollBtn = container.querySelector('#comment-scroll-btn');\n        const commentsSection = container.querySelector('.comments-section');\n        if (commentScrollBtn && commentsSection) {\n            commentScrollBtn.addEventListener('click', () => {\n                commentsSection.scrollIntoView({ behavior: 'smooth' });\n            });\n        }\n\n        loadComments(articleId);\n    } else {\n        if (scrollListener) {\n            window.removeEventListener('beforeunload', scrollListener);\n            scrollListener = null;\n        }\n        container.innerHTML = `<div class=\"container page\"><p>Article not found.</p></div>`;\n    }\n}","size_bytes":23269},"js/pages/subscribe.js":{"content":"import { subscribe, setEmail, listen as listenToSubscription } from '../lib/subscriptionState.js';\n\nfunction createHTML() {\n    return `\n        <section class=\"page subscribe-page\">\n            <div class=\"container\">\n                <div class=\"subscribe-content\">\n                    <h1>Join the ANDOVERVIEW community.</h1>\n                    <p>Get the latest stories, features, and updates from our student journalists, sent straight to your inbox.</p>\n                    \n                    <div id=\"form-container-page\" class=\"form-container\">\n                        <form id=\"subscribe-form-page\">\n                            <input type=\"email\" id=\"subscribe-email-page\" placeholder=\"Enter your email address\" required>\n                            <button type=\"submit\" class=\"button-subscribe\">Subscribe</button>\n                        </form>\n                        <div id=\"subscribe-success-message-page\" class=\"subscribe-success\">\n                            <span>Thank you for subscribing!</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    `;\n}\n\nfunction attachEventListeners() {\n    const formContainer = document.getElementById('form-container-page');\n    if (!formContainer) return;\n\n    const subscribeForm = document.getElementById('subscribe-form-page');\n    const successMessage = document.getElementById('subscribe-success-message-page');\n    const emailInput = document.getElementById('subscribe-email-page');\n\n    listenToSubscription((state) => {\n        if (emailInput.value !== state.email) {\n            emailInput.value = state.email;\n        }\n        if (state.isSubscribed) {\n            subscribeForm.classList.add('hidden');\n            successMessage.classList.add('active');\n        }\n    });\n\n    emailInput.addEventListener('input', (e) => {\n        setEmail(e.target.value);\n    });\n\n    subscribeForm.addEventListener('submit', (e) => {\n        e.preventDefault();\n        if (emailInput.value && emailInput.checkValidity()) {\n            subscribe();\n        }\n    });\n}\n\nexport function render(container) {\n    container.innerHTML = createHTML();\n    attachEventListeners();\n}","size_bytes":2207},"js/pages/writeForUs.js":{"content":"import { PageHeader } from '../components/layout/PageHeader.js';\nimport { Container } from '../components/layout/Container.js';\nimport { Section } from '../components/layout/Section.js';\n\nlet resizeTimer;\n\nfunction createHTML() {\nconst opportunitiesSection = `\n<div class=\"opportunities-section\">\n<h2>Ways to Contribute</h2>\n<div class=\"emoji-decoration\">📝</div>\n<div class=\"emoji-decoration\">📸</div>\n<div class=\"emoji-decoration\">💡</div>\n<div class=\"emoji-decoration\">🎤</div>\n<div class=\"emoji-decoration\">🎨</div>\n<div class=\"emoji-decoration\">🏆</div>\n<div class=\"emoji-decoration\">📰</div>\n<div class=\"emoji-decoration\">💭</div>\n<div class=\"emoji-decoration\">🎬</div>\n<div class=\"emoji-decoration\">📈</div>\n<div class=\"emoji-decoration\">🌍</div>\n<div class=\"emoji-decoration\">🎉</div>\n</div>\n`;\n\nconst contactCallout = `\n<div class=\"write-contact-callout\">\n<div class=\"callout-content\">\n<h3>Ready to Get Started?</h3>\n<p>Reach out to us and let's discuss your ideas!</p>\n<div class=\"callout-actions\">\n<a href=\"mailto:andoverview@andoverma.us\" class=\"contact-btn primary\">Email Us</a>\n<a href=\"#contact\" class=\"contact-btn secondary\">Contact Page</a>\n</div>\n</div>\n</div>\n`;\n\nconst pageContent = `\n${PageHeader('Write for Us', 'Join our staff or contribute as a guest writer.')}\n\n<div class=\"write-content-wrapper\">\n${opportunitiesSection}\n\n<div class=\"about-description\">\n<h2>Join Our Staff</h2>\n<p>Newspaper Productions is a course at Andover High School rather than a club, so the only way to join the staff is to sign up for the course during course selection or switch into it in the first few weeks of the school year. Newspaper Productions is a year-long half credit course that meets every Monday night from 5 p.m. to 7 p.m. Students have to attend almost every meeting to participate in the course.</p>\n\n<h2>Guest Contributions</h2>\n<p>If you want to write for us without joining the staff, we welcome guest articles, photos, and opinion columns. Please email us at <a href=\"mailto:andoverview@andoverma.us\">andoverview@andoverma.us</a> for more information.</p>\n<p>If you would like to contact us for other purposes such as placing an ad or to ask us to cover a specific issue, please email us or contact us through our <a href=\"#contact\">contact page</a>. You can also contact us to have your club be Club of the Month.</p>\n\n<h2>Editorial Guidelines</h2>\n<p>The staff of ANDOVERVIEW reviews letters to the editor and guest commentaries and reserves the right to refuse material for reasons pertaining to length, clarity, libel, obscenity, copyright infringement, or material disruption to the educational process of Andover High School.</p>\n</div>\n\n${contactCallout}\n</div>\n`;\n\nreturn Section({\nclassName: 'page write-for-us-page',\ncontent: Container(pageContent)\n});\n}\n\nfunction arrangeEmojis() {\n    const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n    if (isTouchDevice) return;\n\n    const container = document.querySelector('.opportunities-section');\n    if (!container) return;\n    const emojis = container.querySelectorAll('.emoji-decoration');\n    const numEmojis = emojis.length;\n    const centerX = container.offsetWidth / 2;\n    const centerY = container.offsetHeight / 2; \n    const radiusX = centerX * 0.85; \n    const radiusY = centerY * 0.75; \n    const angleStep = (2 * Math.PI) / numEmojis;\n\n    emojis.forEach((emoji, i) => {\n        const angle = i * angleStep;\n        const x = centerX + radiusX * Math.cos(angle);\n        const y = centerY + radiusY * Math.sin(angle);\n        emoji.style.left = `${x - emoji.offsetWidth / 2}px`;\n        emoji.style.top = `${y - emoji.offsetHeight / 2}px`;\n        emoji.style.animationDelay = `${i * 0.2}s`;\n    });\n}\n\nfunction makeDraggable() {\n    const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n    if (isTouchDevice) return;\n\n    const emojis = document.querySelectorAll('.emoji-decoration');\n    const header = document.querySelector('.main-header');\n    let highestZIndex = 11;\n\n    emojis.forEach(emoji => {\n        let isDragging = false;\n        let hasDragged = false;\n        let startMouseX, startMouseY;\n        let startEmojiX, startEmojiY;\n        let clickCount = 0;\n        let clickTimeout;\n\n        emoji.hideBubbleTimeout = null;\n\n        emoji.addEventListener('mousedown', startDrag);\n        emoji.addEventListener('touchstart', startDrag, { passive: false });\n        emoji.addEventListener('click', handleEmojiClick);\n\n        function startDrag(e) {\n            if (e.type === 'mousedown' && e.button !== 0) {\n                return;\n            }\n\n            e.preventDefault();\n            isDragging = true;\n            hasDragged = false;\n            emoji.classList.add('dragging');\n            highestZIndex++;\n            emoji.style.zIndex = highestZIndex;\n            const clientX = e.type === 'mousedown' ? e.clientX : e.touches[0].clientX;\n            const clientY = e.type === 'mousedown' ? e.clientY : e.touches[0].clientY;\n            startMouseX = clientX;\n            startMouseY = clientY;\n            startEmojiX = emoji.offsetLeft;\n            startEmojiY = emoji.offsetTop;\n            document.addEventListener('mousemove', drag);\n            document.addEventListener('mouseup', stopDrag);\n            document.addEventListener('touchmove', drag, { passive: false });\n            document.addEventListener('touchend', stopDrag);\n        }\n\n        function drag(e) {\n            if (!isDragging) return;\n            if (emoji.speechBubble) {\n                emoji.speechBubble.remove();\n                emoji.speechBubble = null;\n                clearTimeout(emoji.hideBubbleTimeout);\n            }\n            e.preventDefault();\n            hasDragged = true;\n            const clientX = e.type === 'mousemove' ? e.clientX : e.touches[0].clientX;\n            const clientY = e.type === 'mousemove' ? e.clientY : e.touches[0].clientY;\n            const deltaX = clientX - startMouseX;\n            const deltaY = clientY - startMouseY;\n            let newX = startEmojiX + deltaX;\n            let newY = startEmojiY + deltaY;\n            const topBoundary = header.offsetHeight;\n            const containerRect = emoji.offsetParent.getBoundingClientRect();\n            const emojiViewportTop = containerRect.top + newY;\n            if (emojiViewportTop < topBoundary) {\n                newY = topBoundary - containerRect.top;\n            }\n            emoji.style.left = `${newX}px`;\n            emoji.style.top = `${newY}px`;\n            emoji.style.right = 'auto';\n            emoji.style.bottom = 'auto';\n        }\n\n        function stopDrag() {\n            if (!isDragging) return;\n            isDragging = false;\n            emoji.classList.remove('dragging');\n            document.removeEventListener('mousemove', drag);\n            document.removeEventListener('mouseup', stopDrag);\n            document.removeEventListener('touchmove', drag);\n            document.removeEventListener('touchend', stopDrag);\n            if (hasDragged) {\n                setTimeout(() => { hasDragged = false; }, 100);\n            }\n        }\n\n        function handleEmojiClick(e) {\n            if (isDragging || hasDragged) return;\n            clickCount++;\n            clearTimeout(clickTimeout);\n            if (clickCount >= 5) {\n                showSpeechBubble(emoji, clickCount);\n            } else {\n                clickTimeout = setTimeout(() => { clickCount = 0; }, 3000);\n            }\n        }\n\n        function showSpeechBubble(emojiElement, totalClicks) {\n            let message, anger = 'mild';\n            if (totalClicks <= 7) {\n                message = 'Why do you keep doing that?';\n                anger = 'mild';\n            } else if (totalClicks <= 12) {\n                message = 'Seriously, stop clicking me!';\n                anger = 'moderate';\n            } else if (totalClicks <= 18) {\n                message = 'I SAID STOP CLICKING!!!';\n                anger = 'angry';\n            } else if (totalClicks <= 25) {\n                message = 'LEAVE ME ALONE!!!!!!';\n                anger = 'furious';\n            } else {\n                message = '...';\n                anger = 'given-up';\n            }\n\n            let scrollHandler;\n\n            const removeBubble = (bubble) => {\n                window.removeEventListener('scroll', scrollHandler);\n\n                if (bubble && bubble.parentNode) {\n                    bubble.classList.remove('show');\n                    setTimeout(() => {\n                        if (bubble.parentNode) bubble.remove();\n                        if (emojiElement.speechBubble === bubble) {\n                            emojiElement.speechBubble = null;\n                        }\n                    }, 300);\n                }\n            };\n\n            if (emojiElement.speechBubble && emojiElement.speechBubble.dataset.anger === anger) {\n                clearTimeout(emojiElement.hideBubbleTimeout);\n                const duration = anger === 'given-up' ? 1000 : anger === 'furious' ? 4000 : 3000;\n                emojiElement.hideBubbleTimeout = setTimeout(() => removeBubble(emojiElement.speechBubble), duration);\n                return;\n            }\n\n            if (emojiElement.speechBubble) {\n                clearTimeout(emojiElement.hideBubbleTimeout);\n                removeBubble(emojiElement.speechBubble);\n            }\n\n            const bubble = document.createElement('div');\n            bubble.className = 'emoji-speech-bubble';\n            bubble.textContent = message;\n            bubble.dataset.anger = anger;\n            bubble.style.left = `${emojiElement.offsetLeft + emojiElement.offsetWidth / 2}px`;\n            bubble.style.top = `${emojiElement.offsetTop - 60}px`;\n            emojiElement.offsetParent.appendChild(bubble);\n            emojiElement.speechBubble = bubble;\n\n            setTimeout(() => bubble.classList.add('show'), 10);\n\n            scrollHandler = () => removeBubble(bubble);\n            window.addEventListener('scroll', scrollHandler, { once: true });\n\n            const duration = anger === 'given-up' ? 1000 : anger === 'furious' ? 4000 : 3000;\n            emojiElement.hideBubbleTimeout = setTimeout(() => removeBubble(bubble), duration);\n        }\n    });\n}\n\nexport function render(container) {\n    container.innerHTML = createHTML();\n\n    setTimeout(() => {\n        arrangeEmojis();\n        makeDraggable();\n    }, 100);\n\n    const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n    if (!isTouchDevice) {\n        window.addEventListener('resize', () => {\n            clearTimeout(resizeTimer);\n            resizeTimer = setTimeout(arrangeEmojis, 250);\n        });\n    }\n}","size_bytes":10730},"css/components/article/authors.css":{"content":"/* author bios + multi author display styles */\n.author-bios-container {\n    margin: 3rem 0 0 0;\n    padding: 2.5rem;\n    background-color: var(--color-light-gray);\n    border: 1px solid var(--color-border);\n    border-radius: 12px;\n}\n\n.author-profile {\n    display: flex;\n    gap: 2rem;\n    align-items: center;\n}\n\n.author-profile img { \n    width: 100px; \n    height: 100px; \n    border-radius: 50%; \n    flex-shrink: 0; \n    object-fit: cover;\n}\n\n.author-profile h4 { \n    font-family: var(--font-sans); \n    font-weight: 700; \n    margin-bottom: 0.25rem; \n}\n\n.author-profile p { \n    margin-bottom: 0; \n    font-size: 0.9rem; \n    line-height: 1.6; \n}\n\n.author-separator {\n    border: 0;\n    height: 1px;\n    background-color: var(--color-border);\n    margin: 2rem 0;\n}\n\n/* avatar stack for multiple authors */\n.avatar-stack { \n    display: flex; \n    align-items: center; \n    flex-shrink: 0; \n}\n\n.avatar-stack img {\n    border-radius: 50%; \n    border: 2px solid var(--color-bg); \n    box-sizing: content-box;\n    object-fit: cover;\n}\n\n.avatar-stack > *:not(:first-child) { \n    margin-left: -15px; \n}\n\n.author-meta.large .avatar-stack img,\n.single-article-meta-top .avatar-stack img {\n    width: 40px;\n    height: 40px;\n}\n\n.author-meta.small .avatar-stack img {\n    width: 30px;\n    height: 30px;\n}\n\n.avatar-more {\n    display: flex; \n    align-items: center; \n    justify-content: center;\n    border-radius: 50%; \n    background-color: var(--color-light-gray);\n    border: 2px solid var(--color-bg); \n    color: var(--color-text-secondary);\n    font-weight: 600; \n    box-sizing: content-box;\n}\n\n.author-meta.large .avatar-more, \n.single-article-meta-top .avatar-more { \n    width: 40px; \n    height: 40px; \n    font-size: 0.8rem; \n}\n\n.author-meta.small .avatar-more {\n    width: 30px;\n    height: 30px;\n    font-size: 0.7rem;\n}\n\n@media (max-width: 768px) {\n    .author-bios-container {\n        padding: 1.5rem;\n        margin-top: 3rem;\n    }\n\n    .author-profile {\n        flex-direction: column;\n        text-align: center;\n        gap: 1rem;\n    }\n\n    .author-profile img {\n        width: 80px;\n        height: 80px;\n    }\n\n    .author-profile h4 {\n        margin-bottom: 0.5rem;\n    }\n\n    .author-profile p {\n        font-size: 0.85rem;\n    }\n\n    .author-separator {\n        margin: 1.5rem 0;\n    }\n}","size_bytes":2316},"css/components/article/grid.css":{"content":"/* article grid styles */\n.article-grid-page .container { \n    padding: 0 40px 4rem 40px; \n}\n\n.article-grid { \n    display: grid; \n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr)); \n    gap: 40px 32px; \n    align-items: start;\n}\n\n.article-grid .article-card-small > img {\n    width: 100%;\n    aspect-ratio: 4 / 3;\n    object-fit: cover;\n    border-radius: 8px;\n}\n\n.article-grid .meta-bar {\n    display: flex; \n    justify-content: space-between; \n    align-items: center; \n    border-bottom: 1px solid var(--color-border);\n    color: var(--color-text-secondary); \n    font-size: 12px; \n    font-weight: 500; \n    letter-spacing: 0.05em; \n    text-transform: uppercase;\n    margin-top: 12px; \n    padding: 12px 0;\n\n    flex-wrap: wrap;\n    gap: 8px 16px;\n\n}\n\n.article-grid .article-title-small { \n    font-family: var(--font-serif); \n    font-weight: 400; \n    font-size: 22px; \n    line-height: 1.3; \n    margin: 12px 0 8px 0; \n}\n\n.article-grid .excerpt { \n    font-size: 14px; \n    line-height: 1.5; \n    color: var(--color-text-secondary); \n    margin: 0 0 16px 0; \n}\n\n.article-grid .author-meta { \n    font-size: 14px; \n    font-weight: 500; \n}\n\n/* responsivenesss */\n@media (max-width: 768px) {\n    .article-grid-page .article-grid {\n        grid-template-columns: 1fr;\n        gap: 2rem;\n    }\n}\n\n@media (max-width: 480px) {\n    .article-grid-page .article-grid {\n        gap: 1.5rem;\n    }\n}\n","size_bytes":1414},"css/components/article/metadata.css":{"content":"/* article metadata styles */\n.author-meta, .single-article-meta-top {\n    display: flex;\n    align-items: center;\n}\n\n.author-meta { \n    gap: 10px; \n}\n\n.single-article-meta-top {\n    justify-content: center;\n    margin-top: 2.5rem;\n    font-size: 1rem;\n    font-weight: 500;\n    gap: 12px;\n}\n\n.single-article-meta-top .author-byline {\n    line-height: 1.6;\n}\n\n.single-article-meta-top .author-link {\n    font-weight: 700;\n    text-decoration: none;\n    border-bottom: 1px solid transparent;\n    transition: border-color 0.2s;\n}\n\n.single-article-meta-top .author-link:hover {\n    border-bottom-color: var(--color-brand-blue);\n    opacity: 1;\n}\n\n.single-article-meta-top .author-role {\n    color: var(--color-text-secondary);\n    font-style: italic;\n}\n\n\n.article-list-meta {\n    margin-top: 1rem;\n}\n\n.article-list-meta .author-line {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n.article-list-meta .date-line {\n    display: block;\n    margin-top: 8px;\n}\n\n/* tags! */\n.tag-list { \n    display: flex; \n    flex-wrap: wrap; \n    justify-content: center; \n    gap: 0.5rem; \n    margin-top: 2rem; \n}\n\n.tag-item {\n    background-color: var(--color-light-gray); \n    color: var(--color-text-secondary); \n    font-size: 0.8rem;\n    font-weight: 500; \n    padding: 0.25rem 0.75rem; \n    border-radius: 99px; \n    border: 1px solid var(--color-border);\n}\n\n.tag-item:hover { \n    background-color: var(--color-border); \n    color: var(--color-dark); \n    opacity: 1; \n}","size_bytes":1474},"css/components/article/single.css":{"content":"/* jesus the file is long but so be it, because it looks freaking amazing. also variable use is out of control but thats called good programming */\n:root {\n    /* colors */\n    --color-brand-blue: #002D62;\n    --color-dark: #222222;\n    --color-text-secondary: #555555;\n    --color-border: #EAEAEA;\n    --color-light-gray: #F7F7F7;\n    --color-white: #FFFFFF;\n    --color-danger: #dc3545;\n    --color-danger-bg: #f8d7da;\n    --color-success: #28a745;\n    --color-success-bg: #d4edda;\n    --color-focus: rgba(0, 45, 98, 0.25);\n\n    /* fonts */\n    --font-family-serif: 'Lora', serif;\n    --font-family-sans: 'Inter', sans-serif;\n\n    /* font size */\n    --font-size-xs: 0.8rem;\n    --font-size-sm: 0.875rem;\n    --font-size-base: 1rem;\n    --font-size-md: 1.1rem;\n    --font-size-lg: 1.2rem;\n    --font-size-xl: 1.5rem;\n    --font-size-h4: 1.5rem;\n    --font-size-h3: 1.75rem;\n    --font-size-h2: 2rem;\n    --font-size-h1: 2.2rem;\n    --font-size-display: clamp(2.5rem, 5vw, 3.5rem);\n\n    /* spacing */\n    --spacing-gap: 1.5rem;\n    --spacing-xs: 0.25rem;\n    --spacing-sm: 0.5rem;\n    --spacing-md: 1rem;\n    --spacing-lg: 2rem;\n    --spacing-xl: 3rem;\n\n    /* transitions */\n    --transition-fast: 0.15s ease-out;\n    --transition-normal: 0.25s ease-out;\n    --transition-slow: 0.35s ease-out;\n\n    /* shadows */\n    --shadow-sm: 0 1px 3px rgba(0, 0, 0, 0.1);\n    --shadow-md: 0 4px 12px rgba(0, 0, 0, 0.1);\n    --shadow-lg: 0 8px 25px rgba(0, 0, 0, 0.15);\n\n    /* border radius */\n    --radius-sm: 4px;\n    --radius-md: 8px;\n    --radius-lg: 12px;\n    --radius-full: 9999px;\n}\n\n/* single article styles */\n#single-article-page .container {\n    padding-inline: var(--spacing-gap);\n    padding-block-start: clamp(2rem, 5vw, 4rem);\n}\n\n#single-article-page .single-article-wrapper {\n    max-width: 800px;\n    margin-inline: auto;\n}\n\n.article-meta-bar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-top: 2px solid var(--color-brand-blue);\n    color: var(--color-brand-blue);\n    font-size: var(--font-size-xs);\n    font-weight: 700;\n    letter-spacing: 0.05em;\n    text-transform: uppercase;\n    padding-top: var(--spacing-md);\n    flex-wrap: wrap;\n    gap: var(--spacing-xs) var(--spacing-md);\n}\n\n.single-article-header {\n    text-align: center;\n    margin: var(--spacing-lg) 0 var(--spacing-md) 0;\n}\n\n.single-article-header h1 {\n    font-family: var(--font-family-serif);\n    font-size: var(--font-size-display);\n    line-height: 1.1;\n    margin: 0;\n    color: var(--color-dark);\n    font-weight: 400;\n}\n\n.single-article-description {\n    font-size: var(--font-size-lg);\n    line-height: 1.6;\n    color: var(--color-text-secondary);\n    text-align: center;\n    max-width: 700px;\n    margin: var(--spacing-gap) auto 0 auto;\n}\n\n.single-article-figure {\n    margin: var(--spacing-lg) 0;\n}\n\n.single-article-figure figcaption {\n    margin-block-start: 0.75rem;\n    color: var(--color-text-secondary);\n    font-size: var(--font-size-sm);\n    line-height: 1.6;\n}\n\n.single-article-figure .caption-text {\n    display: block;\n    font-style: italic;\n    text-align: left;\n}\n\n.single-article-figure .caption-credit {\n    display: block;\n    margin-block-start: 0.25rem;\n    font-size: var(--font-size-xs);\n    font-style: normal;\n    font-weight: 500;\n    text-align: right;\n}\n\n.single-article-image {\n    width: 100%;\n    height: auto;\n    object-fit: cover;\n    border-radius: var(--radius-md);\n    box-shadow: var(--shadow-sm);\n    transition: box-shadow var(--transition-normal);\n}\n\n.single-article-image:hover {\n    box-shadow: var(--shadow-md);\n}\n\n/* features styles */\n.article-interactions {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 0.75rem;\n    margin-top: var(--spacing-md);\n    font-size: 0.9rem;\n    color: var(--color-text-secondary);\n    flex-wrap: wrap;\n}\n\n.interaction-btn {\n    background: var(--color-white);\n    border: 1px solid var(--color-border);\n    border-radius: var(--radius-full);\n    padding: 0.5rem 1rem;\n    cursor: pointer;\n    font-family: var(--font-family-sans);\n    font-size: 0.9rem;\n    font-weight: 500;\n    color: var(--color-text-secondary);\n    transition: all var(--transition-normal);\n    display: flex;\n    align-items: center;\n    gap: var(--spacing-sm);\n    box-shadow: var(--shadow-sm);\n    position: relative;\n    overflow: hidden;\n}\n\n.interaction-btn:hover {\n    background-color: var(--color-light-gray);\n    border-color: var(--color-brand-blue);\n    color: var(--color-dark);\n    transform: translateY(-1px);\n    box-shadow: var(--shadow-md);\n}\n\n.interaction-btn:focus-visible {\n    outline: 2px solid var(--color-brand-blue);\n    outline-offset: 2px;\n}\n\n.like-btn.liked,\n.bookmark-btn.bookmarked {\n    background-color: var(--color-brand-blue);\n    color: var(--color-white);\n    border-color: var(--color-brand-blue);\n}\n\n.placement--top-left, \n.placement--middle-left, \n.placement--bottom-left {\n    float: left;\n    max-width: min(48%, 350px);\n    shape-outside: margin-box;\n    margin-block: 0.5rem var(--spacing-lg);\n    margin-inline-end: var(--spacing-xl);\n}\n\n.placement--top-right, \n.placement--middle-right, \n.placement--bottom-right {\n    float: right;\n    max-width: min(48%, 350px);\n    shape-outside: margin-box;\n    margin-block: 0.5rem var(--spacing-lg);\n    margin-inline-start: var(--spacing-xl);\n}\n\n.placement--top-center, \n.placement--middle-center, \n.placement--bottom-center {\n    display: block;\n    width: 100%;\n    margin-block: var(--spacing-lg);\n}\n\n.placement--top-center .single-article-image,\n.placement--middle-center .single-article-image,\n.placement--bottom-center .single-article-image {\n    aspect-ratio: 16 / 9;\n}\n\n.single-article-content {\n    max-width: 750px;\n    margin-inline: auto;\n    margin-block-start: var(--spacing-lg);\n}\n\n.single-article-content::after {\n    content: \"\";\n    display: table;\n    clear: both;\n}\n\n.single-article-content .social-share-container,\n.single-article-content .author-bios-container {\n    clear: both;\n}\n\n/* markdown my love */\n.single-article-content > h1, \n.single-article-content > h2,\n.single-article-content > h3, \n.single-article-content > h4,\n.single-article-content > h5, \n.single-article-content > h6,\n.single-article-content > ul, \n.single-article-content > ol,\n.single-article-content > blockquote, \n.single-article-content > table,\n.single-article-content > hr {\n    overflow: auto;\n}\n\n.single-article-content > h1, \n.single-article-content > h2,\n.single-article-content > h3, \n.single-article-content > h4 {\n    font-family: var(--font-family-serif);\n    margin: 2.5rem 0 1rem 0;\n    line-height: 1.3;\n    color: var(--color-dark);\n    font-weight: 600;\n    scroll-margin-top: 2rem;\n}\n\n.single-article-content > h1 { font-size: var(--font-size-h2); }\n.single-article-content > h2 { font-size: var(--font-size-h2); }\n.single-article-content > h3 { font-size: var(--font-size-h3); }\n.single-article-content > h4 { font-size: var(--font-size-h4); }\n\n.single-article-content > p,\n.single-article-content > ul,\n.single-article-content > ol {\n    font-family: var(--font-family-serif);\n    font-size: var(--font-size-lg);\n    line-height: 1.75;\n    margin-bottom: var(--spacing-lg);\n    color: var(--color-dark);\n}\n\n.single-article-content > ul,\n.single-article-content > ol {\n    padding-inline-start: var(--spacing-lg);\n}\n\n.single-article-content > ul li,\n.single-article-content > ol li {\n    margin-bottom: var(--spacing-sm);\n}\n\n.single-article-content > blockquote {\n    font-family: var(--font-family-serif);\n    font-size: 1.3rem;\n    font-style: italic;\n    line-height: 1.7;\n    margin-block: var(--spacing-lg);\n    padding: var(--spacing-md) var(--spacing-gap);\n    border-inline-start: 4px solid var(--color-brand-blue);\n    background-color: var(--color-light-gray);\n    color: var(--color-text-secondary);\n    border-radius: 0 var(--radius-md) var(--radius-md) 0;\n    position: relative;\n}\n\n.single-article-content blockquote p {\n    font-size: inherit;\n    margin-bottom: 0;\n}\n\n.single-article-content > table {\n    width: 100%;\n    margin-block: var(--spacing-lg);\n    border-collapse: collapse;\n    font-size: var(--font-size-base);\n    font-family: var(--font-family-sans);\n    border-radius: var(--radius-md);\n    overflow: hidden;\n    box-shadow: var(--shadow-sm);\n}\n\n.single-article-content th,\n.single-article-content td {\n    border: 1px solid var(--color-border);\n    padding: 0.75rem;\n    text-align: left;\n}\n\n.single-article-content th {\n    background-color: var(--color-light-gray);\n    font-weight: 600;\n    color: var(--color-dark);\n}\n\n.single-article-content tr:nth-child(even) {\n    background-color: #fdfdfd;\n}\n\n.single-article-content tr:hover {\n    background-color: #f8f9fa;\n}\n\n.single-article-content > hr {\n    border: 0;\n    height: 1px;\n    background: linear-gradient(90deg, transparent, var(--color-border), transparent);\n    margin-block: var(--spacing-xl);\n}\n\n.more-like-this-section {\n    clear: both;\n    margin-top: 4rem;\n    padding-top: 3rem;\n    border-top: 1px solid var(--color-border);\n}\n.more-like-this-section h2 {\n    font-family: var(--font-family-serif);\n    font-size: 2rem;\n    text-align: center;\n    margin-bottom: 2.5rem;\n    color: var(--color-dark);\n}\n.more-like-this-section .article-grid {\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n}\n\n\n/* oh yeah we got comments*/\n.sr-only {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    margin: -1px;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    border-width: 0;\n}\n\n\n.comments-section {\n    margin-top: 4rem;\n    border-top: 2px solid var(--color-border);\n    padding-top: var(--spacing-xl);\n}\n\n.comments-header {\n    display: flex;\n    align-items: baseline;\n    gap: 0.75rem;\n    margin-bottom: 2.5rem;\n}\n\n.comments-header h3 {\n    font-family: var(--font-family-serif);\n    font-size: 2rem;\n    margin: 0;\n    color: var(--color-dark);\n}\n\n.comments-header .comment-count {\n    font-size: 1.25rem;\n    font-weight: 500;\n    color: var(--color-text-secondary);\n}\n\n.comment-form {\n    display: grid;\n    grid-template-columns: auto 1fr;\n    gap: var(--spacing-md);\n    max-width: 700px;\n    margin: 0 auto var(--spacing-xl) auto;\n    align-items: start;\n}\n\n.comment-form-main {\n    display: flex;\n    flex-direction: column;\n    gap: var(--spacing-sm);\n}\n\n.comment-form textarea {\n    width: 100%;\n    padding: 12px;\n    font-size: var(--font-size-base);\n    font-family: var(--font-family-sans);\n    border: 1px solid var(--color-border);\n    background-color: var(--color-white);\n    border-radius: var(--radius-md);\n    box-shadow: 0 1px 2px rgba(0,0,0,0.05);\n    transition: transform var(--transition-normal), \n                box-shadow var(--transition-normal), \n                border-color var(--transition-normal);\n    resize: vertical;\n    min-height: 100px;\n    line-height: 1.5;\n}\n\n.comment-form textarea:hover {\n    transform: translateY(-2px);\n    box-shadow: var(--shadow-md);\n}\n\n.comment-form textarea:focus {\n    outline: none;\n    transform: translateY(-2px);\n    border-color: var(--color-brand-blue);\n    box-shadow: var(--shadow-md);\n}\n\n.comment-form textarea::placeholder {\n    color: var(--color-text-secondary);\n    opacity: 0.7;\n}\n\n.comment-form-actions {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: var(--spacing-md);\n}\n\n.comment-form .char-counter {\n    font-size: var(--font-size-xs);\n    color: var(--color-text-secondary);\n    font-weight: 500;\n}\n\n#comment-submit-btn {\n    padding: 0.6rem 1.2rem;\n}\n\n#comment-list {\n    list-style: none;\n    padding: 0;\n    max-width: 700px;\n    margin: 0 auto;\n    display: flex;\n    flex-direction: column;\n}\n\n.comment {\n    display: grid;\n    grid-template-columns: auto 1fr;\n    gap: var(--spacing-md);\n    padding: var(--spacing-gap) 0;\n    border-top: 1px solid var(--color-border);\n    opacity: 0;\n    transform: translateY(10px);\n    animation: fadeInComment 0.5s ease-out forwards;\n    align-items: start;\n}\n\n#comment-list li:first-child .comment {\n    border-top: none;\n}\n\n@keyframes fadeInComment {\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n.comment-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: var(--spacing-sm);\n}\n\n.comment-author {\n    font-weight: 700;\n    color: var(--color-dark);\n}\n\n.comment-timestamp {\n    font-size: var(--font-size-xs);\n    color: var(--color-text-secondary);\n}\n\n.comment-content {\n    line-height: 1.7;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    font-size: 0.95rem;\n    color: var(--color-dark);\n}\n\n.comment-actions {\n    display: flex;\n    gap: var(--spacing-sm);\n}\n\n.comment-action-btn {\n    background: none;\n    border: none;\n    cursor: pointer;\n    padding: 0.5rem;\n    margin: -0.5rem;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: all var(--transition-fast);\n}\n\n.comment-action-btn img {\n    width: 16px;\n    height: 16px;\n    opacity: 0.6;\n    transition: opacity var(--transition-fast);\n}\n\n.comment-action-btn:hover {\n    background-color: var(--color-light-gray);\n}\n.comment-action-btn:hover img {\n    opacity: 1;\n}\n\n.comment-delete-btn:hover {\n    background-color: #fef2f2;\n}\n.comment-delete-btn:hover img {\n    color: var(--color-danger);\n    opacity: 1;\n}\n\n.comment-edit-form { \n    margin-top: var(--spacing-md); \n}\n\n.comment-edit-textarea {\n    width: 100%;\n    padding: 0.75rem;\n    border: 1px solid var(--color-border);\n    border-radius: var(--radius-md);\n    font-family: inherit;\n    font-size: 0.95rem;\n    resize: vertical;\n    min-height: 80px;\n    transition: all var(--transition-normal);\n}\n\n.comment-edit-textarea:focus {\n    outline: none;\n    border-color: var(--color-brand-blue);\n    box-shadow: 0 0 0 3px var(--color-focus);\n}\n\n.comment-edit-actions {\n    display: flex;\n    justify-content: flex-end;\n    gap: var(--spacing-sm);\n    margin-top: var(--spacing-sm);\n}\n\n.login-prompt-for-comments {\n    text-align: center;\n    padding: var(--spacing-lg);\n    background-color: var(--color-light-gray);\n    border: 1px solid var(--color-border);\n    border-radius: var(--radius-lg);\n    margin: 0 auto var(--spacing-xl) auto;\n    max-width: 700px;\n}\n\n.login-prompt-for-comments p { \n    margin: 0; \n    color: var(--color-text-secondary);\n}\n\n.login-prompt-for-comments a {\n    color: var(--color-brand-blue);\n    font-weight: 500;\n    text-decoration: none;\n    border-bottom: 1px solid transparent;\n    transition: border-color var(--transition-fast);\n}\n\n.login-prompt-for-comments a:hover {\n    border-bottom-color: var(--color-brand-blue);\n}\n\n\n/* responsive */\n@media (max-width: 768px) {\n    #single-article-page .container {\n        padding-inline: var(--spacing-lg);\n    }\n\n    .single-article-wrapper { \n        padding: 0; \n    }\n\n    .single-article-header h1 { \n        font-size: var(--font-size-h1); \n        line-height: 1.2; \n    }\n\n    .single-article-description { \n        font-size: var(--font-size-base); \n    }\n\n    .single-article-content > p,\n    .single-article-content > ul,\n    .single-article-content > ol {\n        font-size: var(--font-size-md);\n        line-height: 1.7;\n        margin-bottom: var(--spacing-gap);\n    }\n\n    .placement--top-left, \n    .placement--middle-left,\n    .placement--top-right, \n    .placement--middle-right,\n    .placement--bottom-left, \n    .placement--bottom-right {\n        float: none;\n        max-width: 100%;\n        margin: var(--spacing-lg) 0;\n    }\n\n    .more-like-this-section .article-grid {\n        grid-template-columns: 1fr;\n    }\n\n    .comment-form, \n    .comment { \n        grid-template-columns: 1fr; \n    }\n\n    .comment-form-avatar, \n    .comment-avatar { \n        display: none; \n    }\n}\n\n@media (max-width: 480px) {\n    .single-article-header h1 { \n        font-size: var(--font-size-xl); \n    }\n\n    .single-article-content > p,\n    .single-article-content > ul,\n    .single-article-content > ol {\n        font-size: var(--font-size-base);\n    }\n\n    .comment-form-actions {\n        flex-direction: column;\n        align-items: stretch;\n    }\n\n    #comment-submit-btn {\n        width: 100%;\n    }\n}\n\n/* accessibility for the disabled */\n@media (prefers-reduced-motion: reduce) {\n    *,\n    *::before,\n    *::after {\n        animation-duration: 0.01ms !important;\n        animation-iteration-count: 1 !important;\n        transition-duration: 0.01ms !important;\n    }\n}\n\n/* print styles */\n@media print {\n    .article-interactions,\n    .social-share-container,\n    .comments-section,\n    .more-like-this-section {\n        display: none;\n    }\n\n    .single-article-content {\n        max-width: none;\n    }\n\n    .single-article-image {\n        box-shadow: none;\n        border: 1px solid var(--color-border);\n    }\n}","size_bytes":16843},"css/components/contact/details-card.css":{"content":"/* contact details card styles */\n.contact-details-card {\n    background-color: var(--color-brand-blue); \n    color: white; \n    border-radius: 0; \n    padding: 3rem;\n    display: flex;\n    flex-direction: column;\n    gap: 3rem; \n}\n\n.contact-details-card h3 {\n    font-family: var(--font-serif);\n    font-size: 2rem; \n    margin-top: 0;\n    margin-bottom: 3rem; \n}\n\n.contact-info-list {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n    display: flex;\n    flex-direction: column;\n    gap: 2.5rem; \n}\n\n.contact-info-list li {\n    display: flex;\n    align-items: center;\n    gap: 1.5rem; \n    font-size: 1.1rem; \n    line-height: 1.6;\n}\n\n.contact-info-list a {\n    color: inherit;\n    text-decoration: none;\n}\n.contact-info-list a:hover {\n    text-decoration: underline;\n    opacity: 1;\n}\n\n.contact-icon {\n    width: 48px;\n    height: 48px;\n    flex-shrink: 0;\n    filter: invert(1) brightness(2);\n}\n\n.map-container {\n    width: 100%;\n    border-radius: 8px;\n    overflow: hidden;\n    flex-grow: 1;\n    min-height: 200px;\n}\n\n.map-iframe {\n    width: 100%;\n    height: 100%;\n    border: 0;\n}\n\n/* responsivenessss */\n@media (max-width: 768px) {\n    .contact-details-card {\n        padding: 1.5rem;\n        gap: 1.5rem;\n    }\n    \n    .contact-details-card .contact-info-list li {\n        font-size: 0.9rem;\n    }\n\n    .contact-details-card h3 {\n        font-size: 1.75rem;\n        margin-bottom: 1.5rem;\n    }\n}","size_bytes":1414},"css/components/contact/form.css":{"content":"/* form submission styles */\n#contact-form-container {\n    position: relative;\n}\n\n#contact-form {\n    transition: opacity 0.3s ease-in-out;\n}\n\n#contact-form-container.form-submitted #contact-form {\n    opacity: 0;\n    pointer-events: none;\n}\n\n.form-group {\n    margin-bottom: 1.5rem;\n}\n\n.form-group label {\n    display: block;\n    font-size: 0.9rem;\n    font-weight: 500;\n    margin-bottom: 0.5rem;\n}\n\n.form-group input, \n.form-group textarea {\n    width: 100%;\n    padding: 12px;\n    font-size: 1rem;\n    font-family: var(--font-sans);\n    border: 1px solid var(--color-border);\n    border-radius: 8px;\n    background-color: var(--color-light-gray);\n    transition: border-color 0.2s;\n}\n\n.form-group input:focus, \n.form-group textarea:focus {\n    outline: none;\n    border-color: var(--color-brand-blue);\n}\n\n.form-group textarea {\n    resize: vertical;\n}\n\n.form-group .warning-message {\n    display: none;\n    color: #c00;\n    font-size: 0.8rem;\n    margin-top: 0.25rem;\n}\n\n.form-group input.invalid, \n.form-group textarea.invalid {\n    border-color: #c00;\n}\n\n#contact-form-container .button-primary {\n    width: 100%;\n    padding: 14px;\n    font-size: 1rem;\n}","size_bytes":1161},"css/components/contact/layout.css":{"content":"/* contact page layout styles */\n.contact-page .page-header {\n    padding-bottom: 2rem;\n}\n\n.contact-page .page-header h1 {\n    font-size: 3.5rem;\n}\n\n.contact-page .page-header p {\n    font-size: 1.1rem;\n    max-width: 700px;\n}\n\n.contact-grid {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 0;\n    align-items: stretch;\n    border: 1px solid var(--color-border);\n    border-radius: 12px;\n    overflow: hidden;\n    box-shadow: var(--shadow);\n}\n\n.contact-form-wrapper {\n    padding: 3rem;\n}\n\n.contact-form-wrapper h3 {\n    font-family: var(--font-serif);\n    font-size: 1.75rem;\n    margin-top: 0;\n    margin-bottom: 0.5rem;\n}\n\n.contact-form-wrapper p {\n    font-size: 1rem;\n    line-height: 1.6;\n    color: var(--color-text-secondary);\n    margin-bottom: 2rem;\n}\n\n@media (max-width: 992px) {\n    .contact-grid {\n        grid-template-columns: 1fr;\n    }\n\n    /* separator line cause it looks mighty fine */\n    .contact-form-wrapper {\n        border-bottom: 1px solid var(--color-border);\n    }\n}\n\n@media (max-width: 768px) {\n    .contact-page .page-header h1 {\n        font-size: 2.5rem;\n    }\n    \n    .contact-grid {\n        border-radius: 8px;\n    }\n    \n    .contact-form-wrapper {\n        padding: 2rem 1.5rem;\n    }\n    \n    .contact-form-wrapper h3 {\n        font-size: 1.75rem;\n    }\n}\n\n@media (max-width: 480px) {\n    .contact-form-wrapper {\n        padding: 1.5rem;\n    }\n    \n}","size_bytes":1405},"css/components/contact/success-message.css":{"content":"/* the styles for sucess messages! */\n#contact-success-message {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    \n    background-color: var(--color-bg);\n    \n    opacity: 0;\n    pointer-events: none;\n    transition: opacity 0.3s ease-in-out;\n}\n\n#contact-form-container.form-submitted #contact-success-message {\n    opacity: 1;\n    pointer-events: auto;\n}\n\n#contact-success-message h3 {\n    font-family: var(--font-serif);\n    font-size: 1.75rem;\n}\n\n#contact-success-message p {\n    color: var(--color-text-secondary);\n    margin-bottom: 0;\n}","size_bytes":679},"css/components/forms/password-toggle.css":{"content":".password-input-wrapper {\n    position: relative;\n}\n\n.password-input-wrapper input {\n    padding-right: 45px !important;\n}\n\n.password-toggle-btn {\n    position: absolute;\n    top: 50%;\n    right: 0;\n    transform: translateY(-50%);\n    height: 100%;\n    width: 45px;\n    background: none;\n    border: none;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0;\n    opacity: 0.5;\n    transition: opacity 0.2s ease-in-out;\n    will-change: opacity;\n}\n\n.password-toggle-btn:hover {\n    opacity: 1;\n}\n\n.password-toggle-btn img {\n    width: 20px;\n    height: 20px;\n}","size_bytes":617},"css/components/header/base.css":{"content":"/* base header styles */\n.main-header {\n    --header-height: clamp(5rem, 5rem + 3vw, 6rem);\n    background-color: var(--color-bg); \n    border-bottom: 1px solid var(--color-border);\n    position: sticky; \n    top: 0; \n    z-index: 1000;\n    height: var(--header-height);\n}\n\n.nav-container { \n    height: 100%; \n    display: flex; \n    justify-content: space-between;\n    align-items: center; \n    padding: 0 clamp(1rem, 4vw, 3rem);\n    gap: 1.5rem;\n    position: relative;\n}\n\n.logo { \n    display: flex;\n    align-items: center;\n    flex-shrink: 0;\n    height: 100%;\n    padding: 0.5rem 0;\n}\n\n.logo img {\n    height: 100%;\n    width: auto;\n    display: block;\n}\n\n.header-center-content {\n    flex-grow: 1; \n    display: flex;\n    justify-content: center;\n    min-width: 0;\n}\n\n.header-right {\n    display: flex;\n    align-items: center;\n    flex-shrink: 0;\n    gap: clamp(0.5rem, 2vw, 1rem);\n}\n\n.mobile-toggle { \n    display: none; \n    cursor: pointer;\n    background: none;\n    border: none;\n    touch-action: manipulation;\n    width: 44px;\n    height: 44px;\n    position: relative;\n}\n\n.bar {\n    position: absolute;\n    left: 10px;\n    width: 24px;\n    height: 3px;\n    background-color: var(--color-dark);\n    border-radius: 1px;\n    transition: transform 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);\n}\n\n.bar.top { transform: translateY(-5px); }\n.bar.bottom { transform: translateY(5px); }\n\n.main-header.nav-open .bar.top { transform: translateY(0) rotate(45deg); }\n.main-header.nav-open .bar.bottom { transform: translateY(0) rotate(-45deg); }\n\n#search-icon-btn {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: clamp(40px, 10vw, 44px);\n    padding: clamp(0.6rem, 2vw, 0.7rem);\n}","size_bytes":1715},"css/components/header/dropdown.css":{"content":"/* dropdown menu styles */\n.dropdown { \n    position: relative; \n}\n\n.dropdown::after {\n    content: '';\n    position: absolute;\n    top: 100%;\n    left: 0;\n    right: 0;\n    height: 12px;\n    background-color: transparent;\n}\n\n.dropdown-menu {\n    visibility: hidden;\n    opacity: 0; \n    pointer-events: none;\n    position: absolute; \n    top: 100%;\n    left: 50%;\n    background-color: var(--color-bg);\n    padding: 0.5rem; \n    border-radius: 8px; \n    box-shadow: var(--shadow); \n    min-width: 180px;\n    border: 1px solid var(--color-border);\n    list-style: none;\n    text-align: center;\n    transform-origin: top center;\n    transform: translateX(-50%) translateY(12px) scale(0.95);\n    transition: opacity 0.2s ease-out, transform 0.2s ease-out, visibility 0s 0.2s; \n}\n\n.dropdown:hover .dropdown-menu { \n    visibility: visible;\n    opacity: 1; \n    pointer-events: auto;\n    transform: translateX(-50%) translateY(12px) scale(1);\n    transition: opacity 0.2s ease-out, transform 0.2s ease-out, visibility 0s 0s;\n}\n\n.dropdown-menu li { \n    margin: 0; \n}\n\n.dropdown-menu a { \n    display: block; \n    padding: 0.75rem 1rem; \n    white-space: nowrap; \n    border-bottom: none; \n    border-radius: 4px;\n}\n\n.dropdown-menu a:hover { \n    background-color: var(--color-border); \n}","size_bytes":1283},"css/components/header/navigation.css":{"content":".main-nav > ul { \n    display: flex; \n    list-style: none; \n    gap: 32px; \n}\n\n.main-nav li { \n    margin: 0; \n}\n\n.main-nav a { \n    font-size: 16px; \n    font-weight: 500; \n    border-bottom: 2px solid transparent; \n    padding: 4px 0; \n}\n\n.main-nav a.active-link, \n.main-nav a:hover { \n    color: var(--color-brand-blue); \n    border-bottom-color: var(--color-brand-blue); \n}\n\n.submenu-toggle {\n    display: none;\n}\n\n.subscribe-btn-mobile, .auth-btn-mobile {\n    display: none;\n}","size_bytes":482},"css/components/header/responsive.css":{"content":"@media (max-width: 1240px) {\n    .mobile-toggle { \n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    .header-center-content .main-nav {\n        display: none;\n    }\n    .header-right .button-primary {\n        display: none;\n    }\n    .header-right .auth-status {\n        display: none;\n    }\n    \n    .main-header.nav-open .main-nav {\n        display: block;\n        position: fixed;\n        top: var(--header-height);\n        left: 0;\n        bottom: 0;\n        width: 100%;\n        background-color: var(--color-bg);\n        padding: 1rem 0 3rem 0;\n        border-top: 1px solid var(--color-border);\n        box-shadow: 0 10px 20px rgba(0,0,0,0.05);\n        overflow-y: auto;\n        -webkit-overflow-scrolling: touch;\n    }\n    .main-header.nav-open .main-nav ul { \n        flex-direction: column; \n        width: 100%; \n        gap: 0; \n    }\n    .main-header.nav-open .main-nav li { \n        margin: 0; \n        text-align: left; \n        border-bottom: 1px solid var(--color-border); \n    }\n    .main-header.nav-open .main-nav li:first-child { \n        border-top: 1px solid var(--color-border); \n    }\n    .main-header.nav-open .main-nav a { \n        padding: 1rem 1.5rem; \n        display: block; \n        border-bottom: none; \n    }\n    .main-header.nav-open .submenu-toggle {\n        display: inline-block;\n        background: none;\n        border: none;\n        cursor: pointer;\n        padding: 0 0.5rem;\n        font-size: 1.5rem;\n        font-weight: 300;\n        color: var(--color-text-secondary);\n        line-height: 1;\n    }\n    .main-header.nav-open .main-nav .subscribe-btn-mobile,\n    .main-header.nav-open .main-nav .auth-btn-mobile {\n        border-bottom: none;\n    }\n    .main-header.nav-open .subscribe-btn-mobile {\n        display: block;\n        padding: 0.75rem 1.5rem 0;\n    }\n    .main-header.nav-open .auth-btn-mobile {\n        display: block;\n        padding: 0.75rem 1.5rem;\n    }\n    .main-header.nav-open .subscribe-btn-mobile a.button-primary,\n    .main-header.nav-open .auth-btn-mobile .button-secondary {\n        width: auto;\n        text-align: center;\n        display: inline-flex;\n        justify-content: center;\n        align-items: center;\n        padding: 0.625rem 1.25rem;\n    }\n    .main-header.nav-open .subscribe-btn-mobile a.button-primary:hover {\n        color: white;\n    }\n    \n    .main-header.nav-open .dropdown-menu { \n        position: static; \n        display: none;\n        opacity: 1; \n        visibility: visible;\n        pointer-events: auto;\n        transform: none; \n        box-shadow: none; \n        background-color: var(--color-light-gray);\n        padding: 0; \n        border: none;\n        min-width: 100%;\n        border-radius: 0;\n    }\n    .main-header.nav-open .dropdown.is-open .dropdown-menu {\n        display: block;\n    }\n    .main-header.nav-open .dropdown-menu a {\n        padding-left: 2.5rem;\n        font-weight: 400;\n        color: var(--color-text-secondary);\n    }\n    .main-header.nav-open .dropdown-menu a:hover {\n        color: var(--color-dark);\n    }\n    .main-header.nav-open .dropdown > a.nav-link {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n    }\n}\n\n\n/* need wider breakpoint for logged in users cause of avatar pic in nav bar */\n@media (max-width: 1330px) {\n    body.user-is-logged-in .mobile-toggle { \n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    body.user-is-logged-in .header-center-content .main-nav {\n        display: none;\n    }\n    body.user-is-logged-in .header-right .button-primary {\n        display: none;\n    }\n    body.user-is-logged-in .header-right .auth-status {\n        display: none;\n    }\n    \n    body.user-is-logged-in .main-header.nav-open .main-nav {\n        display: block;\n        position: fixed;\n        top: var(--header-height);\n        left: 0;\n        bottom: 0;\n        width: 100%;\n        background-color: var(--color-bg);\n        padding: 1rem 0 3rem 0;\n        border-top: 1px solid var(--color-border);\n        box-shadow: 0 10px 20px rgba(0,0,0,0.05);\n        overflow-y: auto;\n        -webkit-overflow-scrolling: touch;\n    }\n    body.user-is-logged-in .main-header.nav-open .main-nav ul { \n        flex-direction: column; \n        width: 100%; \n        gap: 0; \n    }\n    body.user-is-logged-in .main-header.nav-open .main-nav li { \n        margin: 0; \n        text-align: left; \n        border-bottom: 1px solid var(--color-border); \n    }\n    body.user-is-logged-in .main-header.nav-open .main-nav li:first-child { \n        border-top: 1px solid var(--color-border); \n    }\n    body.user-is-logged-in .main-header.nav-open .main-nav a { \n        padding: 1rem 1.5rem; \n        display: block; \n        border-bottom: none; \n    }\n    body.user-is-logged-in .main-header.nav-open .submenu-toggle {\n        display: inline-block;\n        background: none;\n        border: none;\n        cursor: pointer;\n        padding: 0 0.5rem;\n        font-size: 1.5rem;\n        font-weight: 300;\n        color: var(--color-text-secondary);\n        line-height: 1;\n    }\n    body.user-is-logged-in .main-header.nav-open .main-nav .subscribe-btn-mobile,\n    body.user-is-logged-in .main-header.nav-open .main-nav .auth-btn-mobile {\n        border-bottom: none;\n    }\n    body.user-is-logged-in .main-header.nav-open .subscribe-btn-mobile {\n        display: block;\n        padding: 0.75rem 1.5rem 0;\n    }\n    body.user-is-logged-in .main-header.nav-open .auth-btn-mobile {\n        display: block;\n        padding: 0.75rem 1.5rem;\n    }\n    body.user-is-logged-in .main-header.nav-open .subscribe-btn-mobile a.button-primary,\n    body.user-is-logged-in .main-header.nav-open .auth-btn-mobile .button-secondary {\n        width: auto;\n        text-align: center;\n        display: inline-flex;\n        justify-content: center;\n        align-items: center;\n        padding: 0.625rem 1.25rem;\n    }\n    body.user-is-logged-in .main-header.nav-open .subscribe-btn-mobile a.button-primary:hover {\n        color: white;\n    }\n    \n    body.user-is-logged-in .main-header.nav-open .dropdown-menu { \n        position: static; \n        display: none;\n        opacity: 1; \n        visibility: visible;\n        pointer-events: auto;\n        transform: none; \n        box-shadow: none; \n        background-color: var(--color-light-gray);\n        padding: 0; \n        border: none;\n        min-width: 100%;\n        border-radius: 0;\n    }\n    body.user-is-logged-in .main-header.nav-open .dropdown.is-open .dropdown-menu {\n        display: block;\n    }\n    body.user-is-logged-in .main-header.nav-open .dropdown-menu a {\n        padding-left: 2.5rem;\n        font-weight: 400;\n        color: var(--color-text-secondary);\n    }\n    body.user-is-logged-in .main-header.nav-open .dropdown-menu a:hover {\n        color: var(--color-dark);\n    }\n    body.user-is-logged-in .main-header.nav-open .dropdown > a.nav-link {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n    }\n}\n\n.main-header.nav-open .auth-btn-mobile .button-secondary,\nbody.user-is-logged-in .main-header.nav-open .auth-btn-mobile .button-secondary {\n    border: 0;\n    box-shadow: inset 0 0 0 1.5px var(--color-border);\n}","size_bytes":7279},"css/components/header/search-suggestions.css":{"content":".header-search-container {\n    position: relative;\n}\n\n.header-search-results {\n    display: none;\n    position: absolute;\n    top: 100%;\n    left: 0;\n    right: 0;\n    margin-top: 8px;\n    background-color: var(--color-bg);\n    border: 1px solid var(--color-border);\n    border-radius: 8px;\n    box-shadow: var(--shadow-md);\n    list-style: none;\n    padding: 0.5rem;\n    margin: 8px 0 0 0;\n    z-index: 1100;\n    max-height: 40vh;\n    overflow-y: auto;\n}\n\n.header-search-results.is-visible {\n    display: block;\n}\n\n.header-search-results li a {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0.75rem 1rem;\n    border-radius: 4px;\n    transition: background-color 0.2s ease-in-out;\n}\n\n.header-search-results li a:hover,\n.header-search-results li.is-highlighted a {\n    background-color: var(--color-border);\n    opacity: 1;\n}\n\n.search-result-title {\n    font-weight: 500;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    padding-right: 1rem;\n}\n\n.search-result-category {\n    font-size: 0.8rem;\n    font-weight: 500;\n    color: var(--color-text-secondary);\n    text-transform: uppercase;\n    flex-shrink: 0;\n}","size_bytes":1185},"css/components/header/search.css":{"content":"/* header search styles */\n.header-search-container {\n    display: none;\n    width: 100%;\n    min-width: 0; \n}\n\n/* search form layout */\n#header-search-form {\n    width: 100%;\n    position: relative;\n    display: flex;\n    align-items: center;\n    gap: 0;\n    background-color: var(--color-light-gray);\n    border: 1px solid var(--color-border);\n    border-radius: 8px;\n    overflow: hidden;\n    height: 44px;\n}\n\n/* search input */\n#header-search-input {\n    flex: 1 1 0;\n    min-width: 0;\n    border: none;\n    background-color: transparent;\n    font-size: 1rem;\n    font-family: var(--font-sans);\n    color: var(--color-dark);\n    padding: 12px 16px;\n    height: 100%;\n    line-height: 1.5;\n    padding-right: var(--input-padding-right, 80px); \n}\n\n#header-search-input::-webkit-search-cancel-button {\n    -webkit-appearance: none;\n    display: none;\n}\n\n#header-search-input:focus {\n    outline: none;\n}\n\n#header-search-form:focus-within {\n    border-color: var(--color-brand-blue);\n}\n\n.header-search-clear-btn {\n    position: absolute;\n    right: var(--go-btn-width, 70px);\n    top: 50%;\n    transform: translateY(-50%);\n    background: none;\n    border: none;\n    padding: 0 8px;\n    cursor: pointer;\n    color: var(--color-text-secondary);\n    font-size: 12px;\n    font-weight: 500;\n    letter-spacing: 0.05em;\n    text-transform: uppercase;\n    opacity: 0;\n    pointer-events: none;\n    transition: opacity 0.2s ease-in-out;\n    z-index: 1;\n}\n\n.header-search-clear-btn.visible {\n    opacity: 1;\n    pointer-events: auto;\n}\n\n.header-search-clear-btn:hover {\n    color: var(--color-dark);\n}\n\n.header-search-go-btn {\n    --go-btn-width: 70px; \n    background-color: var(--color-brand-blue);\n    color: white;\n    border: none;\n    padding: 0;\n    width: var(--go-btn-width);\n    height: 100%;\n    font-size: 15px;\n    font-weight: 500;\n    cursor: pointer;\n    transition: opacity 0.2s ease-in-out;\n    flex-shrink: 0;\n    border-radius: 0; \n}\n\n.header-search-go-btn:hover:not(:disabled) {\n    opacity: 0.9;\n}\n\n.header-search-go-btn:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n}\n\n/* when search is active, HIDE the nav and SHOW the search bar */\nbody.search-active .main-nav { \n    display: none; \n}\nbody.search-active .header-search-container { \n    display: block; \n}\nbody.search-active .header-right .auth-status {\n    display: none;\n}\n\n@media (max-width: 768px) {\n    #header-search-input {\n        font-size: 16px;\n    }\n    \n    body.search-active .logo { \n        display: none; \n    }\n    \n    body.search-active .header-search-container {\n        width: 100%;\n        flex: 1;\n    }\n}\n\n@media (max-width: 480px) {\n    #header-search-input {\n        font-size: 16px;\n        padding-left: 12px;\n    }\n\n    #search-icon-btn {\n        padding: 6px;\n        min-width: 40px;\n        min-height: 40px;\n    }\n}","size_bytes":2825},"css/components/subscribe/button.css":{"content":"/* subscribe button styles */\n.subscribe-page .button-subscribe {\n    background-color: var(--color-brand-blue);\n    color: white;\n    font-weight: 600;\n    font-size: 16px;\n    border: 1px solid var(--color-brand-blue);\n    padding: 14px 28px;\n    cursor: pointer;\n    transition: all 0.2s ease-in-out;\n    flex-shrink: 0;\n    border-top-right-radius: 9999px;\n    border-bottom-right-radius: 9999px;\n}\n\n.subscribe-page .button-subscribe:hover {\n    opacity: 0.9;\n}","size_bytes":465},"css/components/subscribe/form.css":{"content":"/* subscribe form container styles */\n.subscribe-page .form-container {\n    position: relative;\n    max-width: 500px;\n    margin: 40px auto 0 auto;\n    min-height: 52px;\n}\n\n.subscribe-page #subscribe-form-page {\n    display: flex;\n    transition: opacity 0.3s ease-in-out;\n}\n\n.subscribe-page #subscribe-form-page.hidden {\n    opacity: 0;\n    pointer-events: none;\n}\n\n/* email input styles */\n.subscribe-page #subscribe-email-page {\n    background-color: var(--color-light-gray);\n    border: 1px solid var(--color-border);\n    border-right: none;\n    color: var(--color-dark);\n    font-size: 16px;\n    padding: 14px 24px;\n    transition: all 0.2s ease-in-out;\n    flex-grow: 1;\n    border-top-left-radius: 9999px;\n    border-bottom-left-radius: 9999px;\n}\n\n.subscribe-page #subscribe-email-page::placeholder { \n    color: var(--color-text-secondary); \n}\n\n.subscribe-page #subscribe-email-page:focus {\n    outline: none;\n    border-color: var(--color-brand-blue);\n}","size_bytes":962},"css/components/subscribe/layout.css":{"content":"/* subscribe page layout styles */\n.subscribe-page .container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    min-height: 60vh;\n    padding-top: 4rem;\n    padding-bottom: 4rem;\n}\n\n.subscribe-page .subscribe-content {\n    max-width: 650px;\n}\n\n.subscribe-page .subscribe-content h1 {\n    font-family: var(--font-serif);\n    font-size: 3.5rem;\n}\n\n.subscribe-page .subscribe-content p {\n    font-size: 1.1rem;\n    color: var(--color-text-secondary);\n    max-width: 500px;\n    margin: 1rem auto 0 auto;\n}\n\n/* responsivenesssss */\n@media (max-width: 768px) {\n    .subscribe-page .subscribe-content {\n        padding: 0 1rem;\n    }\n    \n    .subscribe-page .subscribe-content h1 {\n        font-size: 2.5rem;\n        line-height: 1.3;\n    }\n}\n\n@media (max-width: 480px) {\n    .subscribe-page .subscribe-content h1 {\n        font-size: 1.8rem;\n    }\n}","size_bytes":897},"css/components/subscribe/success.css":{"content":"/* success message styles */\n.subscribe-page .subscribe-success {\n    background-color: var(--color-light-gray);\n    border: 1px solid var(--color-border);\n    border-radius: 9999px;\n    padding: 14px 24px;\n    font-size: 16px;\n    font-weight: 500;\n    color: var(--color-brand-blue);\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    opacity: 0;\n    pointer-events: none;\n    transition: opacity 0.3s ease-in-out;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.subscribe-page .subscribe-success.active {\n    opacity: 1;\n    pointer-events: auto;\n}","size_bytes":599},"js/components/cards/ArticleCard.js":{"content":"import { Authors } from '../metadata/Authors.js';\n\nexport function ArticleCard(article, options = {}) {\n    const {\n        className = 'article-card',\n        titleTag = 'h4',\n        titleClass = 'article-title',\n        showExcerpt = true,\n        showAuthors = true,\n        imageLoading = 'lazy',\n        authorSize = 'large',\n        withAvatars = true\n    } = options;\n\n    return `\n        <article class=\"${className} article-card-linkable\">\n            ${renderImage(article, imageLoading)}\n            ${renderMetaBar(article)}\n            ${renderTitle(article, titleTag, titleClass)}\n            ${showExcerpt ? renderExcerpt(article) : ''}\n            ${showAuthors ? Authors(article.writers, { \n                size: authorSize, \n                withAvatars,\n                className: 'author-meta'\n            }) : ''}\n        </article>\n    `;\n}\n\nfunction renderImage(article, loading) {\n    const imageSrc = article.image ? article.image : 'assets/icons/placeholder-image.png';\n    const altText = article.image ? article.title : 'Placeholder image for article';\n    return `<img src=\"${imageSrc}\" alt=\"${altText}\" loading=\"${loading}\">`;\n}\n\nfunction renderMetaBar(article) {\n    return `\n        <div class=\"meta-bar\">\n            <span class=\"category\">${article.category}</span>\n            <span class=\"date\">${article.date}</span>\n        </div>\n    `;\n}\n\nfunction renderTitle(article, tag, className) {\n    return `\n        <a href=\"#single-article-page/${article.id}\" class=\"main-article-link\">\n            <${tag} class=\"${className}\">${article.title}</${tag}>\n        </a>\n    `;\n}\n\nfunction renderExcerpt(article) {\n    return `<p class=\"excerpt\">${article.description}</p>`;\n}","size_bytes":1706},"js/components/cards/FeaturedCard.js":{"content":"import { ArticleCard } from './ArticleCard.js';\n\nexport function FeaturedCard(article) {\n    return ArticleCard(article, {\n        className: 'featured-card',\n        titleTag: 'h3',\n        titleClass: 'article-title-large',\n        showExcerpt: true,\n        showAuthors: true,\n        imageLoading: 'eager'\n    });\n}","size_bytes":319},"js/components/cards/RecentCard.js":{"content":"import { ArticleCard } from './ArticleCard.js';\n\nexport function RecentCard(article) {\n    return ArticleCard(article, {\n        className: 'recent-card',\n        titleTag: 'h4',\n        titleClass: 'article-title-small',\n        showExcerpt: true,\n        showAuthors: true,\n        imageLoading: 'lazy'\n    });\n}","size_bytes":314},"js/components/cards/SmallCard.js":{"content":"import { ArticleCard } from './ArticleCard.js';\n\nexport function SmallCard(article) {\n    return ArticleCard(article, {\n        className: 'article-card-small',\n        titleTag: 'h4',\n        titleClass: 'article-title-small',\n        showExcerpt: true,\n        showAuthors: true,\n        imageLoading: 'lazy'\n    });\n}","size_bytes":320},"js/components/common/Avatar.js":{"content":"\nimport { generateUserGradient } from '../../lib/avatarGenerator.js';\n\nexport function Avatar({ \n    username, \n    customAvatar = null, \n    size = 'medium', \n    className = '', \n    attributes = {} \n}) {\n    if (!username) {\n        return '';\n    }\n    \n    let style, content;\n    if (customAvatar) {\n        style = `background-image: url('${customAvatar}'); background-size: cover; background-position: center;`;\n        content = '';\n    } else {\n        style = `background: ${generateUserGradient(username)};`;\n        content = username.charAt(0).toUpperCase();\n    }\n    \n    const attributeString = Object.entries(attributes)\n        .map(([key, value]) => `${key}=\"${value}\"`)\n        .join(' ');\n\n    const classes = `avatar avatar--${size} ${className}`.trim();\n\n    return `<div class=\"${classes}\" style=\"${style}\" ${attributeString}>${content}</div>`;\n}\n\nexport function AccountAvatar(user) {\n    return Avatar({\n        username: user.username,\n        customAvatar: user.customAvatar || user.custom_avatar,\n        size: 'large',\n        className: 'account-avatar',\n        attributes: { id: 'account-avatar' }\n    });\n}\n\nexport function CommentAvatar(user, isForm = false) {\n    return Avatar({\n        username: user.username || user.author_name,\n        customAvatar: user.customAvatar || user.custom_avatar,\n        size: 'medium',\n        className: isForm ? 'comment-form-avatar' : 'comment-avatar'\n    });\n}\n","size_bytes":1436},"js/components/common/ContactDetails.js":{"content":"export function ContactDetails() {\n    const address = '80 Shawsheen Road, Andover, MA 01810';\n    const googleMapsUrl = `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(address)}`;\n\n    return `\n        <div class=\"contact-details-card\">\n            <div>\n                <h3>Get in Touch</h3>\n                <ul class=\"contact-info-list\">\n                    <li>\n                        <img class=\"contact-icon\" src=\"assets/icons/email.svg\" alt=\"Email icon\">\n                        <a href=\"mailto:andoverview@andoverma.us\">andoverview@andoverma.us</a>\n                    </li>\n                    <li>\n                        <img class=\"contact-icon\" src=\"assets/icons/location.svg\" alt=\"Location icon\">\n                        <a href=\"${googleMapsUrl}\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            80 Shawsheen Road<br>Andover, MA 01810<br>USA\n                        </a>\n                    </li>\n                </ul>\n            </div>\n            \n            <div class=\"map-container\">\n                <iframe\n                    class=\"map-iframe\"\n                    src=\"https://maps.google.com/maps?q=Andover%20High%20School%20MA&t=&z=15&ie=UTF8&iwloc=&output=embed\"\n                    allowfullscreen=\"\"\n                    loading=\"lazy\"\n                    referrerpolicy=\"no-referrer-when-downgrade\"\n                    title=\"Andover High School Location\">\n                </iframe>\n            </div>\n        </div>\n    `;\n}","size_bytes":1500},"js/components/common/SocialShare.js":{"content":"export function SocialShare(article, options = {}) {\n    const { variant = 'full' } = options;\n\n    const currentUrl = encodeURIComponent(window.location.href);\n    const title = encodeURIComponent(article.title);\n    const description = encodeURIComponent(article.description);\n\n    const shareLinks = [\n        { name: 'Email', icon: 'email.svg', url: `mailto:?subject=${title}&body=${description}%0A%0A${currentUrl}` },\n        { name: 'Facebook', icon: 'facebook.svg', url: `https://www.facebook.com/sharer/sharer.php?u=${currentUrl}` },\n        { name: 'X (Twitter)', icon: 'twitter.svg', url: `https://twitter.com/intent/tweet?url=${currentUrl}&text=${title}` },\n        { name: 'LinkedIn', icon: 'linkedin.svg', url: `https://www.linkedin.com/sharing/share-offsite/?url=${currentUrl}` },\n        { name: 'Reddit', icon: 'reddit.svg', url: `https://reddit.com/submit?url=${currentUrl}&title=${title}` },\n        { name: 'WhatsApp', icon: 'whatsapp.svg', url: `https://wa.me/?text=${title}%20${currentUrl}` }\n    ];\n\n    if (variant === 'minimal') {\n        const minimalButtons = shareLinks.slice(0, 5).map(link => `\n            <a href=\"${link.url}\"\n               target=\"_blank\"\n               rel=\"noopener noreferrer\"\n               class=\"social-share-button-minimal\"\n               title=\"Share on ${link.name}\"\n               aria-label=\"Share on ${link.name}\">\n                <img src=\"assets/icons/${link.icon}\" alt=\"${link.name}\" class=\"social-share-icon-minimal\" aria-hidden=\"true\">\n            </a>\n        `).join('');\n\n        const copyLinkButton = `\n            <button class=\"social-share-button-minimal copy-link-btn\" title=\"Copy link\" aria-label=\"Copy article link\">\n                <span class=\"copy-link-icon-wrapper\">\n                    <img src=\"assets/icons/link.svg\" alt=\"Copy link\" class=\"social-share-icon-minimal\" aria-hidden=\"true\">\n                </span>\n                <span class=\"copy-link-success-message\">Copied!</span>\n            </button>\n        `;\n\n        return `<div class=\"social-share-minimal\">${copyLinkButton}${minimalButtons}</div>`;\n\n    } else {\n        const allShareLinks = [ ...shareLinks,\n            { name: 'Telegram', icon: 'telegram.svg', url: `https://t.me/share/url?url=${currentUrl}&text=${title}` },\n            { name: 'Bluesky', icon: 'bluesky.svg', url: `https://bsky.app/intent/compose?text=${title}%20${currentUrl}` }\n        ];\n\n        const fullButtons = allShareLinks.map(link => `\n            <a href=\"${link.url}\"\n               target=\"_blank\"\n               rel=\"noopener noreferrer\"\n               class=\"social-share-button\"\n               aria-label=\"Share on ${link.name}\">\n                <img src=\"assets/icons/${link.icon}\" alt=\"\" class=\"social-share-icon\" aria-hidden=\"true\">\n                <span>${link.name}</span>\n            </a>\n        `).join('');\n\n        return `\n            <div class=\"social-share-container\">\n                <h4 class=\"social-share-title\">Share this Article</h4>\n                <div class=\"social-share-buttons\">\n                    ${fullButtons}\n                </div>\n            </div>\n        `;\n    }\n}","size_bytes":3134},"js/components/common/SortControl.js":{"content":"export function SortControl() {\n    return `\n        <div class=\"sort-container\">\n            <label for=\"sort-by\">Sort by:</label>\n            <select name=\"sort-by\" id=\"sort-by\">\n                <option value=\"date-desc\">Newest</option>\n                <option value=\"date-asc\">Oldest</option>\n                <option value=\"title-asc\">Title (A-Z)</option>\n                <option value=\"title-desc\">Title (Z-A)</option>\n            </select>\n        </div>\n    `;\n}","size_bytes":468},"js/components/forms/ContactForm.js":{"content":"export function ContactForm() {\n    return `\n        <form id=\"contact-form\" novalidate>\n            ${FormField({\n                id: 'contact-name',\n                label: 'Name (required)',\n                type: 'text',\n                required: true,\n                warningMessage: 'Please enter your name.'\n            })}\n            ${FormField({\n                id: 'contact-email',\n                label: 'Email (required)',\n                type: 'email',\n                required: true,\n                warningMessage: 'Please enter a valid email address.'\n            })}\n            ${FormField({\n                id: 'contact-website',\n                label: 'Website',\n                type: 'url',\n                placeholder: 'https://example.com',\n                warningMessage: 'Please enter a valid URL.'\n            })}\n            ${FormField({\n                id: 'contact-message',\n                label: 'Message (required)',\n                type: 'textarea',\n                rows: 5,\n                required: true,\n                warningMessage: 'Please enter your message.'\n            })}\n            <button type=\"submit\" class=\"button-primary\">Send Message</button>\n        </form>\n    `;\n}\n\nfunction FormField(options) {\n    const {\n        id,\n        label,\n        type = 'text',\n        required = false,\n        placeholder = '',\n        rows,\n        warningMessage\n    } = options;\n\n    const isTextarea = type === 'textarea';\n\n    const input = isTextarea\n        ? `<textarea id=\"${id}\" name=\"${id.replace('contact-', '')}\" rows=\"${rows}\" ${required ? 'required' : ''}></textarea>`\n        : `<input type=\"${type}\" id=\"${id}\" name=\"${id.replace('contact-', '')}\" ${required ? 'required' : ''} ${placeholder ? `placeholder=\"${placeholder}\"` : ''}>`;\n\n    return `\n        <div class=\"form-group\">\n            <label for=\"${id}\">${label}</label>\n            ${input}\n            <span class=\"warning-message\" data-warning-for=\"${id}\">${warningMessage}</span>\n        </div>\n    `;\n}","size_bytes":2021},"js/components/layout/Container.js":{"content":"export function Container(content, className = '') {\n    return `\n        <div class=\"container ${className}\">\n            ${content}\n        </div>\n    `;\n}","size_bytes":157},"js/components/layout/PageHeader.js":{"content":"export function PageHeader(title, subtitle = '') {\n    return `\n        <div class=\"page-header\">\n            <h1>${title}</h1>\n            ${subtitle ? `<p>${subtitle}</p>` : ''}\n        </div>\n    `;\n}","size_bytes":203},"js/components/layout/Section.js":{"content":"export function Section(options) {\n    const {\n        id = '',\n        className = 'page',\n        content = ''\n    } = options;\n\n    return `\n        <section ${id ? `id=\"${id}\"` : ''} class=\"${className}\">\n            ${content}\n        </section>\n    `;\n}","size_bytes":259},"js/components/metadata/Authors.js":{"content":"import { formatAuthorNamesSummary, formatAuthorNamesFull } from '../../lib/formatters.js';\n\nexport function AvatarStack(writers, { size = 'large', compact = false } = {}) {\n    if (!writers || writers.length === 0) {\n        return '';\n    }\n\n    const writersWithAvatars = writers;\n    let visibleAvatars;\n    if (compact) {\n        const maxVisible = 2;\n        visibleAvatars = writersWithAvatars.slice(0, maxVisible);\n    } else {\n        visibleAvatars = writersWithAvatars;\n    }\n    const avatars = visibleAvatars.map(writer => \n        `<img src=\"${writer.image}\" alt=\"${writer.name}\" title=\"${writer.name}\">`\n    ).join('');\n    const remainingCount = writers.length - visibleAvatars.length;\n\n    const moreAvatar = remainingCount > 0 \n        ? `<div class=\"avatar-more\">+${remainingCount}</div>` \n        : '';\n\n    return `\n        <div class=\"avatar-stack ${size}\">\n            ${avatars}\n            ${moreAvatar}\n        </div>\n    `;\n}\n\nexport function AuthorNames(writers, { fullNames = false } = {}) {\n    const formattedNames = fullNames \n        ? formatAuthorNamesFull(writers) \n        : formatAuthorNamesSummary(writers);\n\n    if (!formattedNames) {\n        return '';\n    }\n\n    return `By ${formattedNames}`;\n}\n\nexport function Authors(writers, options = {}) {\n    if (!writers || writers.length === 0) {\n        return '';\n    }\n\n    const {\n        size = 'large',\n        fullNames = false,\n        className = 'author-meta'\n    } = options;\n\n    const stack = AvatarStack(writers, { size, compact: true });\n    const names = AuthorNames(writers, { fullNames });\n\n    const namesSpan = names ? `<span>${names}</span>` : '';\n\n    return `\n        <div class=\"${className} ${size}\">\n            ${stack}\n            ${namesSpan}\n        </div>\n    `;\n}","size_bytes":1778}},"version":1}